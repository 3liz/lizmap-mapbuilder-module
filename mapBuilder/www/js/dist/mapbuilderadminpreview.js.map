{"version":3,"file":"mapbuilderadminpreview.js","mappings":"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F,GAEFF,EAAa3+F,KAAK6+F,EACpB,CACAz+F,KAAK+8F,aAAan9F,KAAK,CACrB,GAAkBw6F,OAClBkE,EACAC,EACA5iF,EACA2rD,EACAtqC,GAAA,GACA55B,IAEFpD,KAAKi9F,yBAAyBr9F,KAAK,CACjC,GAAkBw6F,OAClBkE,EACAC,EACA5iF,EACA6rD,GAAwBF,EACxBtqC,GAAA,GACA55B,IAEF,MACF,IAAK,UACL,IAAK,kBACH+6F,EAAc,GACdznE,EACU,WAARttB,EAC2D,EAErD00B,6BACFniB,EAASW,qBACftJ,EAAShT,KAAKk+F,uBACZxnE,EACA,EACuG,EAErGuH,UACF1hB,EACA4hF,GAEFn+F,KAAK+8F,aAAan9F,KAAK,CACrB,GAAkBw6F,OAClBkE,EACAH,EACAxiF,EACA2rD,EACAtqC,GAAA,GACA55B,IAEFpD,KAAKi9F,yBAAyBr9F,KAAK,CACjC,GAAkBw6F,OAClBkE,EACAH,EACAxiF,EACA6rD,GAAwBF,EACxBtqC,GAAA,GACA55B,IAEF,MACF,IAAK,aACL,IAAK,SACHszB,EAAkB/a,EAASW,qBAC3B8hF,EAAap+F,KAAKw9F,0BAChB9mE,EACA,EACAA,EAAgBr2B,OAChBkc,GACA,GACA,GAEFvc,KAAK+8F,aAAan9F,KAAK,CACrB,GAAkBw6F,OAClBkE,EACAF,EACAziF,EACA2rD,EACAtqC,GAAA,GACA55B,IAEFpD,KAAKi9F,yBAAyBr9F,KAAK,CACjC,GAAkBw6F,OAClBkE,EACAF,EACAziF,EACA6rD,GAAwBF,EACxBtqC,GAAA,GACA55B,IAEF,MACF,IAAK,aACHszB,EAAkB/a,EAASW,qBAC3B8hF,EAAap+F,KAAKq9F,2BAA2B3mE,EAAiBna,GAE1D6hF,EAAaE,IACft+F,KAAK+8F,aAAan9F,KAAK,CACrB,GAAkBw6F,OAClBkE,EACAF,EACAziF,EACA2rD,EACAtqC,GAAA,GACA55B,IAEFpD,KAAKi9F,yBAAyBr9F,KAAK,CACjC,GAAkBw6F,OAClBkE,EACAF,EACAziF,EACA6rD,GAAwBF,EACxBtqC,GAAA,GACA55B,K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","sources":["webpack://ol-webpack/webpack/runtime/load script","webpack://ol-webpack/./modules/BaseLayers/ lazy ^\\.\\/.*\\.js$ namespace object","webpack://ol-webpack/./node_modules/ol/ol.css","webpack://ol-webpack/./node_modules/css-loader/dist/runtime/api.js","webpack://ol-webpack/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://ol-webpack/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://ol-webpack/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://ol-webpack/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://ol-webpack/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://ol-webpack/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://ol-webpack/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://ol-webpack/./node_modules/ol/Disposable.js","webpack://ol-webpack/./node_modules/ol/Image.js","webpack://ol-webpack/./node_modules/ol/ImageState.js","webpack://ol-webpack/./node_modules/ol/ImageTile.js","webpack://ol-webpack/./node_modules/ol/Object.js","webpack://ol-webpack/./node_modules/ol/ObjectEventType.js","webpack://ol-webpack/./node_modules/ol/Observable.js","webpack://ol-webpack/./node_modules/ol/Tile.js","webpack://ol-webpack/./node_modules/ol/TileRange.js","webpack://ol-webpack/./node_modules/ol/TileState.js","webpack://ol-webpack/./node_modules/ol/ViewProperty.js","webpack://ol-webpack/./node_modules/ol/centerconstraint.js","webpack://ol-webpack/./node_modules/ol/resolutionconstraint.js","webpack://ol-webpack/./node_modules/ol/View.js","webpack://ol-webpack/./node_modules/ol/ViewHint.js","webpack://ol-webpack/./node_modules/ol/array.js","webpack://ol-webpack/./node_modules/ol/asserts.js","webpack://ol-webpack/./node_modules/color-space/rgb.js","webpack://ol-webpack/./node_modules/color-space/xyz.js","webpack://ol-webpack/./node_modules/color-space/luv.js","webpack://ol-webpack/./node_modules/color-space/lchuv.js","webpack://ol-webpack/./node_modules/color-name/index.js","webpack://ol-webpack/./node_modules/color-parse/index.js","webpack://ol-webpack/./node_modules/color-space/hsl.js","webpack://ol-webpack/./node_modules/ol/color.js","webpack://ol-webpack/./node_modules/color-rgba/index.js","webpack://ol-webpack/./node_modules/ol/console.js","webpack://ol-webpack/./node_modules/ol/coordinate.js","webpack://ol-webpack/./node_modules/ol/dom.js","webpack://ol-webpack/./node_modules/ol/easing.js","webpack://ol-webpack/./node_modules/ol/events.js","webpack://ol-webpack/./node_modules/ol/events/Event.js","webpack://ol-webpack/./node_modules/ol/events/EventType.js","webpack://ol-webpack/./node_modules/ol/events/Target.js","webpack://ol-webpack/./node_modules/ol/extent.js","webpack://ol-webpack/./node_modules/ol/extent/Relationship.js","webpack://ol-webpack/./node_modules/ol/functions.js","webpack://ol-webpack/./node_modules/ol/geom/Geometry.js","webpack://ol-webpack/./node_modules/ol/geom/Point.js","webpack://ol-webpack/./node_modules/ol/geom/LinearRing.js","webpack://ol-webpack/./node_modules/ol/geom/Polygon.js","webpack://ol-webpack/./node_modules/ol/geom/SimpleGeometry.js","webpack://ol-webpack/./node_modules/ol/geom/flat/area.js","webpack://ol-webpack/./node_modules/ol/geom/flat/closest.js","webpack://ol-webpack/./node_modules/ol/geom/flat/contains.js","webpack://ol-webpack/./node_modules/ol/geom/flat/deflate.js","webpack://ol-webpack/./node_modules/ol/geom/flat/inflate.js","webpack://ol-webpack/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ol-webpack/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ol-webpack/./node_modules/ol/geom/flat/reverse.js","webpack://ol-webpack/./node_modules/ol/geom/flat/orient.js","webpack://ol-webpack/./node_modules/ol/geom/flat/segments.js","webpack://ol-webpack/./node_modules/ol/geom/flat/simplify.js","webpack://ol-webpack/./node_modules/ol/geom/flat/transform.js","webpack://ol-webpack/./node_modules/ol/has.js","webpack://ol-webpack/./node_modules/ol/layer/Base.js","webpack://ol-webpack/./node_modules/ol/layer/Layer.js","webpack://ol-webpack/./node_modules/ol/layer/Property.js","webpack://ol-webpack/./node_modules/ol/layer/TileProperty.js","webpack://ol-webpack/./node_modules/ol/layer/BaseTile.js","webpack://ol-webpack/./node_modules/ol/DataTile.js","webpack://ol-webpack/./node_modules/ol/structs/LRUCache.js","webpack://ol-webpack/./node_modules/ol/reproj/DataTile.js","webpack://ol-webpack/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ol-webpack/./node_modules/ol/layer/Tile.js","webpack://ol-webpack/./node_modules/ol/math.js","webpack://ol-webpack/./node_modules/ol/obj.js","webpack://ol-webpack/./node_modules/ol/proj/Units.js","webpack://ol-webpack/./node_modules/ol/proj/Projection.js","webpack://ol-webpack/./node_modules/ol/proj/epsg3857.js","webpack://ol-webpack/./node_modules/ol/proj/epsg4326.js","webpack://ol-webpack/./node_modules/ol/proj/projections.js","webpack://ol-webpack/./node_modules/ol/proj/transforms.js","webpack://ol-webpack/./node_modules/ol/proj.js","webpack://ol-webpack/./node_modules/ol/render/Event.js","webpack://ol-webpack/./node_modules/ol/render/EventType.js","webpack://ol-webpack/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://ol-webpack/./node_modules/ol/renderer/Layer.js","webpack://ol-webpack/./node_modules/ol/renderer/canvas/Layer.js","webpack://ol-webpack/./node_modules/ol/reproj.js","webpack://ol-webpack/./node_modules/ol/reproj/Tile.js","webpack://ol-webpack/./node_modules/ol/reproj/Triangulation.js","webpack://ol-webpack/./node_modules/ol/reproj/common.js","webpack://ol-webpack/./node_modules/ol/rotationconstraint.js","webpack://ol-webpack/./node_modules/ol/size.js","webpack://ol-webpack/./node_modules/ol/source/OSM.js","webpack://ol-webpack/./node_modules/ol/source/Source.js","webpack://ol-webpack/./node_modules/ol/source/Tile.js","webpack://ol-webpack/./node_modules/ol/source/UrlTile.js","webpack://ol-webpack/./node_modules/ol/source/TileEventType.js","webpack://ol-webpack/./node_modules/ol/source/TileImage.js","webpack://ol-webpack/./node_modules/ol/source/XYZ.js","webpack://ol-webpack/./node_modules/ol/sphere.js","webpack://ol-webpack/./node_modules/ol/tilecoord.js","webpack://ol-webpack/./node_modules/ol/tilegrid.js","webpack://ol-webpack/./node_modules/ol/tilegrid/TileGrid.js","webpack://ol-webpack/./node_modules/ol/tilegrid/common.js","webpack://ol-webpack/./node_modules/ol/tileurlfunction.js","webpack://ol-webpack/./node_modules/ol/transform.js","webpack://ol-webpack/./node_modules/ol/uri.js","webpack://ol-webpack/./node_modules/ol/util.js","webpack://ol-webpack/webpack/bootstrap","webpack://ol-webpack/webpack/runtime/compat get default export","webpack://ol-webpack/webpack/runtime/define property getters","webpack://ol-webpack/webpack/runtime/ensure chunk","webpack://ol-webpack/webpack/runtime/get javascript chunk filename","webpack://ol-webpack/webpack/runtime/global","webpack://ol-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://ol-webpack/webpack/runtime/make namespace object","webpack://ol-webpack/webpack/runtime/publicPath","webpack://ol-webpack/webpack/runtime/jsonp chunk loading","webpack://ol-webpack/webpack/runtime/nonce","webpack://ol-webpack/./node_modules/ol/ol.css?ee3c","webpack://ol-webpack/./node_modules/ol/CollectionEventType.js","webpack://ol-webpack/./node_modules/ol/Collection.js","webpack://ol-webpack/./node_modules/quickselect/index.js","webpack://ol-webpack/./node_modules/rbush/index.js","webpack://ol-webpack/./node_modules/ol/style/Image.js","webpack://ol-webpack/./node_modules/ol/style/IconImageCache.js","webpack://ol-webpack/./node_modules/ol/style/IconImage.js","webpack://ol-webpack/./node_modules/ol/colorlike.js","webpack://ol-webpack/./node_modules/ol/css.js","webpack://ol-webpack/./node_modules/ol/render/canvas.js","webpack://ol-webpack/./node_modules/ol/style/RegularShape.js","webpack://ol-webpack/./node_modules/ol/style/Circle.js","webpack://ol-webpack/./node_modules/ol/style/Fill.js","webpack://ol-webpack/./node_modules/ol/style/Stroke.js","webpack://ol-webpack/./node_modules/ol/style/Style.js","webpack://ol-webpack/./node_modules/ol/style/Icon.js","webpack://ol-webpack/./node_modules/ol/style/Text.js","webpack://ol-webpack/./node_modules/ol/expr/expression.js","webpack://ol-webpack/./node_modules/ol/expr/cpu.js","webpack://ol-webpack/./node_modules/ol/render/canvas/style.js","webpack://ol-webpack/./node_modules/ol/layer/BaseVector.js","webpack://ol-webpack/./node_modules/ol/renderer/Map.js","webpack://ol-webpack/./node_modules/ol/renderer/Composite.js","webpack://ol-webpack/./node_modules/ol/layer/Group.js","webpack://ol-webpack/./node_modules/ol/MapEvent.js","webpack://ol-webpack/./node_modules/ol/MapBrowserEvent.js","webpack://ol-webpack/./node_modules/ol/MapBrowserEventType.js","webpack://ol-webpack/./node_modules/ol/pointer/EventType.js","webpack://ol-webpack/./node_modules/ol/MapBrowserEventHandler.js","webpack://ol-webpack/./node_modules/ol/MapEventType.js","webpack://ol-webpack/./node_modules/ol/MapProperty.js","webpack://ol-webpack/./node_modules/ol/structs/PriorityQueue.js","webpack://ol-webpack/./node_modules/ol/TileQueue.js","webpack://ol-webpack/./node_modules/ol/control/Control.js","webpack://ol-webpack/./node_modules/ol/control/Attribution.js","webpack://ol-webpack/./node_modules/ol/control/Rotate.js","webpack://ol-webpack/./node_modules/ol/control/Zoom.js","webpack://ol-webpack/./node_modules/ol/control/defaults.js","webpack://ol-webpack/./node_modules/ol/interaction/Property.js","webpack://ol-webpack/./node_modules/ol/interaction/Interaction.js","webpack://ol-webpack/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ol-webpack/./node_modules/ol/interaction/Pointer.js","webpack://ol-webpack/./node_modules/ol/events/condition.js","webpack://ol-webpack/./node_modules/ol/interaction/DragPan.js","webpack://ol-webpack/./node_modules/ol/interaction/DragRotate.js","webpack://ol-webpack/./node_modules/ol/render/Box.js","webpack://ol-webpack/./node_modules/ol/interaction/DragBox.js","webpack://ol-webpack/./node_modules/ol/interaction/DragZoom.js","webpack://ol-webpack/./node_modules/ol/events/Key.js","webpack://ol-webpack/./node_modules/ol/interaction/KeyboardPan.js","webpack://ol-webpack/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ol-webpack/./node_modules/ol/Kinetic.js","webpack://ol-webpack/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ol-webpack/./node_modules/ol/interaction/PinchRotate.js","webpack://ol-webpack/./node_modules/ol/interaction/PinchZoom.js","webpack://ol-webpack/./node_modules/ol/Map.js","webpack://ol-webpack/./node_modules/ol/interaction/defaults.js","webpack://ol-webpack/./node_modules/ol/Feature.js","webpack://ol-webpack/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-webpack/./node_modules/ol/render/VectorContext.js","webpack://ol-webpack/./node_modules/ol/render/canvas/Builder.js","webpack://ol-webpack/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-webpack/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-webpack/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-webpack/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-webpack/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-webpack/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-webpack/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-webpack/./node_modules/ol/geom/flat/textpath.js","webpack://ol-webpack/./node_modules/ol/geom/flat/length.js","webpack://ol-webpack/./node_modules/ol/render/canvas/Executor.js","webpack://ol-webpack/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-webpack/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-webpack/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-webpack/./node_modules/ol/renderer/vector.js","webpack://ol-webpack/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ol-webpack/./node_modules/ol/layer/Vector.js","webpack://ol-webpack/./node_modules/ol/structs/RBush.js","webpack://ol-webpack/./node_modules/ol/geom/flat/interpolate.js","webpack://ol-webpack/./node_modules/ol/render/Feature.js","webpack://ol-webpack/./node_modules/ol/geom/flat/center.js","webpack://ol-webpack/./node_modules/ol/source/VectorEventType.js","webpack://ol-webpack/./node_modules/ol/loadingstrategy.js","webpack://ol-webpack/./node_modules/ol/featureloader.js","webpack://ol-webpack/./node_modules/ol/source/Vector.js","webpack://ol-webpack/./components/AdminControls/ZoomToOriginControl.js","webpack://ol-webpack/./mainadminpreview.js"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"ol-webpack:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","var map = {\n\t\"./bingHybrid.js\": [\n\t\t5155,\n\t\t155\n\t],\n\t\"./bingSatellite.js\": [\n\t\t7460,\n\t\t460\n\t],\n\t\"./bingStreets.js\": [\n\t\t6885,\n\t\t885\n\t],\n\t\"./ignCadastral.js\": [\n\t\t9822,\n\t\t598,\n\t\t822\n\t],\n\t\"./ignSatellite.js\": [\n\t\t9144,\n\t\t598,\n\t\t144\n\t],\n\t\"./ignStreets.js\": [\n\t\t7321,\n\t\t598,\n\t\t321\n\t],\n\t\"./osmMapnik.js\": [\n\t\t2738,\n\t\t738\n\t],\n\t\"./osmStadiaMapsToner.js\": [\n\t\t3323,\n\t\t323\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 7274;\nmodule.exports = webpackAsyncContext;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `:root,\n:host {\n  --ol-background-color: white;\n  --ol-accent-background-color: #F5F5F5;\n  --ol-subtle-background-color: rgba(128, 128, 128, 0.25);\n  --ol-partial-background-color: rgba(255, 255, 255, 0.75);\n  --ol-foreground-color: #333333;\n  --ol-subtle-foreground-color: #666666;\n  --ol-brand-color: #00AAFF;\n}\n\n.ol-box {\n  box-sizing: border-box;\n  border-radius: 2px;\n  border: 1.5px solid var(--ol-background-color);\n  background-color: var(--ol-partial-background-color);\n}\n\n.ol-mouse-position {\n  top: 8px;\n  right: 8px;\n  position: absolute;\n}\n\n.ol-scale-line {\n  background: var(--ol-partial-background-color);\n  border-radius: 4px;\n  bottom: 8px;\n  left: 8px;\n  padding: 2px;\n  position: absolute;\n}\n\n.ol-scale-line-inner {\n  border: 1px solid var(--ol-subtle-foreground-color);\n  border-top: none;\n  color: var(--ol-foreground-color);\n  font-size: 10px;\n  text-align: center;\n  margin: 1px;\n  will-change: contents, width;\n  transition: all 0.25s;\n}\n\n.ol-scale-bar {\n  position: absolute;\n  bottom: 8px;\n  left: 8px;\n}\n\n.ol-scale-bar-inner {\n  display: flex;\n}\n\n.ol-scale-step-marker {\n  width: 1px;\n  height: 15px;\n  background-color: var(--ol-foreground-color);\n  float: right;\n  z-index: 10;\n}\n\n.ol-scale-step-text {\n  position: absolute;\n  bottom: -5px;\n  font-size: 10px;\n  z-index: 11;\n  color: var(--ol-foreground-color);\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\n}\n\n.ol-scale-text {\n  position: absolute;\n  font-size: 12px;\n  text-align: center;\n  bottom: 25px;\n  color: var(--ol-foreground-color);\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\n}\n\n.ol-scale-singlebar {\n  position: relative;\n  height: 10px;\n  z-index: 9;\n  box-sizing: border-box;\n  border: 1px solid var(--ol-foreground-color);\n}\n\n.ol-scale-singlebar-even {\n  background-color: var(--ol-subtle-foreground-color);\n}\n\n.ol-scale-singlebar-odd {\n  background-color: var(--ol-background-color);\n}\n\n.ol-unsupported {\n  display: none;\n}\n\n.ol-viewport,\n.ol-unselectable {\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.ol-viewport canvas {\n  all: unset;\n  overflow: hidden;\n}\n\n.ol-viewport {\n  touch-action: pan-x pan-y;\n}\n\n.ol-selectable {\n  -webkit-touch-callout: default;\n  -webkit-user-select: text;\n  -moz-user-select: text;\n  user-select: text;\n}\n\n.ol-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: -moz-grabbing;\n  cursor: grabbing;\n}\n\n.ol-grab {\n  cursor: move;\n  cursor: -webkit-grab;\n  cursor: -moz-grab;\n  cursor: grab;\n}\n\n.ol-control {\n  position: absolute;\n  background-color: var(--ol-subtle-background-color);\n  border-radius: 4px;\n}\n\n.ol-zoom {\n  top: .5em;\n  left: .5em;\n}\n\n.ol-rotate {\n  top: .5em;\n  right: .5em;\n  transition: opacity .25s linear, visibility 0s linear;\n}\n\n.ol-rotate.ol-hidden {\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity .25s linear, visibility 0s linear .25s;\n}\n\n.ol-zoom-extent {\n  top: 4.643em;\n  left: .5em;\n}\n\n.ol-full-screen {\n  right: .5em;\n  top: .5em;\n}\n\n.ol-control button {\n  display: block;\n  margin: 1px;\n  padding: 0;\n  color: var(--ol-subtle-foreground-color);\n  font-weight: bold;\n  text-decoration: none;\n  font-size: inherit;\n  text-align: center;\n  height: 1.375em;\n  width: 1.375em;\n  line-height: .4em;\n  background-color: var(--ol-background-color);\n  border: none;\n  border-radius: 2px;\n}\n\n.ol-control button::-moz-focus-inner {\n  border: none;\n  padding: 0;\n}\n\n.ol-zoom-extent button {\n  line-height: 1.4em;\n}\n\n.ol-compass {\n  display: block;\n  font-weight: normal;\n  will-change: transform;\n}\n\n.ol-touch .ol-control button {\n  font-size: 1.5em;\n}\n\n.ol-touch .ol-zoom-extent {\n  top: 5.5em;\n}\n\n.ol-control button:hover,\n.ol-control button:focus {\n  text-decoration: none;\n  outline: 1px solid var(--ol-subtle-foreground-color);\n  color: var(--ol-foreground-color);\n}\n\n.ol-zoom .ol-zoom-in {\n  border-radius: 2px 2px 0 0;\n}\n\n.ol-zoom .ol-zoom-out {\n  border-radius: 0 0 2px 2px;\n}\n\n.ol-attribution {\n  text-align: right;\n  bottom: .5em;\n  right: .5em;\n  max-width: calc(100% - 1.3em);\n  display: flex;\n  flex-flow: row-reverse;\n  align-items: center;\n}\n\n.ol-attribution a {\n  color: var(--ol-subtle-foreground-color);\n  text-decoration: none;\n}\n\n.ol-attribution ul {\n  margin: 0;\n  padding: 1px .5em;\n  color: var(--ol-foreground-color);\n  text-shadow: 0 0 2px var(--ol-background-color);\n  font-size: 12px;\n}\n\n.ol-attribution li {\n  display: inline;\n  list-style: none;\n}\n\n.ol-attribution li:not(:last-child):after {\n  content: \" \";\n}\n\n.ol-attribution img {\n  max-height: 2em;\n  max-width: inherit;\n  vertical-align: middle;\n}\n\n.ol-attribution button {\n  flex-shrink: 0;\n}\n\n.ol-attribution.ol-collapsed ul {\n  display: none;\n}\n\n.ol-attribution:not(.ol-collapsed) {\n  background: var(--ol-partial-background-color);\n}\n\n.ol-attribution.ol-uncollapsible {\n  bottom: 0;\n  right: 0;\n  border-radius: 4px 0 0;\n}\n\n.ol-attribution.ol-uncollapsible img {\n  margin-top: -.2em;\n  max-height: 1.6em;\n}\n\n.ol-attribution.ol-uncollapsible button {\n  display: none;\n}\n\n.ol-zoomslider {\n  top: 4.5em;\n  left: .5em;\n  height: 200px;\n}\n\n.ol-zoomslider button {\n  position: relative;\n  height: 10px;\n}\n\n.ol-touch .ol-zoomslider {\n  top: 5.5em;\n}\n\n.ol-overviewmap {\n  left: 0.5em;\n  bottom: 0.5em;\n}\n\n.ol-overviewmap.ol-uncollapsible {\n  bottom: 0;\n  left: 0;\n  border-radius: 0 4px 0 0;\n}\n\n.ol-overviewmap .ol-overviewmap-map,\n.ol-overviewmap button {\n  display: block;\n}\n\n.ol-overviewmap .ol-overviewmap-map {\n  border: 1px solid var(--ol-subtle-foreground-color);\n  height: 150px;\n  width: 150px;\n}\n\n.ol-overviewmap:not(.ol-collapsed) button {\n  bottom: 0;\n  left: 0;\n  position: absolute;\n}\n\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\n.ol-overviewmap.ol-uncollapsible button {\n  display: none;\n}\n\n.ol-overviewmap:not(.ol-collapsed) {\n  background: var(--ol-subtle-background-color);\n}\n\n.ol-overviewmap-box {\n  border: 1.5px dotted var(--ol-subtle-foreground-color);\n}\n\n.ol-overviewmap .ol-overviewmap-box:hover {\n  cursor: move;\n}\n\n.ol-overviewmap .ol-viewport:hover {\n  cursor: pointer;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/ol/ol.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\":root,\\n:host {\\n  --ol-background-color: white;\\n  --ol-accent-background-color: #F5F5F5;\\n  --ol-subtle-background-color: rgba(128, 128, 128, 0.25);\\n  --ol-partial-background-color: rgba(255, 255, 255, 0.75);\\n  --ol-foreground-color: #333333;\\n  --ol-subtle-foreground-color: #666666;\\n  --ol-brand-color: #00AAFF;\\n}\\n\\n.ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 1.5px solid var(--ol-background-color);\\n  background-color: var(--ol-partial-background-color);\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: var(--ol-partial-background-color);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line-inner {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  border-top: none;\\n  color: var(--ol-foreground-color);\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n\\n.ol-scale-bar-inner {\\n  display: flex;\\n}\\n\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: var(--ol-foreground-color);\\n  float: right;\\n  z-index: 10;\\n}\\n\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 10px;\\n  z-index: 11;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 12px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: var(--ol-foreground-color);\\n  text-shadow: -1.5px 0 var(--ol-partial-background-color), 0 1.5px var(--ol-partial-background-color), 1.5px 0 var(--ol-partial-background-color), 0 -1.5px var(--ol-partial-background-color);\\n}\\n\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-index: 9;\\n  box-sizing: border-box;\\n  border: 1px solid var(--ol-foreground-color);\\n}\\n\\n.ol-scale-singlebar-even {\\n  background-color: var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-scale-singlebar-odd {\\n  background-color: var(--ol-background-color);\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n\\n.ol-viewport,\\n.ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: transparent;\\n}\\n\\n.ol-viewport canvas {\\n  all: unset;\\n  overflow: hidden;\\n}\\n\\n.ol-viewport {\\n  touch-action: pan-x pan-y;\\n}\\n\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  user-select: text;\\n}\\n\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n\\n.ol-control {\\n  position: absolute;\\n  background-color: var(--ol-subtle-background-color);\\n  border-radius: 4px;\\n}\\n\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: var(--ol-subtle-foreground-color);\\n  font-weight: bold;\\n  text-decoration: none;\\n  font-size: inherit;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: var(--ol-background-color);\\n  border: none;\\n  border-radius: 2px;\\n}\\n\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  will-change: transform;\\n}\\n\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  outline: 1px solid var(--ol-subtle-foreground-color);\\n  color: var(--ol-foreground-color);\\n}\\n\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n  display: flex;\\n  flex-flow: row-reverse;\\n  align-items: center;\\n}\\n\\n.ol-attribution a {\\n  color: var(--ol-subtle-foreground-color);\\n  text-decoration: none;\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 1px .5em;\\n  color: var(--ol-foreground-color);\\n  text-shadow: 0 0 2px var(--ol-background-color);\\n  font-size: 12px;\\n}\\n\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n}\\n\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n\\n.ol-attribution button {\\n  flex-shrink: 0;\\n}\\n\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n\\n.ol-attribution:not(.ol-collapsed) {\\n  background: var(--ol-partial-background-color);\\n}\\n\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n}\\n\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: block;\\n}\\n\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid var(--ol-subtle-foreground-color);\\n  height: 150px;\\n  width: 150px;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) button {\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n}\\n\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: var(--ol-subtle-background-color);\\n}\\n\\n.ol-overviewmap-box {\\n  border: 1.5px dotted var(--ol-subtle-foreground-color);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\\n.ol-overviewmap .ol-viewport:hover {\\n  cursor: pointer;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","export default {\n\taliceblue: [240, 248, 255],\n\tantiquewhite: [250, 235, 215],\n\taqua: [0, 255, 255],\n\taquamarine: [127, 255, 212],\n\tazure: [240, 255, 255],\n\tbeige: [245, 245, 220],\n\tbisque: [255, 228, 196],\n\tblack: [0, 0, 0],\n\tblanchedalmond: [255, 235, 205],\n\tblue: [0, 0, 255],\n\tblueviolet: [138, 43, 226],\n\tbrown: [165, 42, 42],\n\tburlywood: [222, 184, 135],\n\tcadetblue: [95, 158, 160],\n\tchartreuse: [127, 255, 0],\n\tchocolate: [210, 105, 30],\n\tcoral: [255, 127, 80],\n\tcornflowerblue: [100, 149, 237],\n\tcornsilk: [255, 248, 220],\n\tcrimson: [220, 20, 60],\n\tcyan: [0, 255, 255],\n\tdarkblue: [0, 0, 139],\n\tdarkcyan: [0, 139, 139],\n\tdarkgoldenrod: [184, 134, 11],\n\tdarkgray: [169, 169, 169],\n\tdarkgreen: [0, 100, 0],\n\tdarkgrey: [169, 169, 169],\n\tdarkkhaki: [189, 183, 107],\n\tdarkmagenta: [139, 0, 139],\n\tdarkolivegreen: [85, 107, 47],\n\tdarkorange: [255, 140, 0],\n\tdarkorchid: [153, 50, 204],\n\tdarkred: [139, 0, 0],\n\tdarksalmon: [233, 150, 122],\n\tdarkseagreen: [143, 188, 143],\n\tdarkslateblue: [72, 61, 139],\n\tdarkslategray: [47, 79, 79],\n\tdarkslategrey: [47, 79, 79],\n\tdarkturquoise: [0, 206, 209],\n\tdarkviolet: [148, 0, 211],\n\tdeeppink: [255, 20, 147],\n\tdeepskyblue: [0, 191, 255],\n\tdimgray: [105, 105, 105],\n\tdimgrey: [105, 105, 105],\n\tdodgerblue: [30, 144, 255],\n\tfirebrick: [178, 34, 34],\n\tfloralwhite: [255, 250, 240],\n\tforestgreen: [34, 139, 34],\n\tfuchsia: [255, 0, 255],\n\tgainsboro: [220, 220, 220],\n\tghostwhite: [248, 248, 255],\n\tgold: [255, 215, 0],\n\tgoldenrod: [218, 165, 32],\n\tgray: [128, 128, 128],\n\tgreen: [0, 128, 0],\n\tgreenyellow: [173, 255, 47],\n\tgrey: [128, 128, 128],\n\thoneydew: [240, 255, 240],\n\thotpink: [255, 105, 180],\n\tindianred: [205, 92, 92],\n\tindigo: [75, 0, 130],\n\tivory: [255, 255, 240],\n\tkhaki: [240, 230, 140],\n\tlavender: [230, 230, 250],\n\tlavenderblush: [255, 240, 245],\n\tlawngreen: [124, 252, 0],\n\tlemonchiffon: [255, 250, 205],\n\tlightblue: [173, 216, 230],\n\tlightcoral: [240, 128, 128],\n\tlightcyan: [224, 255, 255],\n\tlightgoldenrodyellow: [250, 250, 210],\n\tlightgray: [211, 211, 211],\n\tlightgreen: [144, 238, 144],\n\tlightgrey: [211, 211, 211],\n\tlightpink: [255, 182, 193],\n\tlightsalmon: [255, 160, 122],\n\tlightseagreen: [32, 178, 170],\n\tlightskyblue: [135, 206, 250],\n\tlightslategray: [119, 136, 153],\n\tlightslategrey: [119, 136, 153],\n\tlightsteelblue: [176, 196, 222],\n\tlightyellow: [255, 255, 224],\n\tlime: [0, 255, 0],\n\tlimegreen: [50, 205, 50],\n\tlinen: [250, 240, 230],\n\tmagenta: [255, 0, 255],\n\tmaroon: [128, 0, 0],\n\tmediumaquamarine: [102, 205, 170],\n\tmediumblue: [0, 0, 205],\n\tmediumorchid: [186, 85, 211],\n\tmediumpurple: [147, 112, 219],\n\tmediumseagreen: [60, 179, 113],\n\tmediumslateblue: [123, 104, 238],\n\tmediumspringgreen: [0, 250, 154],\n\tmediumturquoise: [72, 209, 204],\n\tmediumvioletred: [199, 21, 133],\n\tmidnightblue: [25, 25, 112],\n\tmintcream: [245, 255, 250],\n\tmistyrose: [255, 228, 225],\n\tmoccasin: [255, 228, 181],\n\tnavajowhite: [255, 222, 173],\n\tnavy: [0, 0, 128],\n\toldlace: [253, 245, 230],\n\tolive: [128, 128, 0],\n\tolivedrab: [107, 142, 35],\n\torange: [255, 165, 0],\n\torangered: [255, 69, 0],\n\torchid: [218, 112, 214],\n\tpalegoldenrod: [238, 232, 170],\n\tpalegreen: [152, 251, 152],\n\tpaleturquoise: [175, 238, 238],\n\tpalevioletred: [219, 112, 147],\n\tpapayawhip: [255, 239, 213],\n\tpeachpuff: [255, 218, 185],\n\tperu: [205, 133, 63],\n\tpink: [255, 192, 203],\n\tplum: [221, 160, 221],\n\tpowderblue: [176, 224, 230],\n\tpurple: [128, 0, 128],\n\trebeccapurple: [102, 51, 153],\n\tred: [255, 0, 0],\n\trosybrown: [188, 143, 143],\n\troyalblue: [65, 105, 225],\n\tsaddlebrown: [139, 69, 19],\n\tsalmon: [250, 128, 114],\n\tsandybrown: [244, 164, 96],\n\tseagreen: [46, 139, 87],\n\tseashell: [255, 245, 238],\n\tsienna: [160, 82, 45],\n\tsilver: [192, 192, 192],\n\tskyblue: [135, 206, 235],\n\tslateblue: [106, 90, 205],\n\tslategray: [112, 128, 144],\n\tslategrey: [112, 128, 144],\n\tsnow: [255, 250, 250],\n\tspringgreen: [0, 255, 127],\n\tsteelblue: [70, 130, 180],\n\ttan: [210, 180, 140],\n\tteal: [0, 128, 128],\n\tthistle: [216, 191, 216],\n\ttomato: [255, 99, 71],\n\tturquoise: [64, 224, 208],\n\tviolet: [238, 130, 238],\n\twheat: [245, 222, 179],\n\twhite: [255, 255, 255],\n\twhitesmoke: [245, 245, 245],\n\tyellow: [255, 255, 0],\n\tyellowgreen: [154, 205, 50]\n}\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @this {typeof target}\n     */\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(thisArg ?? this, arguments);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      const entry = this.pop();\n      if (entry instanceof Disposable) {\n        entry.dispose();\n      }\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/reproj/DataTile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport DataTile, {asArrayLike, asImageLike, toArray} from '../DataTile.js';\nimport EventType from '../events/EventType.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D, releaseCanvas} from '../dom.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../DataTile.js\").default} TileGetter\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {DataTile} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n * @property {import(\"../proj/Projection.js\").default} targetProj Target projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n * @property {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n * @property {import(\"../tilecoord.js\").TileCoord} [wrappedTileCoord] Coordinate of the tile wrapped in X.\n * @property {number} pixelRatio Pixel ratio.\n * @property {number} gutter Gutter of the source tiles.\n * @property {TileGetter} getTileFunction Function returning source tiles (z, x, y, pixelRatio).\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {number} [errorThreshold] Acceptable reprojection error (in px).\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected data tile.\n * See {@link module:ol/source/DataTile~DataTileSource}.\n *\n */\nclass ReprojDataTile extends DataTile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    super({\n      tileCoord: options.tileCoord,\n      loader: () => Promise.resolve(new Uint8ClampedArray(4)),\n      interpolate: options.interpolate,\n      transition: options.transition,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter;\n\n    /**\n     * @type {import(\"../DataTile.js\").Data}\n     * @private\n     */\n    this.reprojData_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.reprojError_ = null;\n\n    /**\n     * @type {import('../size.js').Size}\n     * @private\n     */\n    this.reprojSize_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = options.sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = options.targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = options.wrappedTileCoord || options.tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const sourceProj = options.sourceProj;\n    const sourceProjExtent = sourceProj.getExtent();\n    const sourceTileGridExtent = options.sourceTileGrid.getExtent();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceTileGridExtent\n        ? getIntersection(sourceProjExtent, sourceTileGridExtent)\n        : sourceProjExtent\n      : sourceTileGridExtent;\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = this.targetTileGrid_.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const targetProj = options.targetProj;\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      options.errorThreshold !== undefined\n        ? options.errorThreshold\n        : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = this.sourceTileGrid_.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = this.sourceTileGrid_.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n        const getTile = options.getTileFunction;\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTile(this.sourceZ_, srcX, srcY, this.pixelRatio_);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('../size.js').Size} Tile size.\n   * @override\n   */\n  getSize() {\n    return this.reprojSize_;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {import(\"../DataTile.js\").Data} Tile data.\n   * @override\n   */\n  getData() {\n    return this.reprojData_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @override\n   */\n  getError() {\n    return this.reprojError_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const dataSources = [];\n    let imageLike = false;\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const size = tile.getSize();\n      const gutter = this.gutter_;\n      /**\n       * @type {import(\"../DataTile.js\").ArrayLike}\n       */\n      let tileData;\n      const arrayData = asArrayLike(tile.getData());\n      if (arrayData) {\n        tileData = arrayData;\n      } else {\n        imageLike = true;\n        tileData = toArray(asImageLike(tile.getData()));\n      }\n      const pixelSize = [size[0] + 2 * gutter, size[1] + 2 * gutter];\n      const isFloat = tileData instanceof Float32Array;\n      const pixelCount = pixelSize[0] * pixelSize[1];\n      const DataType = isFloat ? Float32Array : Uint8ClampedArray;\n      const tileDataR = new DataType(tileData.buffer);\n      const bytesPerElement = DataType.BYTES_PER_ELEMENT;\n      const bytesPerPixel = (bytesPerElement * tileDataR.length) / pixelCount;\n      const bytesPerRow = tileDataR.byteLength / pixelSize[1];\n      const bandCount = Math.floor(\n        bytesPerRow / bytesPerElement / pixelSize[0],\n      );\n      const packedLength = pixelCount * bandCount;\n      let packedData = tileDataR;\n      if (tileDataR.length !== packedLength) {\n        packedData = new DataType(packedLength);\n        let dataIndex = 0;\n        let rowOffset = 0;\n        const colCount = pixelSize[0] * bandCount;\n        for (let rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n          for (let colIndex = 0; colIndex < colCount; ++colIndex) {\n            packedData[dataIndex++] = tileDataR[rowOffset + colIndex];\n          }\n          rowOffset += bytesPerRow / bytesPerElement;\n        }\n      }\n      const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n      extent[0] += source.offset;\n      extent[2] += source.offset;\n      const clipExtent = this.clipExtent_?.slice();\n      if (clipExtent) {\n        clipExtent[0] += source.offset;\n        clipExtent[2] += source.offset;\n      }\n      dataSources.push({\n        extent: extent,\n        clipExtent: clipExtent,\n        data: new Uint8ClampedArray(packedData.buffer),\n        dataType: DataType,\n        bytesPerPixel: bytesPerPixel,\n        pixelSize: pixelSize,\n      });\n    });\n    this.sourceTiles_.length = 0;\n\n    if (dataSources.length === 0) {\n      this.state = TileState.ERROR;\n      this.changed();\n      return;\n    }\n\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const targetWidth = typeof size === 'number' ? size : size[0];\n    const targetHeight = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n\n    let dataR, dataU;\n\n    const bytesPerPixel = dataSources[0].bytesPerPixel;\n\n    const reprojs = Math.ceil(bytesPerPixel / 3);\n    for (let reproj = reprojs - 1; reproj >= 0; --reproj) {\n      const sources = [];\n      for (let i = 0, len = dataSources.length; i < len; ++i) {\n        const dataSource = dataSources[i];\n        const buffer = dataSource.data;\n        const pixelSize = dataSource.pixelSize;\n        const width = pixelSize[0];\n        const height = pixelSize[1];\n        const context = createCanvasContext2D(width, height, canvasPool);\n        const imageData = context.createImageData(width, height);\n        const data = imageData.data;\n        let offset = reproj * 3;\n        for (let j = 0, len = data.length; j < len; j += 4) {\n          data[j] = buffer[offset];\n          data[j + 1] = buffer[offset + 1];\n          data[j + 2] = buffer[offset + 2];\n          data[j + 3] = 255;\n          offset += bytesPerPixel;\n        }\n        context.putImageData(imageData, 0, 0);\n        sources.push({\n          extent: dataSource.extent,\n          clipExtent: dataSource.clipExtent,\n          image: context.canvas,\n        });\n      }\n\n      const canvas = renderReprojected(\n        targetWidth,\n        targetHeight,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        false,\n        false,\n        false,\n      );\n\n      for (let i = 0, len = sources.length; i < len; ++i) {\n        const canvas = sources[i].image;\n        const context = canvas.getContext('2d');\n        releaseCanvas(context);\n        canvasPool.push(context.canvas);\n      }\n\n      const context = canvas.getContext('2d');\n      const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n      releaseCanvas(context);\n      canvasPool.push(canvas);\n\n      if (!dataR) {\n        dataU = new Uint8ClampedArray(\n          bytesPerPixel * imageData.width * imageData.height,\n        );\n        dataR = new dataSources[0].dataType(dataU.buffer);\n      }\n\n      const data = imageData.data;\n      let offset = reproj * 3;\n      for (let i = 0, len = data.length; i < len; i += 4) {\n        if (data[i + 3] === 255) {\n          dataU[offset] = data[i];\n          dataU[offset + 1] = data[i + 1];\n          dataU[offset + 2] = data[i + 2];\n        } else {\n          dataU[offset] = 0;\n          dataU[offset + 1] = 0;\n          dataU[offset + 2] = 0;\n        }\n        offset += bytesPerPixel;\n      }\n    }\n\n    if (imageLike) {\n      const context = createCanvasContext2D(targetWidth, targetHeight);\n      const imageData = new ImageData(dataR, targetWidth);\n      context.putImageData(imageData, 0, 0);\n      this.reprojData_ = context.canvas;\n    } else {\n      this.reprojData_ = dataR;\n    }\n    this.reprojSize_ = [\n      Math.round(targetWidth * this.pixelRatio_),\n      Math.round(targetHeight * this.pixelRatio_),\n    ];\n    this.state = TileState.LOADED;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(({tile}) => {\n      const state = tile.getState();\n      if (state !== TileState.IDLE && state !== TileState.LOADING) {\n        return;\n      }\n      leftToLoad++;\n\n      const sourceListenKey = listen(tile, EventType.CHANGE, () => {\n        const state = tile.getState();\n        if (\n          state == TileState.LOADED ||\n          state == TileState.ERROR ||\n          state == TileState.EMPTY\n        ) {\n          unlistenByKey(sourceListenKey);\n          leftToLoad--;\n          if (leftToLoad === 0) {\n            this.unlistenSources_();\n            this.reproject_();\n          }\n        }\n      });\n      this.sourcesListenerKeys_.push(sourceListenKey);\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    } else {\n      this.sourceTiles_.forEach(function ({tile}) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojDataTile;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport ReprojDataTile from '../../reproj/DataTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(sourceKey, z, x, y) {\n  return `${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection_ = undefined;\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection_) {\n      this.renderedProjection_ = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection_) {\n      this.tileCache_.clear();\n      this.renderedProjection_ = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedRevision_) {\n      this.renderedRevision_ = sourceRevision;\n    } else if (this.renderedRevision_ !== sourceRevision) {\n      this.renderedRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(staleKeys[i], z, x, y);\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.get(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.get(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  * maybe skip transition when not fully opaque\n     *  * decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (\n        (tile instanceof ReprojTile || tile instanceof ReprojDataTile) &&\n        tileState === TileState.EMPTY\n      ) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      this.renderComplete = false;\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    /**\n     * Here we unconditionally expire the source cache since the renderer maintains\n     * its own cache.\n     * @param {import(\"../../Map.js\").default} map Map.\n     * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n     */\n    const postRenderFunction = (map, frameState) => {\n      const tileSourceKey = getUid(tileSource);\n      const wantedTiles = frameState.wantedTiles[tileSourceKey];\n      const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n      this.updateCacheSize(tilesCount);\n      this.tileCache_.expireCache();\n    };\n\n    frameState.postRenderFunctions.push(postRenderFunction);\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport {abstract, getUid} from '../util.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {renderXYZTemplate} from './uri.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * TODO: Update ol-mapbox-style to import this from the uri.js module.\n */\nexport {expandUrl} from './uri.js';\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/uri\n */\n\nimport {hashZXY} from './tilecoord.js';\nimport {modulo} from './math.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.2.1';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t927: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkol_webpack\"] = self[\"webpackChunkol_webpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","\n      import API from \"!../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../css-loader/dist/cjs.js!./ol.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../css-loader/dist/cjs.js!./ol.css\";\n       export default content && content.locals ? content.locals : undefined;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        const [style, weight, family] = font.split('\\n');\n        if (isAvailable(style, weight, family)) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(withNoArgs),\n  [Ops.Time]: createCallExpressionParser(withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      /**\n       * @type {import(\"./Tile.js\").default}\n       */\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default<FeatureType>|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} FeatureType\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","import {Control} from \"ol/control\";\nimport {transformExtent} from \"ol/proj\";\n\n/**\n * Class representing a button to zoom to the origin of the map.\n * @augments Control\n * @property {boolean} _isPreview If the button is in a preview context.\n */\nexport class ZoomToOriginControl extends Control {\n    /**\n     * Create a button to zoom to the origin of the map.\n     * @param {object} opt_options ZoomToOriginControl options.\n     */\n    constructor(opt_options) {\n\n        let options = opt_options || {};\n\n        let button = document.createElement('button');\n        button.className = 'fas fa-expand-arrows-alt';\n        button.title = 'Zoom to selected map extent';\n\n        let element = document.createElement('div');\n        element.className = 'ol-zoom-origin ol-unselectable ol-control';\n        if (opt_options.isPreview) {\n            element.id = 'preview';\n        }\n        element.appendChild(button);\n\n        super({\n            element: element,\n            target: options.target,\n        });\n\n        this._isPreview = opt_options.isPreview;\n        button.addEventListener('click', this.handleZoomToOrigin.bind(this), false);\n    }\n\n    /**\n     * Handle click event to adjust the view;\n     */\n    handleZoomToOrigin() {\n        let extent;\n        if (this._isPreview) {\n            extent = document.getElementById(\"_extent\").textContent.split(',').map(parseFloat);\n        } else {\n            extent = document.getElementById(\"jforms_mapBuilderAdmin_config_extent\").value.split(',').map(parseFloat);\n        }\n\n        extent = transformExtent(extent, 'EPSG:4326', 'EPSG:3857');\n\n        this.getMap().getView().fit(extent, {\n            duration: 250\n        });\n    };\n}\n","import 'ol/ol.css';\n\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport Feature from 'ol/Feature';\nimport {fromExtent} from 'ol/geom/Polygon.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer.js';\nimport {OSM, Vector as VectorSource} from 'ol/source.js';\n\nimport {transformExtent} from 'ol/proj.js';\nimport {defaults as defaultControls} from 'ol/control.js';\n\nimport {ZoomToOriginControl} from \"./components/AdminControls/ZoomToOriginControl\";\n\ndocument.addEventListener(\"DOMContentLoaded\", async function() {\n\n    var baseLayerDefault = document.getElementById(\"_baseLayerDefault\").textContent;\n\n    var raster = undefined;\n\n    let previewDict = {\n        \"OSM Mapnik\": \"osmMapnik\",\n        \"OSM StadiaMaps Toner\": \"osmStadiaMapsToner\",\n        \"Bing Streets\": \"bingStreets\",\n        \"Bing Satellite\": \"bingSatellite\",\n        \"Bing Hybrid\": \"bingHybrid\",\n        \"IGN Streets\": \"ignStreets\",\n        \"IGN Satellite\": \"ignSatellite\",\n        \"IGN Cadastral\": \"ignCadastral\"\n    };\n\n    baseLayerDefault = previewDict[baseLayerDefault];\n    baseLayerDefault = baseLayerDefault === undefined ? \"emptyBaselayer\" : baseLayerDefault;\n\n    //Generate base layer\n    if (baseLayerDefault === \"emptyBaselayer\") {\n        raster = new TileLayer({\n            source: new OSM()\n        });\n    } else {\n        const lib = await import(`./modules/BaseLayers/${baseLayerDefault}.js`);\n        raster = lib.getPreviewRaster();\n    }\n\n    var source = new VectorSource({wrapX: false});\n\n    var vector = new VectorLayer({\n        source: source\n    });\n\n    //Create the map\n    var map = new Map({\n        layers: [raster, vector],\n        target: 'map',\n        controls: defaultControls().extend([\n            new ZoomToOriginControl({\n                isPreview: true\n            })\n        ]),\n        view: new View({\n            extent: transformExtent([-180, -85.06, 180, 85.06], 'EPSG:4326', 'EPSG:3857'),\n            center: [95022, 5922170],\n            zoom: 5\n        })\n    });\n\n    var extentString = document.getElementById(\"_extent\").textContent;\n\n    if (extentString !== \"\") {\n        var extent = transformExtent(extentString.split(',').map(parseFloat), 'EPSG:4326', map.getView().getProjection())\n        source.addFeature(\n            new Feature({\n                geometry: fromExtent(extent)\n            })\n        );\n        map.getView().fit(extent);\n    }\n\n    // Make OL map object accessible to help debugging\n    if (!PRODUCTION) {\n        $(\"#map\").data('map', map);\n    }\n});\n"],"names":["inProgress","dataWebpackPrefix","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","keys","Object","module","exports","___CSS_LOADER_EXPORT___","push","cssWithMappingToString","list","toString","this","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","constructor","disposed","dispose","disposeInternal","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","decode","catch","error","ERROR","forEach","decodeFallback","reject","complete","width","handleLoad","unlisten","handleError","removeEventListener","addEventListener","load","IDLE","LOADING","LOADED","EMPTY","ImageTile","tileCoord","state","crossOrigin","tileLoadFunction","super","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","changed","handleImageError_","ctx","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","ObjectEvent","type","oldValue","BaseObject","values","on","once","un","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","hasListener","dispatchEvent","PROPERTYCHANGE","addChangeListener","listener","removeChangeListener","set","silent","applyProperties","source","unset","Observable","revision_","CHANGE","getRevision","onInternal","Array","isArray","len","onceInternal","ol_key","unInternal","ii","unByKey","prototype","Tile","transition_","transition","transitionStarts_","interpolate","release","setState","getKey","getTileCoord","getState","getAlpha","time","start","delta","inTransition","endTransition","TileRange","minX","maxX","minY","maxY","contains","containsXY","containsTileRange","tileRange","x","y","equals","extend","getHeight","getSize","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","extent","onlyCenter","smooth","center","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","Math","log","max","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","min","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","direction","cappedMaxRes","View","hints_","animations_","updateAnimationKey_","projection_","projection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","getExtent","constrainOnlyCenter","isGlobal","resolutions","constrainResolution","capped","z","floor","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","pow","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","ceil","offset","cappedZoomLevel","zoomLevel","newResolution","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","Infinity","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","rotation","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","arguments","getProjection","anchor","animateInternal","callback","animationCount","animationCallback","Date","now","series","animation","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","PI","targetRotation","isNoopAnimation","setHint","ViewHint","ANIMATING","updateAnimations_","getInteracting","INTERACTING","cancelAnimations","j","jj","NaN","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","h","abs","cos","sin","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","getType","rotate","userProjection","clone","transform","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","isNaN","centerRot","centerX","centerY","getConstrainedCenter","centerOn","coordinate","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","a","b","linearFindNearest","arr","n","candidate","reverseSubArray","begin","end","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assert","assertion","errorMessage","name","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","r","g","arg","_u","_v","l","u","v","xn","yn","zn","luv","vn","yr","lchuv","hr","c","sqrt","atan2","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","cstr","m","space","parts","alpha","String","toLowerCase","parseInt","exec","dims","replace","trim","split","shift","parseFloat","baseHues","endsWith","pop","test","match","hsl","t1","t2","t3","val","s","NO_COLOR","asString","color","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","raw","Number","parsed","normalize","asArray","round","levels","info","warn","level","console","add","coordinate1","coordinate2","angle","scale","wrapX","canWrapX","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","getWorldsAway","createCanvasContext2D","height","canvasPool","settings","OffscreenCanvas","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","replaceNode","newNode","oldNode","parent","replaceChild","removeChildren","node","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","easeIn","t","easeOut","inAndOut","linear","listen","thisArg","originalListener","eventsKey","listenOnce","unlistenByKey","propagationStopped","defaultPrevented","preventDefault","stopPropagation","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","RESIZE","TOUCHMOVE","WHEEL","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","event","isString","evt","dispatching","pendingRemovals","propagate","handleEvent","call","pr","getListeners","indexOf","boundingExtent","coordinates","extendCoordinate","buffer","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getCorner","corner","getForViewAndSize","x2","y2","x3","y3","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getRotatedViewport","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","nextArgs","toPromise","getter","err","promiseGetter","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","point","intersectsCoordinate","computeExtent","sx","sy","simplify","intersectsExtent","translate","deltaX","deltaY","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","Point","layout","setCoordinates","squaredDistance","getCoordinates","setLayout","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","setFlatCoordinates","inflate","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","deflate","Polygon","ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","right","orient","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","fromExtent","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","startsWith","transformGeom2D","simpleGeometry","twiceArea","dx1","dy1","dx2","dy2","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","intersectsLineString","coordinatesExtent","point1","point2","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","isClockwise","orientLinearRings","inflateEnds","startOrientation","prevEndIndex","orientation","ret","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","quantizeArray","transform2D","destinationStride","anchorX","anchorY","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","PASSIVE_EVENT_LISTENERS","passive","defineProperty","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","visible","Z_INDEX","zIndex","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","className","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","array","getLayerStatesArray","states","EXTENT","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","SOURCE","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","MAP","PRECOMPOSE","handlePrecompose_","renderEvent","some","arrayLayerState","createRenderer","hasRenderer","BaseTileLayer","preload","useInterimTilesOnError","cacheSize_","setPreload","setUseInterimTilesOnError","getCacheSize","getPreload","TileProperty","getUseInterimTilesOnError","asImageLike","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","disposedError","sharedContext","defaultSize","DataTile","TileState","loader_","loader","data_","error_","size_","controller_","controller","imageData","getError","abort","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","expireCache","keep","entry","Disposable","clear","containsKey","f","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","setSize","Uint8ClampedArray","pixelRatio_","pixelRatio","gutter_","gutter","reprojData_","reprojError_","reprojSize_","sourceTileGrid_","sourceTileGrid","targetTileGrid_","targetTileGrid","wrappedTileCoord_","wrappedTileCoord","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","sourceTileGridExtent","clipExtent_","targetExtent","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","targetProj","errorThresholdInPixels","errorThreshold","triangulation_","Triangulation","getTriangles","getZForResolution","sourceExtent","calculateSourceExtent","sourceRange","getTileRangeForExtentAndZ","getTile","getTileFunction","srcX","srcY","tile","reproject_","dataSources","imageLike","tileData","arrayData","Uint8Array","Float32Array","DataView","willReadFrequently","drawImage","getImageData","toArray","pixelSize","isFloat","pixelCount","DataType","tileDataR","bytesPerElement","BYTES_PER_ELEMENT","bytesPerPixel","bytesPerRow","byteLength","bandCount","packedLength","packedData","dataIndex","rowOffset","colCount","rowIndex","colIndex","clipExtent","dataType","getTileSize","targetWidth","targetHeight","dataR","dataU","reproj","sources","dataSource","createImageData","putImageData","ImageData","leftToLoad","sourceListenKey","EventType","unlistenSources_","getCacheKey","sourceKey","addTileToLookup","tilesByZ","Set","existing","has","removeTileFromLookup","delete","getRenderExtent","layerIndex","getWrapX","gridExtent","getTileGridForProjection","CanvasTileLayerRenderer","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempExtent","tempTileRange_","tempTileCoord_","tileCache_","renderedProjection_","maxStaleKeys","getTileCache","getOrCreateTile","tileCache","tileSource","getLayer","cacheKey","pixelToCoordinateTransform","tileGrid","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","tileResolution","col","row","getGutterForProjection","sourceRevision","renderedRevision_","enqueueTiles","initialZ","tileSourceKey","wantedTiles","minZ","zDirection","tileQueueKey","tileQueue","isKeyQueued","enqueue","getTileCoordCenter","findStaleTile_","staleKeys","getStaleKeys","findAltTiles_","altZ","getTileRangeForTileCoordAndZ","covered","viewResolution","viewCenter","prependStaleKey","frameExtent","prepareContainer","canvasExtent","nextExtent","targetZ","renderExtent","container","uid","tileState","parentZ","canvasScale","getRenderContext","tempTransform","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","clip","save","beginPath","moveTo","lineTo","drawTile","restore","unshift","updateUsedTiles","usedTiles","renderedResolution","postRender","postRenderFunctions","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","globalAlpha","BaseTile","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","object","property","METERS_PER_UNIT","code_","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","EPSG3857Projection","units","cosh","PROJECTIONS","EPSG4326Projection","transforms","sourceCode","destinationCode","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","identityTransform","addProjection","projectionLike","pointResolution","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","dimension","atan","exp","RenderEvent","inversePixelTransform","PRERENDER","POSTRENDER","POSTCOMPOSE","RENDERCOMPLETE","instructions_","offset_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","forEachFeatureAtCoordinate","hitTolerance","matches","handleFontsChanged","ImageState","renderIfReadyAndVisible","loadImage","imageState","pixelContext","pixelTransform","deferredContext_","containerReused","useContainer","backgroundColor","layerClassName","firstElementChild","left","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","canvasTransform","dispatchRenderEvent_","declutter","renderDeferredInternal","ZIndexContext","getRenderTransform","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","closePath","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","compensationFactor","calculateSourceExtentResolution","triangulation","renderEdges","drawSingle","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","strokeStyle","lineWidth","stroke","ReprojTile","renderEdges_","canvas_","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","d","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","ERROR_THRESHOLD","createSnapToN","theta","createSnapToZero","hasArea","toSize","ATTRIBUTION","OSM","url","attributionsCollapsible","reprojectionErrorThreshold","Source","attributions_","adaptAttributions","attributionsCollapsible_","loading","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","attributionLike","TileSource","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileGrid","getTileCoordForTileUrlFunction","TileSourceEvent","Event","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","tileClass","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","getKeyZXY","hash","withinExtentAndZ","getFullTileRange","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","tmpTileCoord","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tileCoordExtent","getTileCoordChildTileRange","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createFromTemplate","template","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","create","setFromArray","transform1","transform2","compose","makeInverse","det","matrixPrecision","appendParams","uri","params","keyParams","qs","zRegEx","xRegEx","yRegEx","dashYRegEx","renderXYZTemplate","expandUrl","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","abstract","uidCounter_","getUid","ol_uid","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","__esModule","definition","enumerable","chunkId","reduce","promises","globalThis","Function","prop","done","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","p","installedChunks","installedChunkData","promise","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal","locals","Property","CollectionEvent","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","insertAt","elem","CollectionEventType","removeAt","setAt","except","quickselect","defaultCompare","sd","swap","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","child","childBBox","leaf","collides","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minArea","minEnlargement","bboxArea","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","shared","cache_","patternCache_","maxCacheSize_","expire","iconImage","getPattern","pattern","createPattern","maxCacheSize","taintedTestContext","IconImage","hitDetectionImage_","color_","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","HTMLImageElement","onChange","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","offsetHeight","measureAndCacheTextWidth","curr","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","points_","points","radius2_","radius2","angle_","stroke_","renderOptions_","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","setRadius","patternImage_","setColor","patternImage","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getGeometry","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","defaultStyles","createDefaultStyle","Circle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","iconImage_","offsetOrigin_","offsetOrigin","initialOptions_","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","names","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","geometryType","parse","encoded","expectedType","returnType","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","LineMetric","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","Has","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","interpolationType","interpolation","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","expression","argType","validators","computeGeometryType","substring","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","hasOwn","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styles","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","getId","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","styleFunction","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","tmpCoord","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","expireIconCache","Map","fontChangeListenerKey_","ObjectEventType","redrawText","element_","getViewport","children_","renderedVisible_","BaseVector","renderedLayerStates","previousElement","sourceState","GroupEvent","LayerGroup","Base","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","getAllLayers","visibleAttributions","flatMap","setCollapsible","from","updateElement_","attribution","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attributionOptions","Interaction","setActive","getActive","mapBrowserEvent","active","zoomByDelta","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","host","hasAttribute","activeElement","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroid","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","box_","minArea_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","totalDelta_","lastDelta_","timeout_","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileCenter","handleMapBrowserEvent","currentDoc","documentElement","interactionsArray","handlePostRender","viewHints","lowOnFrameBudget","unobserve","Composite","targetRoot","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","mapId","renderTargets","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","getClientRects","oldSize","geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","createStyleFunction","setId","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","filteredFlatCoordinates","sharedData","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","labelOrImage","executeLabelInstructions","drawImageOrLabel","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","interpolatePoint","cumulativeLengths","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","linearRingss","midpoint","enableSimplifyTransformed","xhr","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","status","responseText","responseXML","readFeatures","featureProjection","readProjection","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","VectorSource","format_","url_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","ZoomToOriginControl","opt_options","isPreview","_isPreview","handleZoomToOrigin","async","baseLayerDefault","raster","getPreviewRaster","vector","Vector","extentString"],"sourceRoot":""}