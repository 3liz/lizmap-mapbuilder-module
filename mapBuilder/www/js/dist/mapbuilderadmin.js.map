{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/interaction/Draw.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./mainadmin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","ii","length","opt_extent","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","extendCoordinates","flatCoordinates","offset","end","stride","extendXY","Math","min","max","callback","opt_this","val","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","opt_once","callOnce","addEventListener","evt","bindListener","push","indexOf","splice","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","drawImage","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","context","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","width","check","done","clear","clearInterval","fontSpec","fontFamilies","fontFamily","setInterval","span","heights","height","document","createElement","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","offsetX","offsetY","translate","rotate","transform","opacity","image","originX","originY","w","h","scale","alpha","globalAlpha","setTransform","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","Array","angleInRadians","PI","angleInDegrees","a","b","IDLE","LOADING","LOADED","EMPTY","ABORT","reset","setFromArray","compose","invert","tmp_","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","e","f","dx1","dy1","sx","sy","angle","dx2","dy2","det","Projection_Projection","options","this","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","METERS","point","math","__proto__","constructor","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","log","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","source","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","transformExtent","ol_extent","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","data","extension","isArray","remove","find","arr1","arr2","len1","stableSort","compareFnc","index","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","assign","getValues","var_sources","arguments$1","arguments","TypeError","values","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","ANIMATING","INTERACTING","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","TRUE","FALSE","VOID","createCanvasContext2D","opt_width","opt_height","canvas","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","altShiftKeysOnly","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_has_js__WEBPACK_IMPORTED_MODULE_3__","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","event","getTargetElement","activeElement","button","tagName","pointerEvent","pointerType","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","Event","oldValue","BaseObject","Observable","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","TOUCH","POINTER","MSPOINTER","ua","navigator","userAgent","toLowerCase","window","devicePixelRatio","has","setLineDash","pan","rotateWithoutConstraints","zoom","zoomByDelta","zoomWithoutConstraints","_Object_js__WEBPACK_IMPORTED_MODULE_0__","_easing_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","Interaction","handleEvent","map_","setActive","getActive","ACTIVE","getMap","active","setMap","map","view","delta","opt_duration","currentCenter","constrainCenter","animate","duration","easing","setCenter","opt_anchor","constrainRotation","currentRotation","getRotation","anchor","opt_direction","constrainResolution","currentResolution","getResolution","resolutions","getResolutions","getMinResolution","getMaxResolution","calculateCenterZoom","setResolution","FEET","PIXELS","TILE_PIXELS","USFEET","XY","XYZ","XYM","XYZM","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","stopPropagation","propagationStopped","preventDefault","easeIn","pow","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","split","z","opt_tileCoord","getKeyZXY","getKey","tileCoord","fromKey","Number","hash","quadKey","charCode","digits","mask","fromCharCode","join","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","ADD","REMOVE","centroid","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","PointerInteraction","opt_options","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","stopEvent","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","id","pointerId","toString","pointerEvents","clientX","clientY","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","transform2D","opt_dest","dest","anchorX","anchorY","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","Property","CollectionEvent","opt_element","element","Collection","opt_array","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","array","getArray","item","insertAt","elem","removeAt","prev","setAt","opt_except","IMAGE","TILE","VECTOR_TILE","VECTOR","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","tmpTransform","ol_transform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","util","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","getRevision","opt_sy","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","intersectsExtent","sourceProj","proj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","flat_transform","ol_Object","transformGeom2D","SimpleGeometry_SimpleGeometry","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","changed","simpleGeometry","UNDEFINED","READY","hasArea","ratio","opt_size","toSize","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","color","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","disposeInternal","hasListener","opt_type","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","ends","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","opt_ends","deflateMultiCoordinatesArray","opt_endss","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","handleSourceChange_","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","render","visible","minResolution","maxResolution","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","_extent_js__WEBPACK_IMPORTED_MODULE_0__","wn","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","_math_js__WEBPACK_IMPORTED_MODULE_0__","assignClosest","offset1","offset2","i$1","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","sqrt","asString","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","normalize","g","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","closest","flat_area","inflate","simplifiedFlatCoordinates","GeometryType","deflate","geom_SimpleGeometry","fromExtent","fromCircle","makeRegular","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","contains","getOrientedFlatCoordinates","opt_right","orient","getEnds","getFlatInteriorPoint","flatCenter","interiorpoint","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","intersectsextent","circle","opt_sides","opt_angle","sides","arrayLength","polygon","getRadius","radius","startAngle","disable","none","createSnapToN","createSnapToZero","theta","floor","opt_tolerance","getForProjection","wrapX","createXYZ","extentFromProjection","_tilegrid_common_js__WEBPACK_IMPORTED_MODULE_0__","_size_js__WEBPACK_IMPORTED_MODULE_1__","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_6__","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","origin","tileSize","createForExtent","createForProjection","getTileCoordCenter","projectionExtent","worldWidth","worldsAway","ceil","getTileCoordForCoordAndZ","xyzOptions","gridOptions","minZoom","maxZoom","half","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","round","quantize","simplifiedEndss","MapBrowserPointerEvent","MapBrowserEvent","opt_dragging","opt_frameState","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","pixelRatio","replace","range","templates","tileUrlFunctions","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","stop","parseInt","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","target_","listenerKeys","setTarget","getOverlayContainerStopEvent","POSTRENDER","getElementById","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","POINTER_ID","POINTER_TYPE","prepareEvent","_EventSource_js__WEBPACK_IMPORTED_MODULE_0__","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","cloneEvent","pd","isPrimary","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","n2","TileRange","containsTileRange","getSize","disposed_","dispose","MOVESTART","MOVEEND","MapEvent","linearRingIsClockwise","edge","linearRingIsOriented","right","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","calculateSourceResolution","_dom_js__WEBPACK_IMPORTED_MODULE_0__","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_math_js__WEBPACK_IMPORTED_MODULE_2__","_proj_js__WEBPACK_IMPORTED_MODULE_3__","targetProj","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","distance","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","src","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","save","beginPath","p0","p1","p2","moveTo","lineTo","clip","restore","strokeStyle","lineWidth","closePath","stroke","twiceArea","linearRingss","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_contains_js__WEBPACK_IMPORTED_MODULE_1__","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","rbush","default","quickselect","maxEntries","format","_maxEntries","_minEntries","_initFormat","findItem","items","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","all","_all","search","bbox","result","childBBox","nodesToSearch","collides","load","insert","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","getDistance","DEFAULT_RADIUS","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","bearing","lon1","dByR","lat","asin","lon","_easing_js__WEBPACK_IMPORTED_MODULE_0__","_events_condition_js__WEBPACK_IMPORTED_MODULE_1__","DragZoom","DragBox","condition","className","onBoxEnd","duration_","out_","out","getView","getGeometry","mapExtent","calculateExtent","boxPixelExtent","getPixelFromCoordinate","factor","getResolutionForExtent","Box","RenderBox","geometry_","element_","startPixel_","endPixel_","render_","startPixel","endPixel","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getCoordinateFromPixel","ol_Disposable","DragBoxEventType","DragBoxEvent","DragBox_DragBox","box_","minArea_","onBoxEnd_","functions","condition_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","pixel","Pointer","AssertionError","message","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","EventTarget","revision_","on","once","un","_Object_js__WEBPACK_IMPORTED_MODULE_1__","properties","state_","state","layer","getOpacity","sourceState","getVisible","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","setSize","prune","ImageBase","pixelRatio_","getImage","getPixelRatio","browserEvent","getEventPixel","dragging","_TileImage_js__WEBPACK_IMPORTED_MODULE_0__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_1__","TileImage","attributions","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","transition","attributionsCollapsible","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","Source","projection_","attributions_","adaptAttributions","attributionsCollapsible_","loading","wrapX_","getAttributions","getAttributionsCollapsible","getProjection","getWrapX","refresh","setAttributions","setState","attributionLike","ol_Tile","Tile","interimTile","transition_","transitionStarts_","EventType","getInterimTile","tile","TileState","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","getBlankImage","ctx","dom","fillStyle","fillRect","ol_ImageTile","ImageTile","crossOrigin_","src_","image_","Image","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","events","ol_TileCache","TileCache","expireCache","usedTiles","zKey","pruneExceptNewestZ","tilecoord","structs_LRUCache","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","reproj","errorThresholdInPixels","common","triangulation_","Triangulation","getZForResolution","calculateSourceExtent","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","setTimeout","Tile_TileSource","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","ol_tilegrid","thisProj","ol_proj","getTilePixelRatio","getTilePixelSize","ol_size","getTileCoordForTileUrlFunction","opt_projection","useTile","source_Source","TileSourceEvent","TileEventType","TileImage_TileImage","UrlTile","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","handleTileChange","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","generateTileUrlFunction_","tileurlfunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","imageTile","ViewProperty","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","zoomFactor","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","rotationconstraint","createRotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","isDef","setZoom","setRotation","animationCallback","Date","now","series","animation","complete","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterRotate","filter","Boolean","requestAnimationFrame","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","opt_delta","getConstraints","getHints","opt_hints","asserts","getZoomForResolution","setMaxZoom","setMinZoom","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","isNaN","constrainedResolution","centerRotX","centerRotY","centerOn","centerX","centerY","hint","returnValue","_common_js__WEBPACK_IMPORTED_MODULE_0__","_TileRange_js__WEBPACK_IMPORTED_MODULE_2__","_array_js__WEBPACK_IMPORTED_MODULE_3__","_extent_js__WEBPACK_IMPORTED_MODULE_4__","_math_js__WEBPACK_IMPORTED_MODULE_5__","_size_js__WEBPACK_IMPORTED_MODULE_6__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","tmpTileCoord","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","Circle_Circle","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","setRadius","geom_Circle","interpolatePoint","pointX","pointY","cumulativeLengths","lineStringCoordinateAtM","extrapolate","lo","hi","m0","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","segments","getCoordinateAtM","opt_extrapolate","getCoordinateAt","flat_length","getFlatMidpoint","geom_MultiLineString","MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","geom_MultiPoint","MultiPoint","appendPoint","getPoint","getPoints","points","geom_MultiPolygon","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","getEndss","getFlatInteriorPoints","flatCenters","getInteriorPoints","getPolygon","prevEnds","getPolygons","lastEnds","createBox","Mode","DrawEventType","DrawEvent","feature","Draw_Draw","Draw","pointerOptions","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","source_","features_","features","snapTolerance_","snapTolerance","type_","mode_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","styles","geometryFunction","opt_geometry","squaredLength","ol_coordinate","Constructor","concat","geometryFunction_","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","Vector","source_Vector","useSpatialIndex","Style","updateWhileInteracting","geometryName_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","MapBrowserEventType","pass","clearTimeout","addToDrawing_","handlePointerMove_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","Feature","updateSketchFeatures_","setGeometryName","setGeometry","sketchLineGeom","ring","removeLastPoint","sketchFeature","addFeature","sketchFeatures","overlaySource","addFeatures","boxCoordinates","getInteriorPointOfArray","getInteriorPointsOfMultiArray","_array_js__WEBPACK_IMPORTED_MODULE_0__","flatCentersOffset","intersections","rr","maxSegmentLength","segmentLength","interiorPoints","ret","lineStringLength","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","opt_geometryOrProperties","id_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getGeometryName","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","DoubleClickZoom_handleEvent","delta_","interaction_Interaction","interaction_DoubleClickZoom","DoubleClickZoom","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","centerpx","viewState","interaction_DragRotate","DragRotate","lastAngle_","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","interaction_KeyboardZoom","KeyboardZoom","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getViewport","getBoundingClientRect","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","newResolution","defaults","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ATTRIBUTION","_XYZ_js__WEBPACK_IMPORTED_MODULE_0__","OSM","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_EventSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","isMoving_","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","events_EventType","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","CollectionEventType","handleLayersAdd_","handleLayersRemove_","layersArray","ObjectEventType","collectionEvent","pos","ownLayerState","State","Base","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","controls","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","eventPosition","getTarget","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","getRenderer","tileSourceKey","tileCenter","tileResolution","wantedTiles","interactionsArray","handlePostRender","tileQueue","hints","viewHints","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","skippedFeatureUids","renderFrame","MapEventType","setLayerGroup","setView","skipFeature","computedStyle","offsetWidth","parseFloat","unskipFeature","ol_ImageCanvas","ImageCanvas","opt_loader","ImageState","loader_","error_","getError","handleLoad_","err","ol_ImageBase","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","arc","fill","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","render_canvas","textBaseline","fillStyleColor","getColor","colorlike","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","ol_color","expire","iconImage","maxCacheSize","shared","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","CanvasMapRenderer","display","css","insertBefore","childNodes","renderedVisible_","composeEvent","clearRect","prepareFrame","composeFrame","numLayers","forEachLayerAtCoordinate","ctor","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","updateUsedTiles","manageTilePyramid","currentZ","preload","opt_tileCallback","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","LayerType","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","getRenderMode","VectorRenderType","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","sourceRevision","oversampling","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","childTileRange","tilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","drawTileImage","getTileImage","alphaChanged","TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","textLength","textStates","parts","cc","chars","label","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Default","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","drawChars_","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","0","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styleFunction","dirty","forEachFeatureInExtent","VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","pixelScale","VectorTileLayer","Map_Map","Map","control_util","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","control_Control","Rotate_render","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","zoomOptions","rotateOptions","attribution","attributionOptions","Image_ImageStyle","getSnapToPixel","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","setSnapToPixel","RegularShape","CircleStyle","atlasManager","atlasManager_","radius_","ImageStyle","checksums_","hitDetectionCanvas_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getRadius2","renderOptions","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","checksum","Fill","color_","checksum_","setColor","style_Fill","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","toFunction","createDefaultStyle","createEditingStyle","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","white","blue","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory","_LayerType_js__WEBPACK_IMPORTED_MODULE_0__","_Layer_js__WEBPACK_IMPORTED_MODULE_1__","_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_2__","_obj_js__WEBPACK_IMPORTED_MODULE_3__","_style_Style_js__WEBPACK_IMPORTED_MODULE_4__","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","FormatType","ARRAY_BUFFER","JSON","XML","featureloader_xhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","loadFeaturesXhr","dataProjection","loadingstrategy_all","VectorEventType","RBush_RBush","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","ol_obj","structs_RBush","VectorSourceEvent","opt_feature","Vector_VectorSource","VectorSource","format_","url_","loader","strategy_","strategy","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","TileProperty","Tile_TileLayer","setPreload","setUseInterimTilesOnError","layer_Layer","ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","ol_View_js__WEBPACK_IMPORTED_MODULE_1__","ol_Feature__WEBPACK_IMPORTED_MODULE_2__","ol_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_3__","ol_interaction_Draw_js__WEBPACK_IMPORTED_MODULE_4__","ol_layer_js__WEBPACK_IMPORTED_MODULE_5__","ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","ol_source_js__WEBPACK_IMPORTED_MODULE_7__","ol_source_js__WEBPACK_IMPORTED_MODULE_8__","ol_proj_js__WEBPACK_IMPORTED_MODULE_9__","$","raster","prop","extentString","draw","hide","each","show","change","is"],"mappings":"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","file":"mapbuilderadmin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 113);\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport VectorRenderType from './VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"./VectorRenderType.js\").default|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {import(\"../style/Style.js\").StyleLike}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {import(\"./VectorTileRenderType.js\").default|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {import(\"../style/Style.js\").StyleLike}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {import(\"./VectorRenderType.js\").default|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","import Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport Feature from 'ol/Feature';\nimport {fromExtent} from 'ol/geom/Polygon.js';\nimport Draw, {createBox} from 'ol/interaction/Draw.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer.js';\nimport {OSM, Vector as VectorSource} from 'ol/source.js';\n\nimport {transformExtent} from 'ol/proj.js';\n\nvar mapBuilderAdmin = {};\n\n$(function() {\n\n  var raster = new TileLayer({\n    source: new OSM()\n  });\n\n  var source = new VectorSource({wrapX: false});\n\n  var vector = new VectorLayer({\n    source: source\n  });\n\n  var map = new Map({\n    layers: [raster, vector],\n    target: 'map',\n    view: new View({\n      extent: transformExtent([-180,-85.06,180,85.06], 'EPSG:4326', 'EPSG:3857'),\n      center: [95022, 5922170],\n      zoom: 5\n    })\n  });\n\n  // Set extent input as readonly\n  $('#jforms_mapBuilderAdmin_config_extent').prop('readonly', true);\n\n  // Display original extent on map if set\n  var extentString = $('#jforms_mapBuilderAdmin_config_extent').val();\n  \n  if(extentString !== \"\"){\n    var extent = transformExtent(extentString.split(',').map(parseFloat), 'EPSG:4326', map.getView().getProjection())\n    source.addFeature(\n      new Feature({\n        geometry: fromExtent(extent)\n      })\n    );\n    map.getView().fit(extent);\n  }\n  \n  var draw = new Draw({\n    source: source,\n    type: 'Circle',\n    geometryFunction: createBox()\n  });\n\n  draw.on('drawstart', function (e) {\n    source.clear();\n  });\n\n  draw.on('drawend', function (e) {\n    $('#jforms_mapBuilderAdmin_config_extent').val(transformExtent(e.feature.getGeometry().getExtent(), 'EPSG:3857', 'EPSG:4326'));\n  });\n\n  map.addInteraction(draw);\n\n  // Filter default baselayer choices based on selected baselayers\n  // Init\n  $('#jforms_mapBuilderAdmin_config_baseLayerDefault option').hide();\n\n  $('.jforms-ctl-baseLayer input:checked').each(function() {\n    $('#jforms_mapBuilderAdmin_config_baseLayerDefault option[value='+$(this).val()+']').show();\n  });\n\n  // Toggle on change\n  $('.jforms-ctl-baseLayer input').change(function() {\n    $('#jforms_mapBuilderAdmin_config_baseLayerDefault option[value='+$(this).val()+']').toggle($(this).is(':checked'));\n  });\n\n  // Make OL map object accessible to help debugging \n  if (!PRODUCTION) {\n    $(\"#map\").data('map', map);\n  }\n\n});"],"sourceRoot":""}