{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/transform.js","webpack:///external \"jQuery\"","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/LayerType.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/layer/VectorRenderType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/ImageCanvas.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/render/ReplayGroup.js","webpack:///./node_modules/ol/render/ReplayType.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/replay.js","webpack:///./node_modules/ol/render/canvas/Replay.js","webpack:///./node_modules/ol/render/canvas/ImageReplay.js","webpack:///./node_modules/ol/render/canvas/LineStringReplay.js","webpack:///./node_modules/ol/render/canvas/PolygonReplay.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextReplay.js","webpack:///./node_modules/ol/render/canvas/ReplayGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/VectorTileRenderType.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./node_modules/ol/layer/Image.js","webpack:///./node_modules/ol/source/Stamen.js","webpack:///./node_modules/ol/source/BingMaps.js","webpack:///./node_modules/ol/net.js","webpack:///./node_modules/ol/source/WMTSRequestEncoding.js","webpack:///./node_modules/ol/tilegrid/WMTS.js","webpack:///./node_modules/ol/uri.js","webpack:///./node_modules/ol/source/WMTS.js","webpack:///./node_modules/ol/format/XLink.js","webpack:///./node_modules/ol/xml.js","webpack:///./node_modules/ol/format/XML.js","webpack:///./node_modules/ol/format/xsd.js","webpack:///./node_modules/ol/format/WMSCapabilities.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/reproj/Image.js","webpack:///./node_modules/ol/source/Image.js","webpack:///./node_modules/ol/source/WMSServerType.js","webpack:///./node_modules/ol/source/ImageWMS.js","webpack:///./node_modules/ol/source/common.js","webpack:///./modules/bottom-dock.js","webpack:///./main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","head","document","getElementsByTagName","script","createElement","charset","timeout","nc","setAttribute","src","p","2","jsonpScriptSrc","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","error","Error","request","undefined","setTimeout","appendChild","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","ii","opt_extent","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","extendCoordinates","flatCoordinates","offset","end","stride","extendXY","Math","min","max","callback","opt_this","val","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","opt_once","callOnce","addEventListener","evt","bindListener","indexOf","splice","abstract","getUid","VERSION","uidCounter_","obj","ol_uid","String","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","drawImage","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","context","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","width","check","done","clear","clearInterval","fontSpec","fontFamilies","fontFamily","setInterval","span","heights","height","textContent","style","margin","padding","position","left","body","offsetHeight","removeChild","offsetX","offsetY","translate","rotate","transform","opacity","image","originX","originY","w","h","scale","alpha","globalAlpha","setTransform","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","Array","angleInRadians","PI","angleInDegrees","a","b","IDLE","LOADING","LOADED","EMPTY","ABORT","reset","setFromArray","compose","invert","tmp_","set","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","f","dx1","dy1","sx","sy","angle","dx2","dy2","det","jQuery","Projection_Projection","options","this","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","METERS","point","math","__proto__","constructor","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","log","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","source","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","proj_transform","transformExtent","ol_extent","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","extension","isArray","remove","find","arr1","arr2","len1","stableSort","compareFnc","index","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","assign","getValues","var_sources","arguments$1","arguments","TypeError","values","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","ANIMATING","INTERACTING","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","TRUE","FALSE","VOID","createCanvasContext2D","opt_width","opt_height","canvas","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","altShiftKeysOnly","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_has_js__WEBPACK_IMPORTED_MODULE_3__","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","getTargetElement","activeElement","button","tagName","pointerEvent","pointerType","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","Event","oldValue","BaseObject","Observable","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","TOUCH","POINTER","MSPOINTER","ua","navigator","userAgent","toLowerCase","devicePixelRatio","has","setLineDash","pan","rotateWithoutConstraints","zoom","zoomByDelta","zoomWithoutConstraints","_Object_js__WEBPACK_IMPORTED_MODULE_0__","_easing_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","Interaction","handleEvent","map_","setActive","getActive","ACTIVE","getMap","active","setMap","map","view","delta","opt_duration","currentCenter","constrainCenter","animate","duration","easing","setCenter","opt_anchor","constrainRotation","currentRotation","getRotation","anchor","opt_direction","constrainResolution","currentResolution","getResolution","resolutions","getResolutions","getMinResolution","getMaxResolution","calculateCenterZoom","setResolution","FEET","PIXELS","TILE_PIXELS","USFEET","XY","XYZ","XYM","XYZM","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","stopPropagation","propagationStopped","preventDefault","easeIn","pow","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","split","z","opt_tileCoord","getKeyZXY","getKey","tileCoord","fromKey","Number","hash","quadKey","charCode","digits","mask","fromCharCode","join","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","ADD","REMOVE","centroid","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","_Interaction_js__WEBPACK_IMPORTED_MODULE_1__","PointerInteraction","opt_options","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","stopEvent","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","id","pointerId","toString","pointerEvents","clientX","clientY","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","transform2D","opt_dest","dest","anchorX","anchorY","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","Property","CollectionEvent","opt_element","element","Collection","opt_array","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","array","getArray","item","insertAt","elem","removeAt","prev","setAt","opt_except","IMAGE","TILE","VECTOR_TILE","VECTOR","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","tmpTransform","ol_transform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","util","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","getRevision","opt_sy","simplify","tolerance","getSimplifiedGeometry","squaredTolerance","getType","intersectsExtent","sourceProj","proj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","flat_transform","ol_Object","transformGeom2D","SimpleGeometry_SimpleGeometry","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","changed","simpleGeometry","UNDEFINED","READY","hasArea","ratio","opt_size","toSize","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","color","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","disposeInternal","hasListener","opt_type","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","ends","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","opt_ends","deflateMultiCoordinatesArray","opt_endss","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_Base_js__WEBPACK_IMPORTED_MODULE_4__","_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","handleSourceChange_","renderEvent","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","render","visible","minResolution","maxResolution","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","_extent_js__WEBPACK_IMPORTED_MODULE_0__","wn","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","_math_js__WEBPACK_IMPORTED_MODULE_0__","assignClosest","offset1","offset2","i$1","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","sqrt","asString","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","normalize","g","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","closest","flat_area","inflate","simplifiedFlatCoordinates","GeometryType","deflate","geom_SimpleGeometry","fromExtent","fromCircle","makeRegular","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","contains","getOrientedFlatCoordinates","opt_right","orient","getEnds","getFlatInteriorPoint","flatCenter","interiorpoint","getInteriorPoint","Point","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","intersectsextent","circle","opt_sides","opt_angle","sides","arrayLength","polygon","getRadius","radius","startAngle","disable","none","createSnapToN","createSnapToZero","theta","floor","opt_tolerance","getForProjection","wrapX","createXYZ","extentFromProjection","_tilegrid_common_js__WEBPACK_IMPORTED_MODULE_0__","_size_js__WEBPACK_IMPORTED_MODULE_1__","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_6__","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","origin","tileSize","createForExtent","createForProjection","getTileCoordCenter","projectionExtent","worldWidth","worldsAway","ceil","getTileCoordForCoordAndZ","xyzOptions","gridOptions","minZoom","maxZoom","half","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","round","quantize","simplifiedEndss","MapBrowserPointerEvent","MapBrowserEvent","opt_dragging","opt_frameState","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","pixelRatio","replace","range","templates","tileUrlFunctions","url","urls","match","exec","startCharCode","charCodeAt","stopCharCode","stop","parseInt","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","target_","listenerKeys","setTarget","getOverlayContainerStopEvent","POSTRENDER","getElementById","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","POINTER_ID","POINTER_TYPE","prepareEvent","_EventSource_js__WEBPACK_IMPORTED_MODULE_0__","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","MouseSource","lastTouches","lts","cloneEvent","pd","isPrimary","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","n2","TileRange","containsTileRange","getSize","disposed_","dispose","MOVESTART","MOVEEND","MapEvent","linearRingIsClockwise","edge","linearRingIsOriented","right","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","calculateSourceResolution","_dom_js__WEBPACK_IMPORTED_MODULE_0__","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_math_js__WEBPACK_IMPORTED_MODULE_2__","_proj_js__WEBPACK_IMPORTED_MODULE_3__","targetProj","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","distance","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","save","beginPath","p0","p1","p2","moveTo","lineTo","clip","restore","strokeStyle","lineWidth","closePath","stroke","twiceArea","linearRingss","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_contains_js__WEBPACK_IMPORTED_MODULE_1__","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","rbush","default","quickselect","maxEntries","format","_maxEntries","_minEntries","_initFormat","findItem","items","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","multiSelect","_all","search","bbox","result","childBBox","nodesToSearch","collides","load","insert","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","getDistance","DEFAULT_RADIUS","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","bearing","lon1","dByR","lat","asin","lon","_easing_js__WEBPACK_IMPORTED_MODULE_0__","_events_condition_js__WEBPACK_IMPORTED_MODULE_1__","DragZoom","DragBox","condition","className","onBoxEnd","duration_","out_","out","getView","getGeometry","mapExtent","calculateExtent","boxPixelExtent","getPixelFromCoordinate","factor","getResolutionForExtent","Box","RenderBox","geometry_","element_","startPixel_","endPixel_","render_","startPixel","endPixel","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getCoordinateFromPixel","ol_Disposable","DragBoxEventType","DragBoxEvent","DragBox_DragBox","box_","minArea_","onBoxEnd_","functions","condition_","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","pixel","Pointer","AssertionError","message","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","EventTarget","revision_","on","once","un","_Object_js__WEBPACK_IMPORTED_MODULE_1__","properties","state_","state","layer","getOpacity","sourceState","getVisible","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","setSize","prune","ImageBase","pixelRatio_","getImage","getPixelRatio","browserEvent","getEventPixel","dragging","_TileImage_js__WEBPACK_IMPORTED_MODULE_0__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_1__","TileImage","attributions","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","transition","attributionsCollapsible","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","Source","projection_","attributions_","adaptAttributions","attributionsCollapsible_","loading","wrapX_","getAttributions","getAttributionsCollapsible","getProjection","getWrapX","refresh","setAttributions","setState","attributionLike","ol_Tile","Tile","interimTile","transition_","transitionStarts_","EventType","getInterimTile","tile","TileState","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","getBlankImage","ctx","dom","fillStyle","fillRect","ol_ImageTile","ImageTile","crossOrigin_","src_","image_","Image","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","events","ol_TileCache","TileCache","expireCache","usedTiles","zKey","pruneExceptNewestZ","tilecoord","structs_LRUCache","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","maxSourceExtent","limitedTargetExtent","sourceProjExtent","reproj","errorThresholdInPixels","common","triangulation_","Triangulation","getZForResolution","calculateSourceExtent","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","Tile_TileSource","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","ol_tilegrid","thisProj","ol_proj","getTilePixelRatio","getTilePixelSize","ol_size","getTileCoordForTileUrlFunction","opt_projection","useTile","source_Source","TileSourceEvent","TileEventType","TileImage_TileImage","UrlTile","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","handleTileChange","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","generateTileUrlFunction_","tileurlfunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","imageTile","ViewProperty","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","zoomFactor","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","rotationconstraint","createRotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","isDef","setZoom","setRotation","animationCallback","Date","now","series","animation","complete","sourceRotation","targetRotation","isNoopAnimation","setHint","ViewHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterRotate","filter","Boolean","requestAnimationFrame","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","opt_delta","getConstraints","getHints","opt_hints","asserts","getZoomForResolution","setMaxZoom","setMinZoom","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","isNaN","constrainedResolution","centerRotX","centerRotY","centerOn","centerX","centerY","hint","returnValue","_common_js__WEBPACK_IMPORTED_MODULE_0__","_TileRange_js__WEBPACK_IMPORTED_MODULE_2__","_array_js__WEBPACK_IMPORTED_MODULE_3__","_extent_js__WEBPACK_IMPORTED_MODULE_4__","_math_js__WEBPACK_IMPORTED_MODULE_5__","_size_js__WEBPACK_IMPORTED_MODULE_6__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","tmpTileCoord","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getInteriorPointOfArray","getInteriorPointsOfMultiArray","_array_js__WEBPACK_IMPORTED_MODULE_0__","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","interiorPoints","ret","lineStringLength","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","ol_Kinetic","DoubleClickZoom_handleEvent","MapBrowserEventType","delta_","interaction_Interaction","interaction_DoubleClickZoom","DoubleClickZoom","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","noKinetic_","centerpx","viewState","interaction_DragRotate","DragRotate","lastAngle_","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getViewport","getBoundingClientRect","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","newResolution","defaults","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ATTRIBUTION","_XYZ_js__WEBPACK_IMPORTED_MODULE_0__","OSM","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointer_EventSource","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","events_EventType","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","CollectionEventType","handleLayersAdd_","handleLayersRemove_","layersArray","ObjectEventType","collectionEvent","pos","ownLayerState","State","Base","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","controls","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","eventPosition","getTarget","pixelToCoordinateTransform","getOverlayById","coordinateToPixelTransform","getRenderer","tileSourceKey","tileCenter","tileResolution","wantedTiles","interactionsArray","handlePostRender","tileQueue","hints","viewHints","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","skippedFeatureUids","renderFrame","MapEventType","setLayerGroup","setView","skipFeature","computedStyle","offsetWidth","parseFloat","unskipFeature","ol_ImageCanvas","ImageCanvas","opt_loader","ImageState","loader_","error_","getError","handleLoad_","ol_ImageBase","render_Event","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext_VectorContext","drawCustom","renderer","drawGeometry","setStyle","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","arc","fill","getFill","getStroke","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","lineDash","lineDashOffset","lineJoin","miterLimit","textState","contextTextState","textAlign","render_canvas","textBaseline","fillStyleColor","getColor","colorlike","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","ol_color","expire","iconImage","maxCacheSize","shared","Map_MapRenderer","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg","thisArg2","viewResolution","translatedCoordinate","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","sortByZIndex","state1","state2","layerRendererConstructors","canvas_Map","CanvasMapRenderer","display","css","insertBefore","childNodes","renderedVisible_","composeEvent","clearRect","prepareFrame","composeFrame","numLayers","forEachLayerAtCoordinate","ctor","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","postCompose","preCompose","layer_","createLoadedTileFinder","tiles","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","updateUsedTiles","manageTilePyramid","currentZ","preload","opt_tileCallback","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","ol_coordinate","imageData","getImageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","LayerType","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","getRenderMode","VectorRenderType","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","sourceRevision","oversampling","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","childTileRange","tilePixelSize","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","zs","drawTileImage","getTileImage","alphaChanged","TileLayer","ReplayGroup_ReplayGroup","getReplay","replayType","addDeclutter","group","render_ReplayGroup","ReplayType","DEFAULT","TEXT","drawTextOnPath","measure","startM","maxAngle","previousAngle","reverse","numChars","segmentM","chunkLength","char","charAt","charLength","charM","segmentPos","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","Replay_tmpExtent","Replay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","fill_","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","endGeometry","finish","repeatSize","instruction","renderDeclutter_","groupCount","box","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","rotateWithView","backgroundFill","backgroundStroke","baseline","fillKey","strokeKey","strokeWidth","textKey","pathLength","flat_length","textLength","textStates","parts","cc","chars","label","part","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageReplay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","drawCoordinates_","myBegin","hitDetectionImage","getHitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay_CanvasPolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","BATCH_CONSTRUCTORS","Circle","Default","LineString","Text","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","placement","flatEnd","flatOffset","oo","drawChars_","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","canvas_ReplayGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","getImageState","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","getOverlaps","loadFeatures","styles","styleFunction","getStyleFunction","dirty","forEachFeatureInExtent","VectorLayer","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","renderMode","createReplayGroup_","renderTileImage_","layerRevision","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","pixelScale","VectorTileLayer","Map_Map","Map","control_util","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","control_Control","Rotate_render","autoHide_","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","zoomOptions","rotateOptions","attribution","attributionOptions","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory","TileProperty","Tile_TileLayer","setPreload","setUseInterimTilesOnError","layer_Layer","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","viewState_","control_ScaleLine","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","html","Image_ImageLayer","layer_Image","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","opt_errback","opt_callbackParam","ol_util","async","timer","jsonp","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","epsg4326Extent","source_TileImage","WMTSRequestEncoding","KVP","REST","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","appendParams","uri","params","keyParams","encodeURIComponent","qs","source_WMTS","WMTS","requestEncoding","version_","version","format_","dimensions_","dimensions","matrixSet_","matrixSet","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getFormat","getMatrixSet","getRequestEncoding","getStyle","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","NAMESPACE_URI","readHref","getAttributeNS","DOCUMENT","implementation","createDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","firstChild","nextSibling","makeArrayPusher","valueReader","objectStack","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeSimpleNodeFactory","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","namespaceURI","qualifiedName","createElementNS","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","pushParseAndPop","parsersNS","firstElementChild","nextElementSibling","parsers","parser","parseNode","XML_XML","read","doc","xml","DOMParser","parseFromString","readFromDocument","readFromNode","format_XML","readBooleanString","string","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","NAMESPACE_URIS","PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","XML","WMSCapabilities","ELEMENT_NODE","getAttribute","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","crs","Dimension","unitSymbol","multipleValues","nearestValue","current","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","Style","STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","concat","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","setImage","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","Image_ImageSource","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","ol_array","getImageInternal","handleImageChange","defaultImageLoadFunction","WMSServerType","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","url_","params_","v13_","updateV13_","serverType_","imageSize_","ratio_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getParams","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getImageLoadFunction","dpi","substr","getUrl","setImageLoadFunction","updateParams","ol_string","$","lizBottomDockTimer","hover","removeClass","addClass","hide","lizUrls","basepath","originalCenter","originalZoom","INCHTOMM","external_jQuery_default","ui","fancytree","debugLevel","mAddMessage","aMessage","aType","aClose","aTimer","mType","mClose","mDismissible","inArray","elt","append","alert","refreshLayerSelected","layerTree","mapBuilder","repositoryId","projectId","STYLES","hasAttributeTable","getTree","reload","loadLegend","dragZoomControl","lizDict","handleDragZoom","hasClass","zoomToOriginControl","handleZoomToOrigin","baseLayer","baseLayerKeyOSMCycleMap","proj3857","ign_source","baseLayerKeyIGN","ignTerrain","ignStreets","ignSatellite","ignCadastral","baseLayerKeyBing","bingStreets","bingSatellite","bingHybrid","visibility","legends","legendsDiv","layerSource","bindMapContextEvents","confirm","mcId","ajax","mapcontext_delete","dataType","success","setMapContextContent","click","mapcontext_get","mapcontext","layerContext","newLayer","popup","wms","serverType","mcData","unbind","blur","change","baseLayerSelected","getFeatureInfos","INFO_FORMAT","FI_POINT_TOLERANCE","FI_LINE_TOLERANCE","FI_POLYGON_TOLERANCE","gfi","then","results","popupHTML","tab","selectMode","layerStoreTree","extensions","table","indentation","nodeColumnIdx","glyph","preset","docOpen","folder","folderOpen","lazyLoad","repository","project","capabilities","getJSON","config","cfgData","lizMap","buildLayerTree","cfg","myArray","sublayer","sublayerName","shortname","displayInLegend","layerName","myObj","minScale","maxScale","attributeLayers","hideLayer","pivot","tooltip","groupAsLayer","renderColumns","$tdList","tr","styleOption","eq","getLevel","getNode","parentList","getParentList","maxZindex","prepend","dnd5","dragStart","dragDrop","otherNode","hitMode","allNodes","dragEnter","nodeRow","disabled","show","prop","aName","accentMap","theCleanName","reg","à","á","â","ã","ä","ç","è","é","ê","ë","ì","í","î","ï","ñ","ò","ó","ô","õ","ö","ù","ú","û","ü","ý","ÿ","À","Á","Â","Ã","Ä","Ç","È","É","Ê","Ë","Ì","Í","Î","Ï","Ñ","Ò","Ó","Ô","Õ","Ö","Ù","Ú","Û","Ü","Ý","-","'","(",")","term","RegExp","TYPENAME","OUTPUTFORMAT","GEOMETRYNAME","describe","aliases","propertiesFromWFS","visibleProperties","columns","attributetableconfig","column","attributes","hidden","attributeHTMLTable","JSON","stringify","propertieValue","rdata","media","isActiveTab","previousTab","nextTab","next","parentId","attr","visit","nextAll","siblingNode","getPrevSibling","getNextSibling","nodeLayerZIndex","siblingNodeLayerZIndex","cursor","jsPDF","dim","a0","a3","a4","a5","pdf","setFontSize","maxWidthLegend","each","legend","addImage","toDataURL","printSize","mapContext","layerProperties","layerSourceParams","mapcontext_add","is_public","is","trigger"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GAKAK,EAAA,EAAAC,EAAA,GACQD,EAAAF,EAAAI,OAAoBF,IAC5BH,EAAAC,EAAAE,GACAG,EAAAN,IACAI,EAAAG,KAAAD,EAAAN,GAAA,IAEAM,EAAAN,GAAA,EAEA,IAAAD,KAAAG,EACAM,OAAAC,UAAAC,eAAAC,KAAAT,EAAAH,KACAa,EAAAb,GAAAG,EAAAH,IAKA,IAFAc,KAAAf,GAEAM,EAAAC,QACAD,EAAAU,OAAAV,GAOA,IAAAW,EAAA,GAKAT,EAAA,CACAU,EAAA,GAWA,SAAAC,EAAAlB,GAGA,GAAAgB,EAAAhB,GACA,OAAAgB,EAAAhB,GAAAmB,QAGA,IAAAC,EAAAJ,EAAAhB,GAAA,CACAI,EAAAJ,EACAqB,GAAA,EACAF,QAAA,IAUA,OANAN,EAAAb,GAAAY,KAAAQ,EAAAD,QAAAC,IAAAD,QAAAD,GAGAE,EAAAC,GAAA,EAGAD,EAAAD,QAKAD,EAAAI,EAAA,SAAArB,GACA,IAAAsB,EAAA,GAKAC,EAAAjB,EAAAN,GACA,OAAAuB,EAGA,GAAAA,EACAD,EAAAf,KAAAgB,EAAA,QACK,CAEL,IAAAC,EAAA,IAAAC,QAAA,SAAAC,EAAAC,GACAJ,EAAAjB,EAAAN,GAAA,CAAA0B,EAAAC,KAEAL,EAAAf,KAAAgB,EAAA,GAAAC,GAGA,IAEAI,EAFAC,EAAAC,SAAAC,qBAAA,WACAC,EAAAF,SAAAG,cAAA,UAGAD,EAAAE,QAAA,QACAF,EAAAG,QAAA,IACAlB,EAAAmB,IACAJ,EAAAK,aAAA,QAAApB,EAAAmB,IAEAJ,EAAAM,IA3DA,SAAAtC,GACA,OAAAiB,EAAAsB,EAAA,KAAyCC,EAAA,iBAAoBxC,OAAA,aA0D7DyC,CAAAzC,GAEA4B,EAAA,SAAAc,GAEAV,EAAAW,QAAAX,EAAAY,OAAA,KACAC,aAAAV,GACA,IAAAW,EAAAxC,EAAAN,GACA,OAAA8C,EAAA,CACA,GAAAA,EAAA,CACA,IAAAC,EAAAL,IAAA,SAAAA,EAAAM,KAAA,UAAAN,EAAAM,MACAC,EAAAP,KAAAQ,QAAAR,EAAAQ,OAAAZ,IACAa,EAAA,IAAAC,MAAA,iBAAApD,EAAA,cAAA+C,EAAA,KAAAE,EAAA,KACAE,EAAAH,KAAAD,EACAI,EAAAE,QAAAJ,EACAH,EAAA,GAAAK,GAEA7C,EAAAN,QAAAsD,IAGA,IAAAnB,EAAAoB,WAAA,WACA3B,EAAA,CAAwBoB,KAAA,UAAAE,OAAAlB,KAClB,MACNA,EAAAW,QAAAX,EAAAY,OAAAhB,EACAC,EAAA2B,YAAAxB,GAGA,OAAAP,QAAAgC,IAAAnC,IAIAL,EAAAyC,EAAA9C,EAGAK,EAAA0C,EAAA5C,EAGAE,EAAA2C,EAAA,SAAA1C,EAAA2C,EAAAC,GACA7C,EAAA8C,EAAA7C,EAAA2C,IACArD,OAAAwD,eAAA9C,EAAA2C,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1C7C,EAAAkD,EAAA,SAAAjD,GACA,oBAAAkD,eAAAC,aACA7D,OAAAwD,eAAA9C,EAAAkD,OAAAC,YAAA,CAAwDC,MAAA,WAExD9D,OAAAwD,eAAA9C,EAAA,cAAiDoD,OAAA,KAQjDrD,EAAAsD,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArD,EAAAqD,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAlE,OAAAmE,OAAA,MAGA,GAFA1D,EAAAkD,EAAAO,GACAlE,OAAAwD,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArD,EAAA2C,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzD,EAAA6D,EAAA,SAAA3D,GACA,IAAA2C,EAAA3C,KAAAsD,WACA,WAA2B,OAAAtD,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAF,EAAA2C,EAAAE,EAAA,IAAAA,GACAA,GAIA7C,EAAA8C,EAAA,SAAAgB,EAAAC,GAAsD,OAAAxE,OAAAC,UAAAC,eAAAC,KAAAoE,EAAAC,IAGtD/D,EAAAsB,EAAA,GAGAtB,EAAAgE,GAAA,SAAAC,GAA8D,MAApBC,QAAAhC,MAAA+B,GAAoBA,GAE9D,IAAAE,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAA7E,KAAAsE,KAAAO,GACAA,EAAA7E,KAAAV,EACAuF,IAAAG,QACA,QAAApF,EAAA,EAAgBA,EAAAiF,EAAA/E,OAAuBF,IAAAN,EAAAuF,EAAAjF,IACvC,IAAAU,EAAAyE,EAIArE,IAAAuE,EAAA,oCCnMAvE,EAAA2C,EAAA6B,EAAA,sBAAAC,IAAAzE,EAAA2C,EAAA6B,EAAA,sBAAAE,IAAA1E,EAAA2C,EAAA6B,EAAA,sBAAAG,IAAA3E,EAAA2C,EAAA6B,EAAA,sBAAAI,IAAA5E,EAAA2C,EAAA6B,EAAA,sBAAAK,IAAA7E,EAAA2C,EAAA6B,EAAA,sBAAAM,IAAA9E,EAAA2C,EAAA6B,EAAA,sBAAAO,IAAA/E,EAAA2C,EAAA6B,EAAA,sBAAAQ,IAAAhF,EAAA2C,EAAA6B,EAAA,sBAAAS,IAAAjF,EAAA2C,EAAA6B,EAAA,sBAAAU,IAAAlF,EAAA2C,EAAA6B,EAAA,sBAAAW,IAAAnF,EAAA2C,EAAA6B,EAAA,sBAAAY,IAAApF,EAAA2C,EAAA6B,EAAA,sBAAAa,IAAArF,EAAA2C,EAAA6B,EAAA,sBAAAc,IAAAtF,EAAA2C,EAAA6B,EAAA,sBAAAe,IAAAvF,EAAA2C,EAAA6B,EAAA,sBAAAgB,IAAAxF,EAAA2C,EAAA6B,EAAA,sBAAAiB,IAAAzF,EAAA2C,EAAA6B,EAAA,sBAAAkB,IAAA1F,EAAA2C,EAAA6B,EAAA,sBAAAmB,IAAA3F,EAAA2C,EAAA6B,EAAA,sBAAAoB,IAAA5F,EAAA2C,EAAA6B,EAAA,sBAAAqB,IAAA7F,EAAA2C,EAAA6B,EAAA,sBAAAsB,IAAA9F,EAAA2C,EAAA6B,EAAA,sBAAAuB,IAAA/F,EAAA2C,EAAA6B,EAAA,sBAAAwB,IAAAhG,EAAA2C,EAAA6B,EAAA,sBAAAyB,IAAAjG,EAAA2C,EAAA6B,EAAA,sBAAA0B,IAAAlG,EAAA2C,EAAA6B,EAAA,sBAAA2B,IAAAnG,EAAA2C,EAAA6B,EAAA,sBAAA4B,IAAApG,EAAA2C,EAAA6B,EAAA,sBAAA6B,IAAArG,EAAA2C,EAAA6B,EAAA,sBAAA8B,IAAAtG,EAAA2C,EAAA6B,EAAA,sBAAA+B,IAAAvG,EAAA2C,EAAA6B,EAAA,sBAAAgC,IAAAxG,EAAA2C,EAAA6B,EAAA,sBAAAiC,IAAAzG,EAAA2C,EAAA6B,EAAA,sBAAAkC,IAAA1G,EAAA2C,EAAA6B,EAAA,sBAAAmC,IAAA3G,EAAA2C,EAAA6B,EAAA,sBAAAoC,IAAA,IAAAC,EAAA7G,EAAA,IAAA8G,EAAA9G,EAAA,IAAA+G,EAAA/G,EAAA,IAqBO,SAAAyE,EAAAuC,GAEP,IADA,IAAAC,EAAAhC,IACA/F,EAAA,EAAAgI,EAAAF,EAAA5H,OAA0CF,EAAAgI,IAAQhI,EAClDuG,EAAAwB,EAAAD,EAAA9H,IAEA,OAAA+H,EA4BO,SAAAvC,EAAAuC,EAAA5D,EAAA8D,GACP,OAAAA,GACAA,EAAA,GAAAF,EAAA,GAAA5D,EACA8D,EAAA,GAAAF,EAAA,GAAA5D,EACA8D,EAAA,GAAAF,EAAA,GAAA5D,EACA8D,EAAA,GAAAF,EAAA,GAAA5D,EACA8D,GAEA,CACAF,EAAA,GAAA5D,EACA4D,EAAA,GAAA5D,EACA4D,EAAA,GAAA5D,EACA4D,EAAA,GAAA5D,GAaO,SAAAsB,EAAAsC,EAAAE,GACP,OAAAA,GACAA,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,GAEAF,EAAA3C,QAWO,SAAAM,EAAAqC,EAAAG,EAAAC,GACP,IAAAC,EAAAC,EAeA,OAbAD,EADAF,EAAAH,EAAA,GACAA,EAAA,GAAAG,EACGH,EAAA,GAAAG,EACHA,EAAAH,EAAA,GAEA,GASAK,GANAC,EADAF,EAAAJ,EAAA,GACAA,EAAA,GAAAI,EACGJ,EAAA,GAAAI,EACHA,EAAAJ,EAAA,GAEA,GAEAM,EAYO,SAAA1C,EAAAoC,EAAAO,GACP,OAAAzC,EAAAkC,EAAAO,EAAA,GAAAA,EAAA,IAgBO,SAAA1C,EAAA2C,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,IACAA,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,GAaO,SAAA1C,EAAAkC,EAAAG,EAAAC,GACP,OAAAJ,EAAA,IAAAG,MAAAH,EAAA,IAAAA,EAAA,IAAAI,MAAAJ,EAAA,GAWO,SAAAjC,EAAAiC,EAAAO,GACP,IAAAG,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GACAa,EAAAb,EAAA,GACAG,EAAAI,EAAA,GACAH,EAAAG,EAAA,GACAO,EAAqBhB,EAAA,EAAYiB,QAcjC,OAbAZ,EAAAO,EACAI,GAAkChB,EAAA,EAAYkB,KAC3Cb,EAAAS,IACHE,GAAkChB,EAAA,EAAYmB,OAE9Cb,EAAAO,EACAG,GAAkChB,EAAA,EAAYoB,MAC3Cd,EAAAS,IACHC,GAAkChB,EAAA,EAAYqB,OAE9CL,IAAuBhB,EAAA,EAAYiB,UACnCD,EAAmBhB,EAAA,EAAYsB,cAE/BN,EASO,SAAA9C,IACP,OAAAqD,mBAaO,SAAApD,EAAAyC,EAAAC,EAAAC,EAAAC,EAAAX,GACP,OAAAA,GACAA,EAAA,GAAAQ,EACAR,EAAA,GAAAS,EACAT,EAAA,GAAAU,EACAV,EAAA,GAAAW,EACAX,GAEA,CAAAQ,EAAAC,EAAAC,EAAAC,GAUO,SAAA3C,EAAAgC,GACP,OAAAjC,EACAoD,kBAAAnB,GASO,SAAA/B,EAAAoC,EAAAL,GACP,IAAAC,EAAAI,EAAA,GACAH,EAAAG,EAAA,GACA,OAAAtC,EAAAkC,EAAAC,EAAAD,EAAAC,EAAAF,GASO,SAAA9B,EAAA2B,EAAAG,GAEP,OAAAoB,EADApD,EAAAgC,GACAH,GAYO,SAAA1B,EAAAkD,EAAAC,EAAAC,EAAAC,EAAAxB,GAEP,OAAAzB,EADAP,EAAAgC,GACAqB,EAAAC,EAAAC,EAAAC,GAqBO,SAAApD,EAAAkC,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GAWO,SAAAlC,EAAAiC,EAAAC,GAaP,OAZAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAD,EAQO,SAAAhC,EAAAwB,EAAAO,GACPA,EAAA,GAAAP,EAAA,KACAA,EAAA,GAAAO,EAAA,IAEAA,EAAA,GAAAP,EAAA,KACAA,EAAA,GAAAO,EAAA,IAEAA,EAAA,GAAAP,EAAA,KACAA,EAAA,GAAAO,EAAA,IAEAA,EAAA,GAAAP,EAAA,KACAA,EAAA,GAAAO,EAAA,IAUO,SAAAe,EAAAtB,EAAAD,GACP,QAAA9H,EAAA,EAAAgI,EAAAF,EAAA5H,OAA0CF,EAAAgI,IAAQhI,EAClDuG,EAAAwB,EAAAD,EAAA9H,IAEA,OAAA+H,EAYO,SAAAvB,EAAAuB,EAAAuB,EAAAC,EAAAC,EAAAC,GACP,KAAQF,EAAAC,EAAcD,GAAAE,EACtBC,EAAA3B,EAAAuB,EAAAC,GAAAD,EAAAC,EAAA,IAEA,OAAAxB,EAsBO,SAAA2B,EAAA3B,EAAAG,EAAAC,GACPJ,EAAA,GAAA4B,KAAAC,IAAA7B,EAAA,GAAAG,GACAH,EAAA,GAAA4B,KAAAC,IAAA7B,EAAA,GAAAI,GACAJ,EAAA,GAAA4B,KAAAE,IAAA9B,EAAA,GAAAG,GACAH,EAAA,GAAA4B,KAAAE,IAAA9B,EAAA,GAAAI,GAcO,SAAA1B,EAAAsB,EAAA+B,EAAAC,GACP,IAAAC,EAEA,OADAA,EAAAF,EAAAtJ,KAAAuJ,EAAApD,EAAAoB,KAEAiC,GAEAA,EAAAF,EAAAtJ,KAAAuJ,EAAAnD,EAAAmB,KAEAiC,GAEAA,EAAAF,EAAAtJ,KAAAuJ,EAAA5C,EAAAY,KAEAiC,GAEAA,EAAAF,EAAAtJ,KAAAuJ,EAAA7C,EAAAa,OAIA,EAUO,SAAArB,EAAAqB,GACP,IAAAkC,EAAA,EAIA,OAHA3C,EAAAS,KACAkC,EAAA7C,EAAAW,GAAAf,EAAAe,IAEAkC,EAUO,SAAAtD,EAAAoB,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAnB,EAAAmB,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAlB,EAAAkB,GACP,QAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAUO,SAAAjB,EAAAiB,EAAAmC,GACP,IAAA5B,EAYA,OAXA4B,IAAiBtC,EAAA,EAAMuC,YACvB7B,EAAA3B,EAAAoB,GACGmC,IAAqBtC,EAAA,EAAMwC,aAC9B9B,EAAA1B,EAAAmB,GACGmC,IAAqBtC,EAAA,EAAMyC,SAC9B/B,EAAApB,EAAAa,GACGmC,IAAqBtC,EAAA,EAAM0C,UAC9BhC,EAAAnB,EAAAY,GAEI1H,OAAAsH,EAAA,EAAAtH,EAAM,MAEViI,EA0BO,SAAAvB,EAAAwD,EAAAC,EAAAC,EAAAC,EAAAzC,GACP,IAAAG,EAAAoC,EAAAE,EAAA,KACArC,EAAAmC,EAAAE,EAAA,KACAC,EAAAhB,KAAAiB,IAAAH,GACAI,EAAAlB,KAAAmB,IAAAL,GACAM,EAAA3C,EAAAuC,EACAK,EAAA5C,EAAAyC,EACAI,EAAA5C,EAAAsC,EACAO,EAAA7C,EAAAwC,EACA3C,EAAAqC,EAAA,GACApC,EAAAoC,EAAA,GACAY,EAAAjD,EAAA6C,EAAAG,EACAE,EAAAlD,EAAA6C,EAAAG,EACAG,EAAAnD,EAAA6C,EAAAG,EACAI,EAAApD,EAAA6C,EAAAG,EACAK,EAAApD,EAAA6C,EAAAC,EACAO,EAAArD,EAAA6C,EAAAC,EACAQ,EAAAtD,EAAA6C,EAAAC,EACAS,EAAAvD,EAAA6C,EAAAC,EACA,OAAAjF,EACA2D,KAAAC,IAAAuB,EAAAC,EAAAC,EAAAC,GAAA3B,KAAAC,IAAA2B,EAAAC,EAAAC,EAAAC,GACA/B,KAAAE,IAAAsB,EAAAC,EAAAC,EAAAC,GAAA3B,KAAAE,IAAA0B,EAAAC,EAAAC,EAAAC,GACAzD,GAUO,SAAAjB,EAAAe,GACP,OAAAA,EAAA,GAAAA,EAAA,GAuBO,SAAAd,EAAAsB,EAAAC,EAAAP,GACP,IAAA0D,EAAA1D,GA1XA,CAAAmB,SAAA,UAmZA,OAxBA/B,EAAAkB,EAAAC,IACAD,EAAA,GAAAC,EAAA,GACAmD,EAAA,GAAApD,EAAA,GAEAoD,EAAA,GAAAnD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAmD,EAAA,GAAApD,EAAA,GAEAoD,EAAA,GAAAnD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAmD,EAAA,GAAApD,EAAA,GAEAoD,EAAA,GAAAnD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAmD,EAAA,GAAApD,EAAA,GAEAoD,EAAA,GAAAnD,EAAA,IAGAvC,EAAA0F,GAEAA,EA8BO,SAAAzE,EAAAa,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAZ,EAAAY,GACP,OAAAA,EAAA,GAAAA,EAAA,IAUO,SAAAX,EAAAW,GACP,OAAAA,EAAA,GAAAA,EAAA,GAWO,SAAAV,EAAAkB,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,GAUO,SAAAlB,EAAAS,GACP,OAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GASO,SAAAR,EAAAQ,EAAAE,GACP,OAAAA,GACAA,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,EAAA,GAAAF,EAAA,GACAE,GAEAF,EASO,SAAAP,EAAAO,EAAA5D,GACP,IAAAyH,GAAA7D,EAAA,GAAAA,EAAA,OAAA5D,EAAA,GACA0H,GAAA9D,EAAA,GAAAA,EAAA,OAAA5D,EAAA,GACA4D,EAAA,IAAA6D,EACA7D,EAAA,IAAA6D,EACA7D,EAAA,IAAA8D,EACA9D,EAAA,IAAA8D,EAYO,SAAApE,EAAAM,EAAA+D,EAAAtC,GACP,IAAAnC,GAAA,EACA0E,EAAAjG,EAAAiC,EAAA+D,GACAE,EAAAlG,EAAAiC,EAAAyB,GACA,GAAAuC,IAAmBlE,EAAA,EAAYsB,cAC/B6C,IAAiBnE,EAAA,EAAYsB,aAC7B9B,GAAA,MACG,CACH,IASAa,EAAAC,EATAM,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GACAa,EAAAb,EAAA,GACAkE,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAA3C,EAAA,GACA4C,EAAA5C,EAAA,GACA6C,GAAAD,EAAAF,IAAAC,EAAAF,GAEAD,EAAoBnE,EAAA,EAAYqB,SAChC6C,EAAqBlE,EAAA,EAAYqB,SAGjC7B,GADAa,EAAAiE,GAAAC,EAAAxD,GAAAyD,IACA5D,GAAAP,GAAAS,GAEAtB,KAAA2E,EAAmCnE,EAAA,EAAYmB,QAC/C+C,EAAqBlE,EAAA,EAAYmB,QAGjC3B,GADAc,EAAAiE,GAAAD,EAAAxD,GAAA0D,IACA3D,GAAAP,GAAAS,GAEAvB,KAAA2E,EAAmCnE,EAAA,EAAYoB,QAC/C8C,EAAqBlE,EAAA,EAAYoB,QAGjC5B,GADAa,EAAAiE,GAAAC,EAAA1D,GAAA2D,IACA5D,GAAAP,GAAAS,GAEAtB,KAAA2E,EAAmCnE,EAAA,EAAYkB,OAC/CgD,EAAqBlE,EAAA,EAAYkB,OAGjC1B,GADAc,EAAAiE,GAAAD,EAAA1D,GAAA4D,IACA3D,GAAAP,GAAAS,GAIA,OAAAvB,EAaO,SAAAK,EAAAK,EAAAuE,EAAArE,GACP,IAAAH,EAAA,CACAC,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IAKA,OAHAuE,EAAAxE,IAAA,GAlvBA,SAAAyE,EAAAC,EAAAvE,GAKA,OAAAjC,EAJA2D,KAAAC,IAAA6C,MAAA,KAAAF,GACA5C,KAAAC,IAAA6C,MAAA,KAAAD,GACA7C,KAAAE,IAAA4C,MAAA,KAAAF,GACA5C,KAAAE,IAAA4C,MAAA,KAAAD,GACAvE,GAgvBAyE,CAFA,CAAA5E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,CAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAG,kCC1xBAnH,EAAA2C,EAAA6B,EAAA,sBAAAqH,IAAA7L,EAAA2C,EAAA6B,EAAA,sBAAAsH,IAAA9L,EAAA2C,EAAA6B,EAAA,sBAAAuH,IAAA/L,EAAA2C,EAAA6B,EAAA,sBAAAwH,IAAAhM,EAAA2C,EAAA6B,EAAA,sBAAAyH,IAAA,IAAAC,EAAAlM,EAAA,IA0DO,SAAAmM,EAAAC,EAAAC,EAAApD,EAAAqD,GAEP,IADA,IAAAC,EACArN,EAAA,EAAAgI,EAAAkF,EAAAhN,OAAwCF,EAAAgI,IAAQhI,EAEhD,IADAqN,EAAAH,EAAAlN,IACAmN,cACAE,EAAAC,SAAAvD,EAIA,OAHAqD,IACAC,EAAAE,YAAAvN,GAEAqN,EAYO,SAAAG,EAAAzK,EAAAF,GACP,IAAA4K,EAAAC,EAAA3K,GACA,OAAA0K,IAAA5K,QAAAM,EAWA,SAAAuK,EAAA3K,EAAA4K,GACA,IAAAF,EAAA1K,EAAA6K,MAIA,OAHAH,GAAAE,IACAF,EAAA1K,EAAA6K,MAAA,IAEAH,EAoBA,SAAAI,EAAA9K,EAAAF,GACA,IAAAqK,EAAAM,EAAAzK,EAAAF,GACA,GAAAqK,EAAA,CACA,QAAAlN,EAAA,EAAAgI,EAAAkF,EAAAhN,OAA0CF,EAAAgI,IAAQhI,EACI,EACtD8N,oBAAAjL,EAAAqK,EAAAlN,GAAA+N,eACM1N,OAAA2M,EAAA,EAAA3M,CAAK6M,EAAAlN,IAEXkN,EAAAhN,OAAA,EACA,IAAAuN,EAAAC,EAAA3K,GACA0K,WACAA,EAAA5K,GACA,IAAAxC,OAAA2N,KAAAP,GAAAvN,QAxBA,SAAA6C,UACAA,EAAA6K,MAwBAK,CAAAlL,KAsBO,SAAA4J,EAAA5J,EAAAF,EAAAsK,EAAApD,EAAAmE,GACP,IAAAT,EAAAC,EAAA3K,GAAA,GACAmK,EAAAO,EAAA5K,GACAqK,IACAA,EAAAO,EAAA5K,GAAA,IAEA,IAAAwK,EAAAJ,EAAAC,EAAAC,EAAApD,GAAA,GAmBA,OAlBAsD,EACAa,IAEAb,EAAAc,UAAA,IAGAd,EAAuC,CACvCC,OAAAvD,EACAoE,WAAAD,EACAf,WACApK,SACAF,QAEoD,EACpDuL,iBAAAvL,EA5IO,SAAAwK,GACP,IAAAU,EAAA,SAAAM,GACA,IAAAlB,EAAAE,EAAAF,SACAG,EAAAD,EAAAC,QAAAD,EAAAtK,OAIA,OAHAsK,EAAAc,UACArB,EAAAO,GAEAF,EAAA3M,KAAA8M,EAAAe,IAGA,OADAhB,EAAAU,gBACAA,EAkIAO,CAAAjB,IACAH,EAAA9M,KAAAiN,IAGAA,EAwBO,SAAAT,EAAA7J,EAAAF,EAAAsK,EAAApD,GACP,OAAA4C,EAAA5J,EAAAF,EAAAsK,EAAApD,GAAA,GAiBO,SAAA8C,EAAA9J,EAAAF,EAAAsK,EAAApD,GACP,IAAAmD,EAAAM,EAAAzK,EAAAF,GACA,GAAAqK,EAAA,CACA,IAAAG,EAAAJ,EAAAC,EAAAC,EAAApD,GAAA,GACAsD,GACAP,EAAAO,IAeO,SAAAP,EAAArI,GACP,GAAAA,KAAA1B,OAAA,CACoD0B,EAAA,OACpDqJ,oBAAArJ,EAAA5B,KAAA4B,EAAAsJ,eACA,IAAAb,EAAAM,EAAA/I,EAAA1B,OAAA0B,EAAA5B,MACA,GAAAqK,EAAA,CACA,IAAAlN,EAAA,gBAAAyE,IAAA8I,YAAAL,EAAAqB,QAAA9J,IACA,IAAAzE,GACAkN,EAAAsB,OAAAxO,EAAA,GAEA,IAAAkN,EAAAhN,QACA2N,EAAApJ,EAAA1B,OAAA0B,EAAA5B,MAGIxC,OAAA2M,EAAA,EAAA3M,CAAKoE,IAWF,SAAAsI,EAAAhK,GACP,IAAA0K,EAAAC,EAAA3K,GACA,GAAA0K,EACA,QAAA5K,KAAA4K,EACAI,EAAA9K,EAAAF,kCCrQO,SAAA4L,IACP,OAAsB,WACtB,UAAAxL,MAAA,kCADsB,GARtBnC,EAAA2C,EAAA6B,EAAA,sBAAAmJ,IAAA3N,EAAA2C,EAAA6B,EAAA,sBAAAoJ,IAAA5N,EAAA2C,EAAA6B,EAAA,sBAAAqJ,IA8CA,IAAAC,EAAA,EAYO,SAAAF,EAAAG,GACP,OAAAA,EAAAC,SAAAD,EAAAC,OAAAC,SAAAH,IAOO,IAAAD,EAAA,sCClEP7N,EAAA2C,EAAA6B,EAAA,sBAAA0J,IAAAlO,EAAA2C,EAAA6B,EAAA,sBAAA2J,IAAAnO,EAAA2C,EAAA6B,EAAA,sBAAA4J,IAAApO,EAAA2C,EAAA6B,EAAA,sBAAA6J,IAAArO,EAAA2C,EAAA6B,EAAA,sBAAA8J,IAAAtO,EAAA2C,EAAA6B,EAAA,sBAAA+J,IAAAvO,EAAA2C,EAAA6B,EAAA,sBAAAgK,IAAAxO,EAAA2C,EAAA6B,EAAA,sBAAAiK,IAAAzO,EAAA2C,EAAA6B,EAAA,sBAAAkK,IAAA1O,EAAA2C,EAAA6B,EAAA,sBAAAmK,IAAA3O,EAAA2C,EAAA6B,EAAA,sBAAAoK,IAAA5O,EAAA2C,EAAA6B,EAAA,sBAAAqK,IAAA7O,EAAA2C,EAAA6B,EAAA,sBAAAsK,IAAA9O,EAAA2C,EAAA6B,EAAA,sBAAAuK,IAAA/O,EAAA2C,EAAA6B,EAAA,sBAAAwK,IAAAhP,EAAA2C,EAAA6B,EAAA,sBAAAyK,IAAAjP,EAAA2C,EAAA6B,EAAA,sBAAA0K,IAAAlP,EAAA2C,EAAA6B,EAAA,sBAAA2K,IAAAnP,EAAA2C,EAAA6B,EAAA,sBAAA4K,IAAA,IAAAC,EAAArP,EAAA,IAAAsP,EAAAtP,EAAA,IAAAuP,EAAAvP,EAAA,IAAAwP,EAAAxP,EAAA,IAAAyP,EAAAzP,EAAA,GAkFOkO,EAAA,kBAOAC,EAAA,UAOAC,EAAA,QAOAC,EAAA,GAOAC,EAAA,EAOAC,EAAA,QAOAC,EAAA,GAOAC,EAAA,UAOAC,EAAA,SAOAC,EAAA,SAOAC,EAAA,UAOAC,EAAA,EASAC,EAAA,IAAqBU,EAAA,EAMrBE,EAAA,GAMPC,EAAA,KAMOC,EAAA,GAOAb,EAAA,WACP,IAMAc,EAAAC,EANAC,EAAA,GACAC,EAAAN,EACA9F,EAAA,QACAqG,EAAA,sBACAC,EAAAD,EAAA7Q,OACA+Q,EAAA,2BAGA,SAAAC,EAAAC,GAIA,IAHA,IAAAC,EAAAC,IAGAC,EAAA,IAA0BA,GAAA,IAAeA,GAAA,KAGzC,IAFA,IAAAC,EAAAD,EAAA,IACAE,GAAA,EACAxR,EAAA,EAAqBA,EAAAgR,IAAShR,EAAA,CAC9B,IAAAyR,EAAAV,EAAA/Q,GAGA,GAFAoR,EAAAD,KAAAI,EAAA7G,EAAA+G,EACAb,EAAAQ,EAAAM,YAAAT,GAAAU,MACAR,GAAAM,EAAA,CACAL,EAAAD,KAAAI,EAAA7G,EAAAyG,EAAA,IAAAM,EACA,IAAAE,EAAAP,EAAAM,YAAAT,GAAAU,MAGAH,KAAAG,GAAAf,GAGA,GAAAY,EAIA,SAGA,SAGA,SAAAI,IACA,IAAAC,GAAA,EACA,QAAAV,KAAAL,EACAA,EAAAK,GAAAN,IACAK,EAAAC,IACAL,EAAAK,GAAAN,EACUxQ,OAAAgQ,EAAA,EAAAhQ,CAAKqQ,GAEfD,EAAA,KACAb,EAAAkC,YAEAhB,EAAAK,GACAU,GAAA,IAIAA,IACAE,cAAApB,GACAA,OAAAxN,GAIA,gBAAA6O,GACA,IAAAC,EAAuB5R,OAAA8P,EAAA,EAAA9P,CAAe2R,GACtC,GAAAC,EAGA,QAAAjS,EAAA,EAAAgI,EAAAiK,EAAA/R,OAA6CF,EAAAgI,IAAQhI,EAAA,CACrD,IAAAkS,EAAAD,EAAAjS,GACAkS,KAAApB,IACAA,EAAAoB,GAAArB,EACAK,EAAAgB,KACApB,EAAAoB,GAAA,OACA/O,IAAAwN,IACAA,EAAAwB,YAAAP,EAAA,SAxEO,GAoFP,SAAAP,IAIA,OAHAZ,IACAA,EAAqBpQ,OAAA+P,EAAA,EAAA/P,CAAqB,MAE1CoQ,EAQO,IACP2B,EACAC,EAFOvC,GAEPuC,EAAA3B,EACA,SAAAS,GACA,IAAAmB,EAAAD,EAAAlB,GAcA,OAbAhO,MAAAmP,IACAF,KACAA,EAAAzQ,SAAAG,cAAA,SACAyQ,YAAA,IACAH,EAAAI,MAAAC,OAAAL,EAAAI,MAAAE,QAAA,eACAN,EAAAI,MAAAG,SAAA,sBACAP,EAAAI,MAAAI,KAAA,uBAEAR,EAAAI,MAAArB,OACAxP,SAAAkR,KAAAxP,YAAA+O,GACAE,EAAAD,EAAAlB,GAAAiB,EAAAU,aACAnR,SAAAkR,KAAAE,YAAAX,IAEAE,IAUO,SAAAvC,EAAAoB,EAAAF,GACP,IAAAR,EAAAY,IAIA,OAHAF,GAAAV,EAAAU,OACAV,EAAAU,QAEAV,EAAAiB,YAAAT,GAAAU,MAUO,SAAA3B,EAAAoB,EAAA3G,EAAAuI,EAAAC,GACP,IAAAxI,IACA2G,EAAA8B,UAAAF,EAAAC,GACA7B,EAAA+B,OAAA1I,GACA2G,EAAA8B,WAAAF,GAAAC,IAKO,IAAAhD,EAAqB5P,OAAAkQ,EAAA,EAAAlQ,GAgBrB,SAAA6P,EAAAkB,EACPgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxL,EAAAC,EAAAwL,GACA,IAAAC,EACA,GAAAP,IACAO,EAAAxC,EAAAyC,YACAzC,EAAAyC,YAAAD,EAAAP,GAEAD,GACAhC,EAAA0C,aAAArH,MAAA2E,EAAAgC,GAGAhC,EAAAlB,UAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxL,EAAAC,EAAAsL,EAAAE,EAAAD,EAAAC,GAEAC,IACAxC,EAAAyC,YAAAD,GAEAR,GACAhC,EAAA0C,aAAArH,MAAA2E,EAAAnB,kCC9We3K,EAAA,GAMfyO,OAAA,SAEAC,MAAA,QACAC,YAAA,cACAC,MAAA,QACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,KAAA,OACAC,MAAA,QACAC,QAAA,UACAC,SAAA,WACAC,KAAA,OACAC,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,cAAA,gBACAC,OAAA,SACAC,WAAA,aACAC,UAAA,YACAC,SAAA,WACAC,MAAA,uCC3Be/P,EAAA,GACfgQ,MAAA,QACAC,YAAA,aACAC,YAAA,aACAC,QAAA,UACAC,YAAA,aACAC,kBAAA,kBACAC,cAAA,eACAC,oBAAA,qBACAC,OAAA,wCCnBAhV,EAAA2C,EAAA6B,EAAA,sBAAAyQ,IAAAjV,EAAA2C,EAAA6B,EAAA,sBAAA0Q,IAAAlV,EAAA2C,EAAA6B,EAAA,sBAAA2Q,IAAAnV,EAAA2C,EAAA6B,EAAA,sBAAA4Q,IAAApV,EAAA2C,EAAA6B,EAAA,sBAAA6Q,IAAArV,EAAA2C,EAAA6B,EAAA,sBAAA8Q,IAAAtV,EAAA2C,EAAA6B,EAAA,sBAAA+Q,IAAAvV,EAAA2C,EAAA6B,EAAA,sBAAAgR,IAAAxV,EAAA2C,EAAA6B,EAAA,sBAAAiR,IAAAzV,EAAA,IAaO,SAAAiV,EAAA5R,EAAAyF,EAAAC,GACP,OAAAF,KAAAC,IAAAD,KAAAE,IAAA1F,EAAAyF,GAAAC,GAaO,IAAAmM,EAIP,SAAArM,KAEAA,KAAAqM,KAGA,SAAA9N,GACA,IAAAC,EAA8B,KAAAqO,IAAAtO,GAC9B,OAAAC,EAAA,EAAAA,GAAA,GA4BO,SAAA8N,EAAA/N,EAAAC,EAAAiD,EAAAI,EAAAH,EAAAI,GACP,IAAArD,EAAAiD,EAAAD,EACA/C,EAAAoD,EAAAD,EACA,OAAApD,GAAA,IAAAC,EAAA,CACA,IAAAjE,IAAA8D,EAAAkD,GAAAhD,GAAAD,EAAAqD,GAAAnD,IAAAD,IAAAC,KACAjE,EAAA,GACAgH,EAAAC,EACAG,EAAAC,GACKrH,EAAA,IACLgH,GAAAhD,EAAAhE,EACAoH,GAAAnD,EAAAjE,GAGA,OAAA8R,EAAAhO,EAAAC,EAAAiD,EAAAI,GAYO,SAAA0K,EAAA9K,EAAAI,EAAAH,EAAAI,GACP,IAAArD,EAAAiD,EAAAD,EACA/C,EAAAoD,EAAAD,EACA,OAAApD,IAAAC,IAWO,SAAA8N,EAAAM,GAGP,IAFA,IAAA9R,EAAA8R,EAAAvW,OAEAF,EAAA,EAAiBA,EAAA2E,EAAO3E,IAAA,CAIxB,IAFA,IAAA0W,EAAA1W,EACA2W,EAAAhN,KAAAiN,IAAAH,EAAAzW,OACAgE,EAAAhE,EAAA,EAAuBgE,EAAAW,EAAOX,IAAA,CAC9B,IAAA6S,EAAAlN,KAAAiN,IAAAH,EAAAzS,GAAAhE,IACA6W,EAAAF,IACAA,EAAAE,EACAH,EAAA1S,GAIA,OAAA2S,EACA,YAIA,IAAAG,EAAAL,EAAAC,GACAD,EAAAC,GAAAD,EAAAzW,GACAyW,EAAAzW,GAAA8W,EAGA,QAAAC,EAAA/W,EAAA,EAAuB+W,EAAApS,EAAOoS,IAE9B,IADA,IAAAC,GAAAP,EAAAM,GAAA/W,GAAAyW,EAAAzW,MACAiX,EAAAjX,EAAqBiX,EAAAtS,EAAA,EAAWsS,IAChCjX,GAAAiX,EACAR,EAAAM,GAAAE,GAAA,EAEAR,EAAAM,GAAAE,IAAAD,EAAAP,EAAAzW,GAAAiX,GAQA,IADA,IAAA/O,EAAA,IAAAgP,MAAAvS,GACA1D,EAAA0D,EAAA,EAAqB1D,GAAA,EAAQA,IAAA,CAC7BiH,EAAAjH,GAAAwV,EAAAxV,GAAA0D,GAAA8R,EAAAxV,MACA,QAAAsC,EAAAtC,EAAA,EAAuBsC,GAAA,EAAQA,IAC/BkT,EAAAlT,GAAAoB,IAAA8R,EAAAlT,GAAAtC,GAAAiH,EAAAjH,GAGA,OAAAiH,EAUO,SAAAkO,EAAAe,GACP,WAAAA,EAAAxN,KAAAyN,GAUO,SAAAf,EAAAgB,GACP,OAAAA,EAAA1N,KAAAyN,GAAA,IAUO,SAAAd,EAAAgB,EAAAC,GACP,IAAAvT,EAAAsT,EAAAC,EACA,OAAAvT,EAAAuT,EAAA,EAAAvT,EAAAuT,EAAAvT,EAWO,SAAAuS,EAAAe,EAAAC,EAAArP,GACP,OAAAoP,EAAApP,GAAAqP,EAAAD,kCC7LehS,EAAA,GACfkS,KAAA,EACAC,QAAA,EACAC,OAAA,EAKAnD,MAAA,EACAoD,MAAA,EACAC,MAAA,iCCjBA9W,EAAA2C,EAAA6B,EAAA,sBAAAd,IAAA1D,EAAA2C,EAAA6B,EAAA,sBAAAuS,IAAA/W,EAAA2C,EAAA6B,EAAA,sBAAAwS,IAAAhX,EAAA2C,EAAA6B,EAAA,sBAAAmH,IAAA3L,EAAA2C,EAAA6B,EAAA,sBAAAqO,IAAA7S,EAAA2C,EAAA6B,EAAA,sBAAA4N,IAAApS,EAAA2C,EAAA6B,EAAA,sBAAAyS,IAAAjX,EAAA2C,EAAA6B,EAAA,sBAAA0S,IAAA,IAAArQ,EAAA7G,EAAA,IA8BAmX,EAAA,IAAAf,MAAA,GAOO,SAAA1S,IACP,oBASO,SAAAqT,EAAAzE,GACP,OAAA8E,EAAA9E,EAAA,aAWO,SAAA+E,EAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GASA,OAPAD,EAAA,GAAAE,EAAAM,EAAAJ,EAAAK,EACAT,EAAA,GAAAG,EAAAK,EAAAH,EAAAI,EACAT,EAAA,GAAAE,EAAAQ,EAAAN,EAAAO,EACAX,EAAA,GAAAG,EAAAO,EAAAL,EAAAM,EACAX,EAAA,GAAAE,EAAAU,EAAAR,EAAAS,EAAAP,EACAN,EAAA,GAAAG,EAAAS,EAAAP,EAAAQ,EAAAN,EAEAP,EAcO,SAAAF,EAAA9E,EAAAkE,EAAAC,EAAA/T,EAAAC,EAAAvC,EAAAgY,GAOP,OANA9F,EAAA,GAAAkE,EACAlE,EAAA,GAAAmE,EACAnE,EAAA,GAAA5P,EACA4P,EAAA,GAAA3P,EACA2P,EAAA,GAAAlS,EACAkS,EAAA,GAAA8F,EACA9F,EAUO,SAAA0E,EAAAM,EAAAC,GAOP,OANAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAaO,SAAA3L,EAAA2G,EAAA9K,GACP,IAAAJ,EAAAI,EAAA,GACAH,EAAAG,EAAA,GAGA,OAFAA,EAAA,GAAA8K,EAAA,GAAAlL,EAAAkL,EAAA,GAAAjL,EAAAiL,EAAA,GACA9K,EAAA,GAAA8K,EAAA,GAAAlL,EAAAkL,EAAA,GAAAjL,EAAAiL,EAAA,GACA9K,EAwBO,SAAAqL,EAAAP,EAAAlL,EAAAC,GACP,OAAAgQ,EAAA/E,EAAA8E,EAAAD,EAAA/P,EAAA,IAAAC,EAAA,MAWO,SAAA+K,EAAAE,EAAAhL,EAAAC,GACP,OAAA8P,EAAA/E,EAAA8E,EAAAD,EAAA,QAAA7P,EAAAC,IAiBO,SAAA0P,EAAA3E,EAAA+F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACP,IAAA3O,EAAAnB,KAAAmB,IAAAyO,GACA3O,EAAAjB,KAAAiB,IAAA2O,GAOA,OANAnG,EAAA,GAAAiG,EAAAzO,EACAwI,EAAA,GAAAkG,EAAAxO,EACAsI,EAAA,IAAAiG,EAAAvO,EACAsI,EAAA,GAAAkG,EAAA1O,EACAwI,EAAA,GAAAoG,EAAAH,EAAAzO,EAAA6O,EAAAJ,EAAAvO,EAAAqO,EACA/F,EAAA,GAAAoG,EAAAF,EAAAxO,EAAA2O,EAAAH,EAAA1O,EAAAwO,EACAhG,EASO,SAAA4E,EAAA5E,GACP,IA0BOqD,EA1BPiD,GA0BOjD,EA1BPrD,GA2BA,GAAAqD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GA1BEpW,OAAAsH,EAAA,EAAAtH,CAAM,IAAAqZ,EAAA,IAER,IAAApC,EAAAlE,EAAA,GACAmE,EAAAnE,EAAA,GACA5P,EAAA4P,EAAA,GACA3P,EAAA2P,EAAA,GACAlS,EAAAkS,EAAA,GACA8F,EAAA9F,EAAA,GASA,OAPAA,EAAA,GAAA3P,EAAAiW,EACAtG,EAAA,IAAAmE,EAAAmC,EACAtG,EAAA,IAAA5P,EAAAkW,EACAtG,EAAA,GAAAkE,EAAAoC,EACAtG,EAAA,IAAA5P,EAAA0V,EAAAzV,EAAAvC,GAAAwY,EACAtG,EAAA,KAAAkE,EAAA4B,EAAA3B,EAAArW,GAAAwY,EAEAtG,kBClOApS,EAAAD,QAAA4Y,uECqDIC,EAAU,SAAAC,GAKdC,KAAAC,MAAAF,EAAAG,KASAF,KAAAG,OAAwDJ,EAAA,MASxDC,KAAAI,aAAA/W,IAAA0W,EAAA9R,OAAA8R,EAAA9R,OAAA,KASA+R,KAAAK,kBAAAhX,IAAA0W,EAAAO,YACAP,EAAAO,YAAA,KAMAN,KAAAO,sBAAAlX,IAAA0W,EAAAS,gBACAT,EAAAS,gBAAA,MAMAR,KAAAS,aAAApX,IAAA0W,EAAAW,QAAAX,EAAAW,OAMAV,KAAAW,aAAAX,KAAAS,UAAAT,KAAAI,SAMAJ,KAAAY,wBAAAb,EAAAc,mBAMAb,KAAAc,iBAAA,KAMAd,KAAAe,eAAAhB,EAAAiB,eAMAlB,EAAUtZ,UAAAya,SAAA,WACV,OAAAjB,KAAAW,WAQAb,EAAUtZ,UAAA0a,QAAA,WACV,OAAAlB,KAAAC,OAQAH,EAAUtZ,UAAA2a,UAAA,WACV,OAAAnB,KAAAI,SAQAN,EAAUtZ,UAAA4a,SAAA,WACV,OAAApB,KAAAG,QAUAL,EAAUtZ,UAAA6a,iBAAA,WACV,OAAArB,KAAAe,gBAAgCO,EAAA,EAAetB,KAAAG,SAQ/CL,EAAUtZ,UAAA+a,eAAA,WACV,OAAAvB,KAAAK,cAcAP,EAAUtZ,UAAAgb,mBAAA,WACV,OAAAxB,KAAAO,kBAQAT,EAAUtZ,UAAAib,SAAA,WACV,OAAAzB,KAAAS,SAQAX,EAAUtZ,UAAAkb,UAAA,SAAAhB,GACVV,KAAAS,QAAAC,EACAV,KAAAW,aAAAD,IAAAV,KAAAI,UAMAN,EAAUtZ,UAAAmb,mBAAA,WACV,OAAA3B,KAAAc,kBAMAhB,EAAUtZ,UAAAob,mBAAA,SAAAC,GACV7B,KAAAc,iBAAAe,GAQA/B,EAAUtZ,UAAAsb,UAAA,SAAA7T,GACV+R,KAAAI,QAAAnS,EACA+R,KAAAW,aAAAX,KAAAS,UAAAxS,IASA6R,EAAUtZ,UAAAub,eAAA,SAAAzB,GACVN,KAAAK,aAAAC,GASAR,EAAUtZ,UAAAwb,sBAAA,SAAAC,GACVjC,KAAAY,wBAAAqB,GAQAnC,EAAUtZ,UAAA0b,uBAAA,WACV,OAAAlC,KAAAY,yBAGe,IAAAuB,EAAA,EC7PRC,EAAA,QAOAC,EAAAxS,KAAAyN,GAAA8E,EAOAE,EAAA,EACPD,KACAA,KAQOE,EAAA,kBAOHC,EAAkB,SAAAC,GACtB,SAAAC,EAAAxC,GACAuC,EAAA/b,KAAAsZ,KAAA,CACAE,OACAyC,MAAarB,EAAA,EAAKsB,OAClB3U,OAAAqU,EACA5B,QAAA,EACAJ,YAAAiC,EACA1B,mBAAA,SAAAnQ,EAAAmS,GACA,OAAAnS,EAA4BnK,OAAAuc,EAAA,EAAAvc,CAAIsc,EAAA,GAAAT,MAUhC,OAJAK,IAAAC,EAAAK,UAAAN,GACAC,EAAAlc,UAAAD,OAAAmE,OAAA+X,KAAAjc,WACAkc,EAAAlc,UAAAwc,YAAAN,EAEAA,EAnBsB,CAoBpBP,GASKc,EAAA,CACP,IAAMT,EAAkB,aACxB,IAAMA,EAAkB,eACxB,IAAMA,EAAkB,eACxB,IAAMA,EAAkB,eACxB,IAAMA,EAAkB,oCACxB,IAAMA,EAAkB,8BACxB,IAAMA,EAAkB,iDAYjB,SAAAU,EAAAC,EAAAC,EAAAC,GACP,IAAAjd,EAAA+c,EAAA/c,OACAkd,EAAAD,EAAA,EAAAA,EAAA,EACAE,EAAAH,OACA/Z,IAAAka,IAGAA,EAFAD,EAAA,EAEAH,EAAA7X,QAEA,IAAA8R,MAAAhX,IAIA,IADA,IAAAod,EAAAnB,EACAnc,EAAA,EAAiBA,EAAAE,EAAYF,GAAAod,EAAA,CAC7BC,EAAArd,GAAAsd,EAAAL,EAAAjd,GAAA,IACA,IAAAmI,EAAA+T,EACAvS,KAAA4T,IAAA5T,KAAA6T,IAAA7T,KAAAyN,IAAA6F,EAAAjd,EAAA,aACAmI,EAAAmV,EACAnV,EAAAmV,EACKnV,GAAAmV,IACLnV,GAAAmV,GAEAD,EAAArd,EAAA,GAAAmI,EAEA,OAAAkV,EAYO,SAASI,EAAUR,EAAAC,EAAAC,GAC1B,IAAAjd,EAAA+c,EAAA/c,OACAkd,EAAAD,EAAA,EAAAA,EAAA,EACAE,EAAAH,OACA/Z,IAAAka,IAGAA,EAFAD,EAAA,EAEAH,EAAA7X,QAEA,IAAA8R,MAAAhX,IAGA,QAAAF,EAAA,EAAiBA,EAAAE,EAAYF,GAAAod,EAC7BC,EAAArd,GAAA,IAAAid,EAAAjd,GAAAmc,EACAkB,EAAArd,EAAA,OAAA2J,KAAA+T,KACA/T,KAAA6M,IAAAyG,EAAAjd,EAAA,GAAAkc,IAAAvS,KAAAyN,GAAA,GAEA,OAAAiG,ECrIO,IASIM,EAAM,kBAOVC,EAhBU,QAgBVjU,KAAAyN,GAAsC,IAWzCyG,EAAkB,SAAAtB,GACtB,SAAAuB,EAAA9D,EAAA+D,GACAxB,EAAA/b,KAAAsZ,KAAA,CACAE,OACAyC,MAAarB,EAAA,EAAK4C,QAClBjW,OAAc4V,EACdrD,gBAAAyD,EACAvD,QAAA,EACAM,cAAA8C,EACAxD,YAAmBuD,IASnB,OAJApB,IAAAuB,EAAAjB,UAAAN,GACAuB,EAAAxd,UAAAD,OAAAmE,OAAA+X,KAAAjc,WACAwd,EAAAxd,UAAAwc,YAAAgB,EAEAA,EAlBsB,CAmBpB7B,GASSgC,EAAW,CACtB,IAAMJ,EAAkB,UACxB,IAAMA,EAAkB,mBACxB,IAAMA,EAAkB,oCACxB,IAAMA,EAAkB,uCACxB,IAAMA,EAAkB,iCACxB,IAAMA,EAAkB,4BACxB,IAAMA,EAAkB,sDACxB,IAAMA,EAAkB,sCCpExBK,EAAA,aCqPOC,EAAAC,EAAAC,ECnPPC,EAAA,GAmBO,SAASC,EAAGC,EAAAC,EAAAnS,GACnB,IAAAoS,EAAAF,EAAAxD,UACA2D,EAAAF,EAAAzD,UACA0D,KAAAJ,IACAA,EAAAI,GAAA,IAEAJ,EAAAI,GAAAC,GAAArS,ED6DO,SAAAsS,EAAA3B,EAAAC,EAAAC,GACP,IAAAE,EACA,QAAAla,IAAA+Z,EAAA,CACA,QAAAld,EAAA,EAAAgI,EAAAiV,EAAA/c,OAAsCF,EAAAgI,IAAQhI,EAC9Ckd,EAAAld,GAAAid,EAAAjd,GAEAqd,EAAAH,OAEAG,EAAAJ,EAAA7X,QAEA,OAAAiY,EAUO,SAAAwB,EAAA5B,EAAAC,EAAAC,GACP,QAAAha,IAAA+Z,GAAAD,IAAAC,EAAA,CACA,QAAAld,EAAA,EAAAgI,EAAAiV,EAAA/c,OAAsCF,EAAAgI,IAAQhI,EAC9Ckd,EAAAld,GAAAid,EAAAjd,GAEAid,EAAAC,EAEA,OAAAD,EAWO,SAAA6B,EAAAC,IDpGA,SAAA/E,EAAA+E,GACPb,EAAAlE,GAAA+E,ECoGEC,CAAeD,EAAA/D,UAAA+D,GACfR,EAAgBQ,IAAAH,GAqBX,SAASK,EAAGC,GACnB,uBAAAA,EDrIAhB,ECsIsC,IDtItC,KCuI2B,QAwBpB,SAAAvD,EAAAoE,EAAAvU,EAAAmS,EAAAwC,GAEP,IAAAC,EACAzb,GAFAob,EAAeE,EAAGF,IAElB/C,yBACA,GAAArY,EACAyb,EAAAzb,EAAA6G,EAAAmS,QAGA,GADAoC,EAAA7D,YACiBE,EAAA,EAAK4C,UAAAmB,MAAuC/D,EAAA,EAAK4C,QAClEoB,EAAA5U,MACK,CAIL,IAAA6U,EAAAC,EAAAP,EAA+DE,EAAG,cAClEM,EAAA,CACA5C,EAAA,GAAAnS,EAAA,EAAAmS,EAAA,GACAA,EAAA,GAAAnS,EAAA,EAAAmS,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAnS,EAAA,EACAmS,EAAA,GAAAA,EAAA,GAAAnS,EAAA,GAEA+U,EAAAF,EAAAE,IAAA,GAGAH,GAFkB/e,OAAAmf,EAAA,EAAAnf,CAAWkf,EAAAna,MAAA,KAAAma,EAAAna,MAAA,MACV/E,OAAAmf,EAAA,EAAAnf,CAAWkf,EAAAna,MAAA,KAAAma,EAAAna,MAAA,OAC9B,EACA,IAAA0V,EAAAqE,EACQ/D,EAAA,EAAe+D,GACvBJ,EAAA5D,wBACAhY,IAAA2X,IACAsE,GAAAtE,GAIA,OAAAsE,EAWO,SAAAK,EAAAC,IArFA,SAAAA,GACPA,EAAAC,QAAAb,GAqFAc,CAAAF,GACAA,EAAAC,QAAA,SAAAnB,GACAkB,EAAAC,QAAA,SAAAlB,GACAD,IAAAC,GACQF,EAAgBC,EAAAC,EAAAG,OA4CjB,SAAAiB,EAAAd,EAAAe,GACP,OAAAf,EAEG,iBAAAA,EACQE,EAAGF,GAEd,EAJWE,EAAGa,GAmHP,SAAAC,EAAAC,EAAAC,GACP,GAAAD,IAAAC,EACA,SAEA,IAAAC,EAAAF,EAAA9E,aAAA+E,EAAA/E,WACA,OAAA8E,EAAAhF,YAAAiF,EAAAjF,UACAkF,EAEAZ,EAAAU,EAAAC,KACArB,GAAAsB,EAcO,SAAAZ,EAAAa,EAAAC,GACP,IAEAC,EClWO,SAAY3B,EAAAC,GACnB,IAAAvL,EAIA,OAHAsL,KAAAJ,GAAAK,KAAAL,EAAAI,KACAtL,EAAAkL,EAAAI,GAAAC,IAEAvL,ED6VsBkN,CAFtBH,EAAAnF,UACAoF,EAAApF,WAKA,OAHAqF,IACAA,EAAAxB,GAEAwB,EAcO,SAAAE,EAAA/B,EAAAC,GAGP,OAAAa,EAFyBL,EAAGT,GACES,EAAGR,IAmB1B,SAAS+B,EAASlY,EAAAkW,EAAAC,GAEzB,OADA8B,EAAA/B,EAAAC,EACA4B,CAAA/X,OAAAnF,EAAAmF,EAAApI,QAcO,SAAAugB,EAAA1Y,EAAAyW,EAAAC,GACP,IAAA4B,EAAAE,EAAA/B,EAAAC,GACA,OAASpe,OAAAqgB,EAAA,EAAArgB,CAAc0H,EAAAsY,GA7dvBvf,EAAA2C,EAAA6B,EAAA,sBAAA2Z,IAAAne,EAAA2C,EAAA6B,EAAA,sBAAAqV,IAAA7Z,EAAA2C,EAAA6B,EAAA,sBAAAua,IAAA/e,EAAA2C,EAAA6B,EAAA,sBAAAya,IAAAjf,EAAA2C,EAAA6B,EAAA,sBAAAga,IAAAxe,EAAA2C,EAAA6B,EAAA,sBAAAib,IAAAzf,EAAA2C,EAAA6B,EAAA,sBAAAkb,IAAA1f,EAAA2C,EAAA6B,EAAA,sBAAAmb,IAsfAhB,EAA2B1C,GAC3B0C,EAA2BxB,GA1PpBE,EA6PyCpB,EA7PzCqB,EA6P+DpB,EA7P/DqB,EA6P6EZ,EAA1DQ,EA5P1B0B,QAAA,SAAAK,GACA7B,EAAAwB,QAAA,SAAAM,GACM1B,EAAgByB,EAAAC,EAAA7B,GAChBG,EAAgB0B,EAAAD,EAAA3B,qCEnPf,SAAAsC,EAAAC,EAAAC,EAAAC,GAOP,IANA,IAAAC,EAAAC,EACAC,EAAAH,GAAAI,EACAC,EAAA,EACAC,EAAAR,EAAA1gB,OACAmhB,GAAA,EAEAF,EAAAC,IAIAJ,GAAAC,EAAAL,EADAG,EAAAI,GAAAC,EAAAD,GAAA,IACAN,IAEA,EACAM,EAAAJ,EAAA,GAGAK,EAAAL,EACAM,GAAAL,GAKA,OAAAK,EAAAF,KAWO,SAAAD,EAAA5J,EAAAC,GACP,OAAAD,EAAAC,EAAA,EAAAD,EAAAC,GAAA,IAUO,SAAA+J,EAAAC,EAAA1S,GACP,OAAA0S,EAAAhT,QAAAM,IAAA,EAYO,SAAA2S,EAAAD,EAAAxe,EAAA0e,GACP,IAMAzhB,EANA2E,EAAA4c,EAAArhB,OACA,GAAAqhB,EAAA,IAAAxe,EACA,SACG,GAAAA,GAAAwe,EAAA5c,EAAA,GACH,OAAAA,EAAA,EAGA,GAAA8c,EAAA,GACA,IAAAzhB,EAAA,EAAiBA,EAAA2E,IAAO3E,EACxB,GAAAuhB,EAAAvhB,GAAA+C,EACA,OAAA/C,EAAA,OAGK,GAAAyhB,EAAA,GACL,IAAAzhB,EAAA,EAAiBA,EAAA2E,IAAO3E,EACxB,GAAAuhB,EAAAvhB,IAAA+C,EACA,OAAA/C,OAIA,IAAAA,EAAA,EAAiBA,EAAA2E,IAAO3E,EAAA,CACxB,GAAAuhB,EAAAvhB,IAAA+C,EACA,OAAA/C,EACS,GAAAuhB,EAAAvhB,GAAA+C,EACT,OAAAwe,EAAAvhB,EAAA,GAAA+C,IAAAwe,EAAAvhB,GACAA,EAAA,EAEAA,EAKA,OAAA2E,EAAA,EAUO,SAAA+c,EAAAH,EAAAI,EAAAnY,GACP,KAAAmY,EAAAnY,GAAA,CACA,IAAAsN,EAAAyK,EAAAI,GACAJ,EAAAI,GAAAJ,EAAA/X,GACA+X,EAAA/X,GAAAsN,IACA6K,IACAnY,GAUO,SAAAlD,EAAAib,EAAA5hB,GAGP,IAFA,IAAAiiB,EAAA1K,MAAA2K,QAAAliB,KAAA,CAAAA,GACAO,EAAA0hB,EAAA1hB,OACAF,EAAA,EAAiBA,EAAAE,EAAYF,IAC7BuhB,IAAArhB,QAAA0hB,EAAA5hB,GAWO,SAAA8hB,EAAAP,EAAA1S,GACP,IAAA7O,EAAAuhB,EAAAhT,QAAAM,GACAwS,EAAArhB,GAAA,EAIA,OAHAqhB,GACAE,EAAA/S,OAAAxO,EAAA,GAEAqhB,EAUO,SAAAU,EAAAR,EAAAxF,GAIP,IAHA,IACA5X,EADAjE,EAAAqhB,EAAArhB,SAAA,EAGAF,EAAA,EAAiBA,EAAAE,EAAYF,IAE7B,GAAA+b,EADA5X,EAAAod,EAAAvhB,GACAA,EAAAuhB,GACA,OAAApd,EAGA,YASO,SAAAkC,EAAA2b,EAAAC,GACP,IAAAC,EAAAF,EAAA9hB,OACA,GAAAgiB,IAAAD,EAAA/hB,OACA,SAEA,QAAAF,EAAA,EAAiBA,EAAAkiB,EAAUliB,IAC3B,GAAAgiB,EAAAhiB,KAAAiiB,EAAAjiB,GACA,SAGA,SAWO,SAAAmiB,EAAAZ,EAAAa,GACP,IAEApiB,EAFAE,EAAAqhB,EAAArhB,OACA4W,EAAAI,MAAAqK,EAAArhB,QAEA,IAAAF,EAAA,EAAaA,EAAAE,EAAYF,IACzB8W,EAAA9W,GAAA,CAAcqiB,MAAAriB,EAAAmE,MAAAod,EAAAvhB,IAKd,IAHA8W,EAAAwL,KAAA,SAAAhL,EAAAC,GACA,OAAA6K,EAAA9K,EAAAnT,MAAAoT,EAAApT,QAAAmT,EAAA+K,MAAA9K,EAAA8K,QAEAriB,EAAA,EAAaA,EAAAuhB,EAAArhB,OAAgBF,IAC7BuhB,EAAAvhB,GAAA8W,EAAA9W,GAAAmE,MAUO,SAAAoe,EAAAhB,EAAAxF,GACP,IAAAsG,EAKA,OAJAd,EAAAiB,MAAA,SAAAC,EAAAC,GAEA,OADAL,EAAAK,GACA3G,EAAA0G,EAAAC,EAAAnB,KAEAc,GAAA,EAUO,SAAAM,EAAApB,EAAAqB,EAAAC,GACP,IAAAC,EAAAF,GAAA1B,EACA,OAAAK,EAAAiB,MAAA,SAAAO,EAAAV,GACA,OAAAA,EACA,SAEA,IAAAW,EAAAF,EAAAvB,EAAAc,EAAA,GAAAU,GACA,QAAAC,EAAA,GAAAH,GAAA,IAAAG,KAtPAliB,EAAA2C,EAAA6B,EAAA,sBAAAqb,IAAA7f,EAAA2C,EAAA6B,EAAA,sBAAA4b,IAAApgB,EAAA2C,EAAA6B,EAAA,sBAAAgc,IAAAxgB,EAAA2C,EAAA6B,EAAA,sBAAAkc,IAAA1gB,EAAA2C,EAAA6B,EAAA,sBAAAoc,IAAA5gB,EAAA2C,EAAA6B,EAAA,sBAAAgB,IAAAxF,EAAA2C,EAAA6B,EAAA,sBAAAwc,IAAAhhB,EAAA2C,EAAA6B,EAAA,sBAAAyc,IAAAjhB,EAAA2C,EAAA6B,EAAA,sBAAAe,IAAAvF,EAAA2C,EAAA6B,EAAA,sBAAA6c,IAAArhB,EAAA2C,EAAA6B,EAAA,sBAAAid,IAAAzhB,EAAA2C,EAAA6B,EAAA,sBAAAqd,kCCAA7hB,EAAA2C,EAAA6B,EAAA,sBAAA2d,IAAAniB,EAAA2C,EAAA6B,EAAA,sBAAAwM,IAAAhR,EAAA2C,EAAA6B,EAAA,sBAAA4d,IAAApiB,EAAA2C,EAAA6B,EAAA,sBAAAgC,IAcO,IAAA2b,EAAA,mBAAA5iB,OAAA4iB,OAAA5iB,OAAA4iB,OAAA,SAAAlgB,EAAAogB,GACP,IAAAC,EAAAC,UAEA,GAAAtgB,QACA,UAAAugB,UAAA,8CAIA,IADA,IAAAjG,EAAAhd,OAAA0C,GACA/C,EAAA,EAAAgI,EAAAqb,UAAAnjB,OAAwCF,EAAAgI,IAAQhI,EAAA,CAChD,IAAAwe,EAAA4E,EAAApjB,GACA,GAAAwe,QACA,QAAA/Z,KAAA+Z,EACAA,EAAAje,eAAAkE,KACA4Y,EAAA5Y,GAAA+Z,EAAA/Z,IAKA,OAAA4Y,GAQO,SAAAvL,EAAAlN,GACP,QAAAC,KAAAD,SACAA,EAAAC,GAWO,SAAAqe,EAAAte,GACP,IAAA2e,EAAA,GACA,QAAA1e,KAAAD,EACA2e,EAAAnjB,KAAAwE,EAAAC,IAEA,OAAA0e,EASO,SAAAjc,EAAA1C,GACP,IAAAC,EACA,IAAAA,KAAAD,EACA,SAEA,OAAAC,iCCxEA/D,EAAA2C,EAAA6B,EAAA,sBAAAke,IAAA,IAAAC,EAAA3iB,EAAA,IASO,SAAA0iB,EAAAE,EAAAC,GACP,IAAAD,EACA,UAAcD,EAAA,EAAcE,kCCJbre,EAAA,GACfse,UAAA,EACAC,YAAA,iCCTA,IAAAC,EAAAhjB,EAAA,GASewE,EAAA,GAQfye,YAAA,cAOA7P,MAAS4P,EAAA,EAAS5P,MAOlBC,SAAY2P,EAAA,EAAS3P,SAOrB6P,YAAA,cAQAC,YAAA,cAEAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,+CC9CO,SAAAC,IACP,SAOO,SAAAC,IACP,SAQO,SAAAC,KAzBP7jB,EAAA2C,EAAA6B,EAAA,sBAAAmf,IAAA3jB,EAAA2C,EAAA6B,EAAA,sBAAAof,IAAA5jB,EAAA2C,EAAA6B,EAAA,sBAAAqf,kCCWO,SAAAC,EAAAC,EAAAC,GACP,IAAAC,EAA4CpjB,SAAAG,cAAA,UAO5C,OANA+iB,IACAE,EAAApT,MAAAkT,GAEAC,IACAC,EAAAzS,OAAAwS,GAE6CC,EAAAC,WAAA,MAuCtC,SAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAD,EAAAE,WACAD,GACAA,EAAAE,aAAAJ,EAAAC,GAQO,SAAAI,EAAAC,GACP,OAAAA,KAAAH,WAAAG,EAAAH,WAAAtS,YAAAyS,GAAA,KAMO,SAAAC,EAAAD,GACP,KAAAA,EAAAE,WACAF,EAAAzS,YAAAyS,EAAAE,WA9EA5kB,EAAA2C,EAAA6B,EAAA,sBAAAsf,IAAA9jB,EAAA2C,EAAA6B,EAAA,sBAAA2f,IAAAnkB,EAAA2C,EAAA6B,EAAA,sBAAAigB,IAAAzkB,EAAA2C,EAAA6B,EAAA,sBAAAmgB,kCCOengB,EAAA,GACfkS,KAAA,EACAC,QAAA,EACAC,OAAA,EACAnD,MAAA,iCCXAzT,EAAA2C,EAAA6B,EAAA,sBAAAqgB,IAAA7kB,EAAA2C,EAAA6B,EAAA,sBAAAsgB,IAAA9kB,EAAA2C,EAAA6B,EAAA,sBAAAugB,IAAA/kB,EAAA2C,EAAA6B,EAAA,sBAAAwgB,IAAAhlB,EAAA2C,EAAA6B,EAAA,sBAAAygB,IAAAjlB,EAAA2C,EAAA6B,EAAA,sBAAA0gB,IAAAllB,EAAA2C,EAAA6B,EAAA,sBAAA2gB,IAAAnlB,EAAA2C,EAAA6B,EAAA,sBAAA4gB,IAAAplB,EAAA,QAAAqlB,EAAArlB,EAAA,IAAAslB,EAAAtlB,EAAA,IAAAulB,EAAAvlB,EAAA,IA0CO6kB,EAAA,SAAAW,GACP,IAAAC,EAAqED,EAAA,cACrE,OACAC,EAAAC,UACAD,EAAAE,SAAAF,EAAAG,UACAH,EAAAI,UAYOf,EAAA,SAAArjB,GACP,OAAAA,EAAAQ,OAAA6jB,qBAAAjlB,SAAAklB,eAWOhB,EAAaO,EAAA,EAwBbN,EAAA,SAAAQ,GACP,IAAAC,EAA4CD,EAAA,cAC5C,UAAAC,EAAAO,UACQT,EAAA,GAAUA,EAAA,GAAGE,EAAAG,UA2DdX,GAhDYK,EAAA,EAgDZ,SAAAE,GACP,IAAAC,EAAqED,EAAA,cACrE,OACAC,EAAAC,UACAD,EAAAE,SAAAF,EAAAG,WACAH,EAAAI,WA6BOX,EAAA,SAAAM,GACP,IAAAC,EAAqED,EAAA,cACrE,OACAC,EAAAC,UACAD,EAAAE,SAAAF,EAAAG,UACAH,EAAAI,UAYOV,EAAA,SAAAK,GACP,IACAS,EADAT,EAAAC,cAAAxjB,OACmCgkB,QACnC,MACA,UAAAA,GACA,WAAAA,GACA,aAAAA,GAWOb,EAAA,SAAAI,GACP,IAAAU,EAA4E,EAAAA,aAG5E,OAFE3mB,OAAA8lB,EAAA,EAAA9lB,MAAM8C,IAAA6jB,EAAA,IAER,SAAAA,EAAAC,2CCrOAnmB,EAAA2C,EAAA6B,EAAA,sBAAA4hB,IAAA,IAAAC,EAAArmB,EAAA,GAAAsmB,EAAAtmB,EAAA,IAAAumB,EAAAvmB,EAAA,IAAAwmB,EAAAxmB,EAAA,IAAAymB,EAAAzmB,EAAA,IAcO0mB,EAAA,SAAAC,GACP,SAAAD,EAAA3kB,EAAA4B,EAAAijB,GACAD,EAAAjnB,KAAAsZ,KAAAjX,GAOAiX,KAAArV,MAQAqV,KAAA4N,WAQA,OAJAD,IAAAD,EAAA3K,UAAA4K,GACAD,EAAAlnB,UAAAD,OAAAmE,OAAAijB,KAAAnnB,WACAknB,EAAAlnB,UAAAwc,YAAA0K,EAEAA,EAzBO,CA0BLF,EAAA,GA8CFK,EAAA,SAAAC,GACA,SAAAD,EAAAE,GACAD,EAAApnB,KAAAsZ,MAMIzZ,OAAA8mB,EAAA,EAAA9mB,CAAMyZ,MAMVA,KAAAgO,QAAA,QAEA3kB,IAAA0kB,GACA/N,KAAAiO,cAAAF,GAoGA,OAhGAD,IAAAD,EAAA9K,UAAA+K,GACAD,EAAArnB,UAAAD,OAAAmE,OAAAojB,KAAAtnB,WACAqnB,EAAArnB,UAAAwc,YAAA6K,EAQAA,EAAArnB,UAAAyD,IAAA,SAAAU,GACA,IAAAN,EAIA,OAHA2V,KAAAgO,QAAAvnB,eAAAkE,KACAN,EAAA2V,KAAAgO,QAAArjB,IAEAN,GAQAwjB,EAAArnB,UAAA0nB,QAAA,WACA,OAAA3nB,OAAA2N,KAAA8L,KAAAgO,UAQAH,EAAArnB,UAAA2nB,cAAA,WACA,OAAW5nB,OAAAknB,EAAA,EAAAlnB,CAAM,GAAGyZ,KAAAgO,UAOpBH,EAAArnB,UAAA4nB,OAAA,SAAAzjB,EAAAijB,GACA,IAAAS,EACAA,EAAAjB,EAAAziB,GACAqV,KAAAsO,cAAA,IAAAZ,EAAAW,EAAA1jB,EAAAijB,IACAS,EAAgBf,EAAA,EAAeiB,eAC/BvO,KAAAsO,cAAA,IAAAZ,EAAAW,EAAA1jB,EAAAijB,KAUAC,EAAArnB,UAAA4X,IAAA,SAAAzT,EAAAN,EAAAmkB,GACA,GAAAA,EACAxO,KAAAgO,QAAArjB,GAAAN,MACK,CACL,IAAAujB,EAAA5N,KAAAgO,QAAArjB,GACAqV,KAAAgO,QAAArjB,GAAAN,EACAujB,IAAAvjB,GACA2V,KAAAoO,OAAAzjB,EAAAijB,KAYAC,EAAArnB,UAAAynB,cAAA,SAAAxE,EAAA+E,GACA,QAAA7jB,KAAA8e,EACAzJ,KAAA5B,IAAAzT,EAAA8e,EAAA9e,GAAA6jB,IAUAX,EAAArnB,UAAAioB,MAAA,SAAA9jB,EAAA6jB,GACA,GAAA7jB,KAAAqV,KAAAgO,QAAA,CACA,IAAAJ,EAAA5N,KAAAgO,QAAArjB,UACAqV,KAAAgO,QAAArjB,GACA6jB,GACAxO,KAAAoO,OAAAzjB,EAAAijB,KAKAC,EArHA,CAsHEN,EAAA,GAMFmB,EAAA,GAOO,SAAAtB,EAAAziB,GACP,OAAA+jB,EAAAjoB,eAAAkE,GACA+jB,EAAA/jB,GACA+jB,EAAA/jB,GAAA,UAAAA,EAIea,EAAA,kCChOfxE,EAAA2C,EAAA6B,EAAA,sBAAAmjB,IAAA3nB,EAAA2C,EAAA6B,EAAA,sBAAAojB,IAAA5nB,EAAA2C,EAAA6B,EAAA,sBAAAqjB,IAAA7nB,EAAA2C,EAAA6B,EAAA,sBAAAsjB,IAAA9nB,EAAA2C,EAAA6B,EAAA,sBAAAujB,IAAA/nB,EAAA2C,EAAA6B,EAAA,sBAAAwjB,IAAAhoB,EAAA2C,EAAA6B,EAAA,sBAAAyjB,IAAAjoB,EAAA2C,EAAA6B,EAAA,sBAAA0jB,IAAAloB,EAAA2C,EAAA6B,EAAA,sBAAA2jB,IAIA,IAAAC,EAAA,oBAAAC,UACAA,UAAAC,UAAAC,cAAA,GAMOZ,GAAA,IAAAS,EAAA3a,QAAA,WAMAma,GAAA,IAAAQ,EAAA3a,QAAA,eAAA2a,EAAA3a,QAAA,SAMAoa,GAAA,IAAAO,EAAA3a,QAAA,eAAA2a,EAAA3a,QAAA,QAMAqa,GAAA,IAAAM,EAAA3a,QAAA,aAUAsa,EAAA3jB,OAAAokB,kBAAA,EAOAR,EAAA,WACP,IAAAS,GAAA,EACA,IACAA,IAAA5nB,SAAAG,cAAA,UAAAkjB,WAAA,MAAAwE,YACG,MAAAtoB,IAGH,OAAAqoB,EAPO,GA0BAR,GATAI,UASA,iBAAAjkB,QAQA8jB,EAAA,iBAAA9jB,OAQA+jB,IAAAE,UAAA,+CCxFProB,EAAA2C,EAAA6B,EAAA,sBAAAmkB,IAAA3oB,EAAA2C,EAAA6B,EAAA,sBAAA6N,IAAArS,EAAA2C,EAAA6B,EAAA,sBAAAokB,IAAA5oB,EAAA2C,EAAA6B,EAAA,sBAAAqkB,IAAA7oB,EAAA2C,EAAA6B,EAAA,sBAAAskB,IAAA9oB,EAAA2C,EAAA6B,EAAA,sBAAAukB,IAAA,IAAAC,EAAAhpB,EAAA,IAAAipB,EAAAjpB,EAAA,IAAAkpB,EAAAlpB,EAAA,IAAAmpB,EAAAnpB,EAAA,GAiCAopB,EAAA,SAAAvC,GACA,SAAAuC,EAAArQ,GACA8N,EAAAnnB,KAAAsZ,MAEAD,EAAAsQ,cACArQ,KAAAqQ,YAAAtQ,EAAAsQ,aAOArQ,KAAAsQ,KAAA,KAEAtQ,KAAAuQ,WAAA,GAwDA,OArDA1C,IAAAuC,EAAArN,UAAA8K,GACAuC,EAAA5pB,UAAAD,OAAAmE,OAAAmjB,KAAArnB,WACA4pB,EAAA5pB,UAAAwc,YAAAoN,EAQAA,EAAA5pB,UAAAgqB,UAAA,WACA,OAA8BxQ,KAAA/V,IAAcimB,EAAA,EAAmBO,SAQ/DL,EAAA5pB,UAAAkqB,OAAA,WACA,OAAA1Q,KAAAsQ,MASAF,EAAA5pB,UAAA6pB,YAAA,SAAA7D,GACA,UASA4D,EAAA5pB,UAAA+pB,UAAA,SAAAI,GACA3Q,KAAA5B,IAAa8R,EAAA,EAAmBO,OAAAE,IAShCP,EAAA5pB,UAAAoqB,OAAA,SAAAC,GACA7Q,KAAAsQ,KAAAO,GAGAT,EAtEA,CAuEEJ,EAAA,GAQK,SAAAL,EAAAmB,EAAAC,EAAAC,GACP,IAAAC,EAAAH,EAAA/jB,YACA,GAAAkkB,EAAA,CACA,IAAAxgB,EAAAqgB,EAAAI,gBACA,CAAAD,EAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAA,KACAC,EACAF,EAAAK,QAAA,CACAC,SAAAJ,EACAK,OAAgBpB,EAAA,EAChBxf,WAGAqgB,EAAAQ,UAAA7gB,IAYO,SAAA4I,EAAAyX,EAAAngB,EAAA4gB,EAAAP,GACPrgB,EAAAmgB,EAAAU,kBAAA7gB,EAAA,GACAif,EAAAkB,EAAAngB,EAAA4gB,EAAAP,GAUO,SAAApB,EAAAkB,EAAAngB,EAAA4gB,EAAAP,GACP,QAAA3nB,IAAAsH,EAAA,CACA,IAAA8gB,EAAAX,EAAAY,cACAT,EAAAH,EAAA/jB,iBACA1D,IAAAooB,GAAAR,GAAAD,EAAA,EACAF,EAAAK,QAAA,CACAxgB,WACAghB,OAAAJ,EACAH,SAAAJ,EACAK,OAAgBpB,EAAA,IAGhBa,EAAAzX,OAAA1I,EAAA4gB,IAoBO,SAAA1B,EAAAiB,EAAApgB,EAAA6gB,EAAAP,EAAAY,GACPlhB,EAAAogB,EAAAe,oBAAAnhB,EAAA,EAAAkhB,GACA7B,EAAAe,EAAApgB,EAAA6gB,EAAAP,GAUO,SAAAlB,EAAAgB,EAAAC,EAAAQ,EAAAP,GACP,IAAAc,EAAAhB,EAAAiB,gBACArhB,EAAAogB,EAAAe,oBAAAC,EAAAf,EAAA,GAEA,QAAA1nB,IAAAqH,EAAA,CACA,IAAAshB,EAAAlB,EAAAmB,iBACAvhB,EAAiBnK,OAAA4pB,EAAA,EAAA5pB,CACjBmK,EACAogB,EAAAoB,oBAAAF,IAAA5rB,OAAA,GACA0qB,EAAAqB,oBAAAH,EAAA,IAMA,GAAAT,QAAAloB,IAAAqH,OAAAohB,EAAA,CACA,IAAAb,EAAAH,EAAA/jB,YACA0D,EAAAqgB,EAAAsB,oBAAA1hB,EAAA6gB,GACA9gB,EAAAqgB,EAAAI,gBAAAzgB,GAEA8gB,EAAA,EACA7gB,EAAAugB,EAAA,GAAAa,EAAArhB,EAAA,KACAC,EAAAohB,IACAphB,EAAAugB,EAAA,GAAAa,EAAArhB,EAAA,KACAC,EAAAohB,IAIA/B,EAAAe,EAAApgB,EAAA6gB,EAAAP,GAUO,SAAAjB,EAAAe,EAAApgB,EAAA6gB,EAAAP,GACP,GAAAtgB,EAAA,CACA,IAAAohB,EAAAhB,EAAAiB,gBACAd,EAAAH,EAAA/jB,YACA,QAAA1D,IAAAyoB,GAAAb,GACAvgB,IAAAohB,GAAAd,EACAF,EAAAK,QAAA,CACAzgB,aACAihB,OAAAJ,EACAH,SAAAJ,EACAK,OAAgBpB,EAAA,QAEX,CACL,GAAAsB,EAAA,CACA,IAAA9gB,EAAAqgB,EAAAsB,oBAAA1hB,EAAA6gB,GACAT,EAAAQ,UAAA7gB,GAEAqgB,EAAAuB,cAAA3hB,KAKelF,EAAA,kCC5PfxE,EAAA2C,EAAA6B,EAAA,sBAAAsY,IASA,IAAAxC,EAAA,CACA4C,QAAA,UACAoO,KAAA,KACA1P,OAAA,IACA2P,OAAA,SACAC,YAAA,cACAC,OAAA,SAUO3O,EAAA,GAEPA,EAAAxC,EAAA4C,SAAA,EAAArU,KAAAyN,GAAA,YACAwG,EAAAxC,EAAAgR,MAAA,MACAxO,EAAAxC,EAAAsB,QAAA,EACAkB,EAAAxC,EAAAmR,QAAA,UAEejnB,EAAA,kCCtBAA,EAAA,GACfknB,GAAA,KACAC,IAAA,MACAC,IAAA,MACAC,KAAA,sCCPernB,EAAA,GACfsnB,QAAA,UACAC,QAAA,UACAzQ,OAAA,SACA0Q,QAAA,SACAC,eAAA,gBACAC,eAAA,gBACAC,OAAA,wCCdAnsB,EAAA2C,EAAA6B,EAAA,sBAAA4nB,IAcA,IAAAzF,EAAA,SAAA5kB,GAKAiX,KAAAqT,mBAOArT,KAAAjX,OAOAiX,KAAA/W,OAAA,MAuBO,SAAAmqB,EAAA7e,GACPA,EAAA6e,kBAjBAzF,EAAAnnB,UAAA8sB,eAAA,WACAtT,KAAAqT,oBAAA,GAOA1F,EAAAnnB,UAAA4sB,gBAAA,WACApT,KAAAqT,oBAAA,GAmBe7nB,EAAA,kCCzDR,SAAA+nB,EAAAjpB,GACP,OAAAuF,KAAA2jB,IAAAlpB,EAAA,GAUO,SAAAmpB,EAAAnpB,GACP,SAAAipB,EAAA,EAAAjpB,GAUO,SAAAopB,EAAAppB,GACP,SAAAA,IAAA,EAAAA,MAUO,SAAAqpB,EAAArpB,GACP,OAAAA,EA7CAtD,EAAA2C,EAAA6B,EAAA,sBAAA+nB,IAAAvsB,EAAA2C,EAAA6B,EAAA,sBAAAioB,IAAAzsB,EAAA2C,EAAA6B,EAAA,sBAAAkoB,IAAA1sB,EAAA2C,EAAA6B,EAAA,sBAAAmoB,kCCAA3sB,EAAA2C,EAAA6B,EAAA,sBAAAooB,IAAA5sB,EAAA2C,EAAA6B,EAAA,sBAAAqoB,IAAA7sB,EAAA2C,EAAA6B,EAAA,sBAAAsoB,IAAA9sB,EAAA2C,EAAA6B,EAAA,sBAAAuoB,IAAA/sB,EAAA2C,EAAA6B,EAAA,sBAAAwoB,IAWO,IAwDPtb,EACA0L,EAzDOwP,EAAA,YAkBAC,EAAA,kBAkBAC,EAAA,aAUAC,EAAA,eASAC,GAEP5P,EAAA,GACA,SAAA/M,GAIA,GAHAqB,IACAA,EAAA7Q,SAAAG,cAAA,OAAA0Q,SAEArB,KAAA+M,GAAA,CACA1L,EAAArB,OACA,IAAA4c,EAAAvb,EAAAN,WAEA,GADAM,EAAArB,KAAA,IACA4c,EACA,YAEA7P,EAAA/M,GAAA4c,EAAAC,MAAA,QAEA,OAAA9P,EAAA/M,mCC1Ee7L,EAAA,GACfwD,QAAA,EACAK,aAAA,EACAD,MAAA,EACAF,MAAA,EACAC,MAAA,EACAF,KAAA,kCCMO,SAAA/C,EAAAioB,EAAA/lB,EAAAC,EAAA+lB,GACP,YAAA/qB,IAAA+qB,GACAA,EAAA,GAAAD,EACAC,EAAA,GAAAhmB,EACAgmB,EAAA,GAAA/lB,EACA+lB,GAEA,CAAAD,EAAA/lB,EAAAC,GAWO,SAAAgmB,EAAAF,EAAA/lB,EAAAC,GACP,OAAA8lB,EAAA,IAAA/lB,EAAA,IAAAC,EASO,SAAAimB,EAAAC,GACP,OAAAF,EAAAE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IASO,SAAAC,EAAA7pB,GACP,OAAAA,EAAAupB,MAAA,KAAArD,IAAA4D,QAQO,SAAAC,EAAAH,GACP,OAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GAQO,SAAAI,EAAAJ,GACP,IAGAruB,EAAA0uB,EAHAT,EAAAI,EAAA,GACAM,EAAA,IAAAzX,MAAA+W,GACAW,EAAA,GAAAX,EAAA,EAEA,IAAAjuB,EAAA,EAAaA,EAAAiuB,IAAOjuB,EAEpB0uB,EAAA,GACAL,EAAA,GAAAO,IACAF,GAAA,GAEAL,EAAA,GAAAO,IACAF,GAAA,GAEAC,EAAA3uB,GAAA+O,OAAA8f,aAAAH,GACAE,IAAA,EAEA,OAAAD,EAAAG,KAAA,IASO,SAAAC,EAAAV,EAAA1S,GACP,IAAAsS,EAAAI,EAAA,GACAnmB,EAAAmmB,EAAA,GACAlmB,EAAAkmB,EAAA,GAEA,GAAA1S,EAAAqT,aAAAf,KAAAtS,EAAAsT,aACA,SAEA,IACAC,EADAnnB,EAAA4T,EAAAV,YAOA,QAFAiU,EAHAnnB,EAGA4T,EAAAwT,0BAAApnB,EAAAkmB,GAFAtS,EAAAyT,iBAAAnB,KAOAiB,EAAArpB,WAAAqC,EAAAC,GAxHArH,EAAA2C,EAAA6B,EAAA,sBAAAU,IAAAlF,EAAA2C,EAAA6B,EAAA,sBAAA6oB,IAAArtB,EAAA2C,EAAA6B,EAAA,sBAAA8oB,IAAAttB,EAAA2C,EAAA6B,EAAA,sBAAAgpB,IAAAxtB,EAAA2C,EAAA6B,EAAA,sBAAAkpB,IAAA1tB,EAAA2C,EAAA6B,EAAA,sBAAAmpB,IAAA3tB,EAAA2C,EAAA6B,EAAA,sBAAAypB,kCCOezpB,EAAA,GAMf+pB,IAAA,MAMAC,OAAA,wCCnBAxuB,EAAA2C,EAAA6B,EAAA,sBAAAiqB,IAAA,IAAAC,EAAA1uB,EAAA,IAAA2uB,EAAA3uB,EAAA,IAAAuP,EAAAvP,EAAA,IA6CA4uB,EAAA,SAAAxF,GACA,SAAAwF,EAAAC,GAEA,IAAA9V,EAAA8V,GAAA,GAEAzF,EAAA1pB,KAA8EsZ,KAAA,GAE9ED,EAAA+V,kBACA9V,KAAA8V,gBAAA/V,EAAA+V,iBAGA/V,EAAAgW,kBACA/V,KAAA+V,gBAAAhW,EAAAgW,iBAGAhW,EAAAiW,kBACAhW,KAAAgW,gBAAAjW,EAAAiW,iBAGAjW,EAAAkW,gBACAjW,KAAAiW,cAAAlW,EAAAkW,eAGAlW,EAAAmW,WACAlW,KAAAkW,SAAAnW,EAAAmW,UAOAlW,KAAAmW,wBAAA,EAMAnW,KAAAoW,iBAAA,GAMApW,KAAAqW,eAAA,GA8GA,OA1GAjG,IAAAwF,EAAA7S,UAAAqN,GACAwF,EAAApvB,UAAAD,OAAAmE,OAAA0lB,KAAA5pB,WACAovB,EAAApvB,UAAAwc,YAAA4S,EAQAA,EAAApvB,UAAAsvB,gBAAA,SAAAtJ,GACA,UAQAoJ,EAAApvB,UAAAuvB,gBAAA,SAAAvJ,KASAoJ,EAAApvB,UAAA6pB,YAAA,SAAA7D,GACA,IAAoE,eACpE,SAGA,IAAA8J,GAAA,EAEA,GADAtW,KAAAuW,uBAAA/J,GACAxM,KAAAmW,wBACA,GAAA3J,EAAAzjB,MAAkC2sB,EAAA,EAAmBxL,YACrDlK,KAAA+V,gBAAAvJ,QACO,GAAAA,EAAAzjB,MAAkC2sB,EAAA,EAAmBrL,UAAA,CAC5D,IAAAmM,EAAAxW,KAAAiW,cAAAzJ,GACAxM,KAAAmW,uBAAAK,GAAAxW,KAAAqW,eAAAjwB,OAAA,QAGA,GAAAomB,EAAAzjB,MAAkC2sB,EAAA,EAAmBtL,YAAA,CACrD,IAAAqM,EAAAzW,KAAA8V,gBAAAtJ,GACAiK,GACAjK,EAAA8G,iBAEAtT,KAAAmW,uBAAAM,EACAH,EAAAtW,KAAAkW,SAAAO,QACOjK,EAAAzjB,MAAkC2sB,EAAA,EAAmBvL,aAC5DnK,KAAAgW,gBAAAxJ,GAGA,OAAA8J,GAQAV,EAAApvB,UAAAwvB,gBAAA,SAAAxJ,KAQAoJ,EAAApvB,UAAAyvB,cAAA,SAAAzJ,GACA,UASAoJ,EAAApvB,UAAA0vB,SAAA,SAAAO,GACA,OAAAA,GAOAb,EAAApvB,UAAA+vB,uBAAA,SAAA/J,GACA,GA0CA,SAAAA,GACA,IAAAzjB,EAAAyjB,EAAAzjB,KACA,OAAAA,IAAkB2sB,EAAA,EAAmBtL,aACrCrhB,IAAa2sB,EAAA,EAAmBxL,aAChCnhB,IAAa2sB,EAAA,EAAmBrL,UA9ChCqM,CAAAlK,GAAA,CACA,IAAA/jB,EAAA+jB,EAAAU,aAEAyJ,EAAAluB,EAAAmuB,UAAAC,WACArK,EAAAzjB,MAAkC2sB,EAAA,EAAmBrL,iBACrDrK,KAAAoW,iBAAAO,GACOnK,EAAAzjB,MACG2sB,EAAA,EAAmBtL,YAC7BpK,KAAAoW,iBAAAO,GAAAluB,EACOkuB,KAAA3W,KAAAoW,mBAEPpW,KAAAoW,iBAAAO,GAAAluB,GAEAuX,KAAAqW,eAA4B9vB,OAAAgQ,EAAA,EAAAhQ,CAASyZ,KAAAoW,oBAIrCR,EAzJA,CA0JED,EAAA,GAOK,SAAAF,EAAAqB,GAIP,IAHA,IAAA1wB,EAAA0wB,EAAA1wB,OACA2wB,EAAA,EACAC,EAAA,EACA9wB,EAAA,EAAiBA,EAAAE,EAAYF,IAC7B6wB,GAAAD,EAAA5wB,GAAA6wB,QACAC,GAAAF,EAAA5wB,GAAA8wB,QAEA,OAAAD,EAAA3wB,EAAA4wB,EAAA5wB,GAiBeoF,EAAA,kCCvOfxE,EAAA2C,EAAA6B,EAAA,sBAAAyrB,IAAAjwB,EAAA2C,EAAA6B,EAAA,sBAAA0rB,IASO,IAAAD,EAAA,GAOAC,GAAA,gCCFA,SAAAC,EAAA3nB,EAAAC,EAAAC,EAAAC,EAAA2J,EAAA8d,GAGP,IAFA,IAAAC,EAAAD,GAAA,GACAlxB,EAAA,EACA+W,EAAAxN,EAAsBwN,EAAAvN,EAASuN,GAAAtN,EAAA,CAC/B,IAAAvB,EAAAoB,EAAAyN,GACA5O,EAAAmB,EAAAyN,EAAA,GACAoa,EAAAnxB,KAAAoT,EAAA,GAAAlL,EAAAkL,EAAA,GAAAjL,EAAAiL,EAAA,GACA+d,EAAAnxB,KAAAoT,EAAA,GAAAlL,EAAAkL,EAAA,GAAAjL,EAAAiL,EAAA,GAKA,OAHA8d,GAAAC,EAAAjxB,QAAAF,IACAmxB,EAAAjxB,OAAAF,GAEAmxB,EAcO,SAAAhe,EAAA7J,EAAAC,EAAAC,EAAAC,EAAA8P,EAAAkS,EAAAyF,GAOP,IANA,IAAAC,EAAAD,GAAA,GACAtmB,EAAAjB,KAAAiB,IAAA2O,GACAzO,EAAAnB,KAAAmB,IAAAyO,GACA6X,EAAA3F,EAAA,GACA4F,EAAA5F,EAAA,GACAzrB,EAAA,EACA+W,EAAAxN,EAAsBwN,EAAAvN,EAASuN,GAAAtN,EAAA,CAC/B,IAAAmC,EAAAtC,EAAAyN,GAAAqa,EACAvlB,EAAAvC,EAAAyN,EAAA,GAAAsa,EACAF,EAAAnxB,KAAAoxB,EAAAxlB,EAAAhB,EAAAiB,EAAAf,EACAqmB,EAAAnxB,KAAAqxB,EAAAzlB,EAAAd,EAAAe,EAAAjB,EACA,QAAAqM,EAAAF,EAAA,EAAuBE,EAAAF,EAAAtN,IAAgBwN,EACvCka,EAAAnxB,KAAAsJ,EAAA2N,GAMA,OAHAia,GAAAC,EAAAjxB,QAAAF,IACAmxB,EAAAjxB,OAAAF,GAEAmxB,EAgBO,SAAAxd,EAAArK,EAAAC,EAAAC,EAAAC,EAAA4P,EAAAC,EAAAmS,EAAAyF,GAKP,IAJA,IAAAC,EAAAD,GAAA,GACAE,EAAA3F,EAAA,GACA4F,EAAA5F,EAAA,GACAzrB,EAAA,EACA+W,EAAAxN,EAAsBwN,EAAAvN,EAASuN,GAAAtN,EAAA,CAC/B,IAAAmC,EAAAtC,EAAAyN,GAAAqa,EACAvlB,EAAAvC,EAAAyN,EAAA,GAAAsa,EACAF,EAAAnxB,KAAAoxB,EAAA/X,EAAAzN,EACAulB,EAAAnxB,KAAAqxB,EAAA/X,EAAAzN,EACA,QAAAoL,EAAAF,EAAA,EAAuBE,EAAAF,EAAAtN,IAAgBwN,EACvCka,EAAAnxB,KAAAsJ,EAAA2N,GAMA,OAHAia,GAAAC,EAAAjxB,QAAAF,IACAmxB,EAAAjxB,OAAAF,GAEAmxB,EAcO,SAAAje,EAAA5J,EAAAC,EAAAC,EAAAC,EAAAmC,EAAAC,EAAAqlB,GAGP,IAFA,IAAAC,EAAAD,GAAA,GACAlxB,EAAA,EACA+W,EAAAxN,EAAsBwN,EAAAvN,EAASuN,GAAAtN,EAAA,CAC/B0nB,EAAAnxB,KAAAsJ,EAAAyN,GAAAnL,EACAulB,EAAAnxB,KAAAsJ,EAAAyN,EAAA,GAAAlL,EACA,QAAAoL,EAAAF,EAAA,EAAuBE,EAAAF,EAAAtN,IAAgBwN,EACvCka,EAAAnxB,KAAAsJ,EAAA2N,GAMA,OAHAia,GAAAC,EAAAjxB,QAAAF,IACAmxB,EAAAjxB,OAAAF,GAEAmxB,EAvHArwB,EAAA2C,EAAA6B,EAAA,sBAAA2rB,IAAAnwB,EAAA2C,EAAA6B,EAAA,sBAAA6N,IAAArS,EAAA2C,EAAA6B,EAAA,sBAAAqO,IAAA7S,EAAA2C,EAAA6B,EAAA,sBAAA4N,kCCAA,IAAAuQ,EAAA3iB,EAAA,IAAAwwB,EAAAxwB,EAAA,IAAAywB,EAAAzwB,EAAA,IAAAwmB,EAAAxmB,EAAA,IAaA0wB,EACA,SASOC,EAAA,SAAAhK,GACP,SAAAgK,EAAA5uB,EAAA6uB,GACAjK,EAAAjnB,KAAAsZ,KAAAjX,GAOAiX,KAAA6X,QAAAD,EAQA,OAJAjK,IAAAgK,EAAA5U,UAAA4K,GACAgK,EAAAnxB,UAAAD,OAAAmE,OAAAijB,KAAAnnB,WACAmxB,EAAAnxB,UAAAwc,YAAA2U,EAEAA,EAjBO,CAkBLnK,EAAA,GAsBFsK,EAAA,SAAAjK,GACA,SAAAiK,EAAAC,EAAAlC,GAEAhI,EAAAnnB,KAAAsZ,MAEA,IAAAD,EAAA8V,GAAA,GAcA,GARA7V,KAAAgY,UAAAjY,EAAAkY,OAMAjY,KAAAkY,OAAAH,GAAA,GAEA/X,KAAAgY,QACA,QAAA9xB,EAAA,EAAAgI,EAAA8R,KAAAkY,OAAA9xB,OAA8CF,EAAAgI,IAAQhI,EACtD8Z,KAAAmY,cAAAnY,KAAAkY,OAAAhyB,MAIA8Z,KAAAoY,gBAoMA,OAhMAvK,IAAAiK,EAAA/U,UAAA8K,GACAiK,EAAAtxB,UAAAD,OAAAmE,OAAAmjB,KAAArnB,WACAsxB,EAAAtxB,UAAAwc,YAAA8U,EAMAA,EAAAtxB,UAAAwR,MAAA,WACA,KAAAgI,KAAAqY,YAAA,GACArY,KAAAsY,OAWAR,EAAAtxB,UAAAgG,OAAA,SAAAib,GACA,QAAAvhB,EAAA,EAAAgI,EAAAuZ,EAAArhB,OAAoCF,EAAAgI,IAAQhI,EAC5C8Z,KAAA1Z,KAAAmhB,EAAAvhB,IAEA,OAAA8Z,MAUA8X,EAAAtxB,UAAAqf,QAAA,SAAAzG,GAEA,IADA,IAAAmZ,EAAAvY,KAAAkY,OACAhyB,EAAA,EAAAgI,EAAAqqB,EAAAnyB,OAAsCF,EAAAgI,IAAQhI,EAC9CkZ,EAAAmZ,EAAAryB,KAAAqyB,IAYAT,EAAAtxB,UAAAgyB,SAAA,WACA,OAAAxY,KAAAkY,QASAJ,EAAAtxB,UAAAiyB,KAAA,SAAAlQ,GACA,OAAAvI,KAAAkY,OAAA3P,IASAuP,EAAAtxB,UAAA6xB,UAAA,WACA,OAAArY,KAAA/V,IAAAytB,IASAI,EAAAtxB,UAAAkyB,SAAA,SAAAnQ,EAAAoQ,GACA3Y,KAAAgY,SACAhY,KAAAmY,cAAAQ,GAEA3Y,KAAAkY,OAAAxjB,OAAA6T,EAAA,EAAAoQ,GACA3Y,KAAAoY,gBACApY,KAAAsO,cACA,IAAAqJ,EAA0BH,EAAA,EAAmBjC,IAAAoD,KAS7Cb,EAAAtxB,UAAA8xB,IAAA,WACA,OAAAtY,KAAA4Y,SAAA5Y,KAAAqY,YAAA,IASAP,EAAAtxB,UAAAF,KAAA,SAAAqyB,GACA3Y,KAAAgY,SACAhY,KAAAmY,cAAAQ,GAEA,IAAA9tB,EAAAmV,KAAAqY,YAEA,OADArY,KAAA0Y,SAAA7tB,EAAA8tB,GACA3Y,KAAAqY,aASAP,EAAAtxB,UAAAwhB,OAAA,SAAA2Q,GAEA,IADA,IAAAlR,EAAAzH,KAAAkY,OACAhyB,EAAA,EAAAgI,EAAAuZ,EAAArhB,OAAoCF,EAAAgI,IAAQhI,EAC5C,GAAAuhB,EAAAvhB,KAAAyyB,EACA,OAAA3Y,KAAA4Y,SAAA1yB,IAaA4xB,EAAAtxB,UAAAoyB,SAAA,SAAArQ,GACA,IAAAsQ,EAAA7Y,KAAAkY,OAAA3P,GAIA,OAHAvI,KAAAkY,OAAAxjB,OAAA6T,EAAA,GACAvI,KAAAoY,gBACApY,KAAAsO,cAAA,IAAAqJ,EAA2CH,EAAA,EAAmBhC,OAAAqD,IAC9DA,GASAf,EAAAtxB,UAAAsyB,MAAA,SAAAvQ,EAAAoQ,GACA,IAAA9tB,EAAAmV,KAAAqY,YACA,GAAA9P,EAAA1d,EAAA,CACAmV,KAAAgY,SACAhY,KAAAmY,cAAAQ,EAAApQ,GAEA,IAAAsQ,EAAA7Y,KAAAkY,OAAA3P,GACAvI,KAAAkY,OAAA3P,GAAAoQ,EACA3Y,KAAAsO,cACA,IAAAqJ,EAA4BH,EAAA,EAAmBhC,OAAAqD,IAC/C7Y,KAAAsO,cACA,IAAAqJ,EAA4BH,EAAA,EAAmBjC,IAAAoD,QAC1C,CACL,QAAA1b,EAAApS,EAAqBoS,EAAAsL,IAAWtL,EAChC+C,KAAA0Y,SAAAzb,OAAA5T,GAEA2W,KAAA0Y,SAAAnQ,EAAAoQ,KAOAb,EAAAtxB,UAAA4xB,cAAA,WACApY,KAAA5B,IAAAsZ,EAAA1X,KAAAkY,OAAA9xB,SAQA0xB,EAAAtxB,UAAA2xB,cAAA,SAAAQ,EAAAI,GACA,QAAA7yB,EAAA,EAAAgI,EAAA8R,KAAAkY,OAAA9xB,OAA4CF,EAAAgI,IAAQhI,EACpD,GAAA8Z,KAAAkY,OAAAhyB,KAAAyyB,GAAAzyB,IAAA6yB,EACA,UAAkBpP,EAAA,EAAc,KAKhCmO,EA7NA,CA8NEL,EAAA,GAGajsB,EAAA,kCCxRAA,EAAA,GACfwtB,MAAA,QACAC,KAAA,OACAC,YAAA,cACAC,OAAA,wCCLe3tB,EAAA,GAKf4tB,YAAA,cAKAC,WAAA,aAKAC,OAAA,SAOAC,eAAA,gDC7BAvyB,EAAA2C,EAAA6B,EAAA,sBAAA0Z,IAAAle,EAAA2C,EAAA6B,EAAA,sBAAAe,IAAAvF,EAAA2C,EAAA6B,EAAA,sBAAA6N,IAAArS,EAAA2C,EAAA6B,EAAA,sBAAAqO,IAAA7S,EAAA2C,EAAA6B,EAAA,sBAAA4Q,IAAApV,EAAA,GAAAA,EAAA,IAyCO,SAAAke,EAAA1W,EAAAuiB,GAGP,OAFAviB,EAAA,IAAAuiB,EAAA,GACAviB,EAAA,IAAAuiB,EAAA,GACAviB,EAmMO,SAAAjC,EAAAitB,EAAAC,GAEP,IADA,IAAAltB,GAAA,EACArG,EAAAszB,EAAApzB,OAAA,EAAsCF,GAAA,IAAQA,EAC9C,GAAAszB,EAAAtzB,IAAAuzB,EAAAvzB,GAAA,CACAqG,GAAA,EACA,MAGA,OAAAA,EAsBO,SAAA8M,EAAA7K,EAAAiR,GACP,IAAAia,EAAA7pB,KAAAiB,IAAA2O,GACAka,EAAA9pB,KAAAmB,IAAAyO,GACArR,EAAAI,EAAA,GAAAkrB,EAAAlrB,EAAA,GAAAmrB,EACAtrB,EAAAG,EAAA,GAAAkrB,EAAAlrB,EAAA,GAAAmrB,EAGA,OAFAnrB,EAAA,GAAAJ,EACAI,EAAA,GAAAH,EACAG,EAqBO,SAAAqL,EAAArL,EAAAqL,GAGP,OAFArL,EAAA,IAAAqL,EACArL,EAAA,IAAAqL,EACArL,EASO,SAAA4N,EAAAwd,EAAAC,GACP,IAAAvrB,EAAAsrB,EAAA,GAAAC,EAAA,GACAtrB,EAAAqrB,EAAA,GAAAC,EAAA,GACA,OAAAvrB,IAAAC,4FCzSAurB,EAAmBvzB,OAAAwzB,EAAA,EAAAxzB,GA+QJyzB,EAhQH,SAAAnM,GACZ,SAAAoM,IAEApM,EAAAnnB,KAAAsZ,MAMAA,KAAAI,QAAmB7Z,OAAAqgB,EAAA,EAAArgB,GAMnByZ,KAAAka,iBAAA,EAMAla,KAAAma,wBAAA,GAMAna,KAAAoa,yCAAA,EAMApa,KAAAqa,2BAAA,EA2NA,OAvNAxM,IAAAoM,EAAAlX,UAAA8K,GACAoM,EAAAzzB,UAAAD,OAAAmE,OAAAmjB,KAAArnB,WACAyzB,EAAAzzB,UAAAwc,YAAAiX,EAOAA,EAAAzzB,UAAAmF,MAAA,WACA,OAAWpF,OAAA+zB,EAAA,EAAA/zB,IAWX0zB,EAAAzzB,UAAA+zB,eAAA,SAAAnsB,EAAAC,EAAAmsB,EAAAC,GACA,OAAWl0B,OAAA+zB,EAAA,EAAA/zB,IAQX0zB,EAAAzzB,UAAAuF,WAAA,SAAAqC,EAAAC,GACA,UAWA4rB,EAAAzzB,UAAAk0B,gBAAA,SAAA7X,EAAA8X,GACA,IAAAH,EAAAG,GAAA,CAAAC,SAEA,OADA5a,KAAAua,eAAA1X,EAAA,GAAAA,EAAA,GAAA2X,EAAAlrB,KACAkrB,GAUAP,EAAAzzB,UAAAq0B,qBAAA,SAAArsB,GACA,OAAAwR,KAAAjU,WAAAyC,EAAA,GAAAA,EAAA,KASAyrB,EAAAzzB,UAAAs0B,cAAA,SAAA7sB,GACA,OAAW1H,OAAA+zB,EAAA,EAAA/zB,IASX0zB,EAAAzzB,UAAA2a,UAAA,SAAAhT,GAKA,OAJA6R,KAAAka,iBAAAla,KAAA+a,gBACA/a,KAAAI,QAAAJ,KAAA8a,cAAA9a,KAAAI,SACAJ,KAAAka,gBAAAla,KAAA+a,eAEWx0B,OAAAqgB,EAAA,EAAArgB,CAAcyZ,KAAAI,QAAAjS,IAWzB8rB,EAAAzzB,UAAA6S,OAAA,SAAAoG,EAAAkS,GACIprB,OAAA+zB,EAAA,EAAA/zB,IAcJ0zB,EAAAzzB,UAAAqT,MAAA,SAAA0F,EAAAyb,EAAAzJ,GACIhrB,OAAA+zB,EAAA,EAAA/zB,IAaJ0zB,EAAAzzB,UAAAy0B,SAAA,SAAAC,GACA,OAAAlb,KAAAmb,sBAAAD,MAWAjB,EAAAzzB,UAAA20B,sBAAA,SAAAC,GACA,OAAW70B,OAAA+zB,EAAA,EAAA/zB,IAQX0zB,EAAAzzB,UAAA60B,QAAA,WACA,OAAW90B,OAAA+zB,EAAA,EAAA/zB,IAWX0zB,EAAAzzB,UAAAoH,eAAA,SAAA4E,GACIjM,OAAA+zB,EAAA,EAAA/zB,IASJ0zB,EAAAzzB,UAAA80B,iBAAA,SAAArtB,GACA,OAAW1H,OAAA+zB,EAAA,EAAA/zB,IAWX0zB,EAAAzzB,UAAA4S,UAAA,SAAAtH,EAAAC,GACIxL,OAAA+zB,EAAA,EAAA/zB,IAkBJ0zB,EAAAzzB,UAAA8S,UAAA,SAAAoL,EAAAC,GAEA,IAAA4W,EAAqBh1B,OAAAi1B,EAAA,EAAAj1B,CAAame,GAClClS,EAAA+oB,EAAAna,YAA+CE,EAAA,EAAKkR,YACpD,SAAAiJ,EAAAC,EAAA/rB,GACA,IAAAgsB,EAAAJ,EAAApa,YACAya,EAAAL,EAAAha,iBACA1H,EAAoBtT,OAAAqgB,EAAA,EAAArgB,CAASq1B,GAAoBr1B,OAAAqgB,EAAA,EAAArgB,CAASo1B,GAO1D,OANQp1B,OAAAwzB,EAAA,EAAAxzB,CAAgBuzB,EACxB8B,EAAA,GAAAA,EAAA,GACA/hB,KAAA,EACA,KACQtT,OAAAs1B,EAAA,EAAAt1B,CAAWk1B,EAAA,EAAAA,EAAAr1B,OAAAuJ,EACnBmqB,EAAA4B,GACen1B,OAAAi1B,EAAA,EAAAj1B,CAAYg1B,EAAA5W,EAAZpe,CAAYk1B,EAAAC,EAAA/rB,IAErBpJ,OAAAi1B,EAAA,EAAAj1B,CAAYg1B,EAAA5W,GAElB,OADA3E,KAAApS,eAAA4E,GACAwN,MAGAia,EA5PY,CA6PV6B,EAAA,mBC3RF90B,EAAA2C,EAAA6B,EAAA,sBAAAuwB,IAkBA,IAAIC,EAAc,SAAA/B,GAClB,SAAAgC,IAEAhC,EAAAvzB,KAAAsZ,MAMAA,KAAAkc,OAAkBC,EAAA,EAAczJ,GAMhC1S,KAAArQ,OAAA,EAMAqQ,KAAAxQ,gBAAA,KAgOA,OA5NAyqB,IAAAgC,EAAAlZ,UAAAkX,GACAgC,EAAAz1B,UAAAD,OAAAmE,OAAAuvB,KAAAzzB,WACAy1B,EAAAz1B,UAAAwc,YAAAiZ,EAKAA,EAAAz1B,UAAAs0B,cAAA,SAAA7sB,GACA,OAAW1H,OAAAqgB,EAAA,EAAArgB,CAAiCyZ,KAAAxQ,gBAC5C,EAAAwQ,KAAAxQ,gBAAApJ,OAAA4Z,KAAArQ,OAAA1B,IAOAguB,EAAAz1B,UAAA41B,eAAA,WACA,OAAW71B,OAAA+zB,EAAA,EAAA/zB,IAQX01B,EAAAz1B,UAAA61B,mBAAA,WACA,OAAArc,KAAAxQ,gBAAAlE,MAAA,EAAA0U,KAAArQ,SAMAssB,EAAAz1B,UAAA81B,mBAAA,WACA,OAAAtc,KAAAxQ,iBAQAysB,EAAAz1B,UAAA+1B,kBAAA,WACA,OAAAvc,KAAAxQ,gBAAAlE,MAAA0U,KAAAxQ,gBAAApJ,OAAA4Z,KAAArQ,SAQAssB,EAAAz1B,UAAAg2B,UAAA,WACA,OAAAxc,KAAAkc,QAMAD,EAAAz1B,UAAA20B,sBAAA,SAAAC,GAQA,GAPApb,KAAAqa,4BAAAra,KAAA+a,gBACMx0B,OAAAwO,EAAA,EAAAxO,CAAKyZ,KAAAma,yBACXna,KAAAoa,yCAAA,EACApa,KAAAqa,2BAAAra,KAAA+a,eAIAK,EAAA,GACA,IAAApb,KAAAoa,0CACAgB,GAAApb,KAAAoa,yCACA,OAAApa,KAEA,IAAArV,EAAAywB,EAAAvE,WACA,GAAA7W,KAAAma,wBAAA1zB,eAAAkE,GACA,OAAAqV,KAAAma,wBAAAxvB,GAEA,IAAA8xB,EACAzc,KAAA0c,8BAAAtB,GAEA,OADAqB,EAAAH,qBACAl2B,OAAA4Z,KAAAxQ,gBAAApJ,QACA4Z,KAAAma,wBAAAxvB,GAAA8xB,EACAA,IAQAzc,KAAAoa,yCAAAgB,EACApb,OAUAic,EAAAz1B,UAAAk2B,8BAAA,SAAAtB,GACA,OAAApb,MAMAic,EAAAz1B,UAAAm2B,UAAA,WACA,OAAA3c,KAAArQ,QAOAssB,EAAAz1B,UAAAo2B,mBAAA,SAAAV,EAAA1sB,GACAwQ,KAAArQ,OAAAktB,EAAAX,GACAlc,KAAAkc,SACAlc,KAAAxQ,mBAQAysB,EAAAz1B,UAAAs2B,eAAA,SAAA9uB,EAAA+uB,GACIx2B,OAAA+zB,EAAA,EAAA/zB,IASJ01B,EAAAz1B,UAAAw2B,UAAA,SAAAd,EAAAluB,EAAAivB,GAEA,IAAAttB,EACA,GAAAusB,EACAvsB,EAAAktB,EAAAX,OACK,CACL,QAAAh2B,EAAA,EAAqBA,EAAA+2B,IAAa/2B,EAAA,CAClC,OAAA8H,EAAA5H,OAGA,OAFA4Z,KAAAkc,OAAwBC,EAAA,EAAczJ,QACtC1S,KAAArQ,OAAA,GAGA3B,EAAyCA,EAAA,GAIzCkuB,EA8EA,SAAAvsB,GACA,IAAAusB,EACA,GAAAvsB,EACAusB,EAAaC,EAAA,EAAczJ,GACxB,GAAA/iB,EACHusB,EAAaC,EAAA,EAAcxJ,IACxB,GAAAhjB,IACHusB,EAAaC,EAAA,EAActJ,MAE3B,SAvFAqK,CADAvtB,EAAA3B,EAAA5H,QAGA4Z,KAAAkc,SACAlc,KAAArQ,UAOAssB,EAAAz1B,UAAAoH,eAAA,SAAA4E,GACAwN,KAAAxQ,kBACAgD,EAAAwN,KAAAxQ,gBAAAwQ,KAAAxQ,gBAAAwQ,KAAArQ,QACAqQ,KAAAmd,YAQAlB,EAAAz1B,UAAA6S,OAAA,SAAAoG,EAAAkS,GACA,IAAAniB,EAAAwQ,KAAAsc,qBACA,GAAA9sB,EAAA,CACA,IAAAG,EAAAqQ,KAAA2c,YACMp2B,OAAAs1B,EAAA,EAAAt1B,CACNiJ,EAAA,EAAAA,EAAApJ,OACAuJ,EAAA8P,EAAAkS,EAAAniB,GACAwQ,KAAAmd,YAQAlB,EAAAz1B,UAAAqT,MAAA,SAAA0F,EAAAyb,EAAAzJ,GACA,IAAA/R,EAAAwb,OACA3xB,IAAAmW,IACAA,EAAAD,GAEA,IAAAoS,EAAAJ,EACAI,IACAA,EAAeprB,OAAAqgB,EAAA,EAAArgB,CAASyZ,KAAAmB,cAExB,IAAA3R,EAAAwQ,KAAAsc,qBACA,GAAA9sB,EAAA,CACA,IAAAG,EAAAqQ,KAAA2c,YACMp2B,OAAAs1B,EAAA,EAAAt1B,CACNiJ,EAAA,EAAAA,EAAApJ,OACAuJ,EAAA4P,EAAAC,EAAAmS,EAAAniB,GACAwQ,KAAAmd,YAQAlB,EAAAz1B,UAAA4S,UAAA,SAAAtH,EAAAC,GACA,IAAAvC,EAAAwQ,KAAAsc,qBACA,GAAA9sB,EAAA,CACA,IAAAG,EAAAqQ,KAAA2c,YACMp2B,OAAAs1B,EAAA,EAAAt1B,CACNiJ,EAAA,EAAAA,EAAApJ,OAAAuJ,EACAmC,EAAAC,EAAAvC,GACAwQ,KAAAmd,YAIAlB,EArPkB,CAsPhBjC,GA0BK,SAAA6C,EAAAX,GACP,IAAAvsB,EAQA,OAPAusB,GAAgBC,EAAA,EAAczJ,GAC9B/iB,EAAA,EACGusB,GAAoBC,EAAA,EAAcxJ,KAAAuJ,GAAkBC,EAAA,EAAcvJ,IACrEjjB,EAAA,EACGusB,GAAoBC,EAAA,EAActJ,OACrCljB,EAAA,GAE2B,EAUpB,SAAAosB,EAAAqB,EAAA9jB,EAAA8d,GACP,IAAA5nB,EAAA4tB,EAAAd,qBACA,GAAA9sB,EAEG,CACH,IAAAG,EAAAytB,EAAAT,YACA,OAAWp2B,OAAAs1B,EAAA,EAAAt1B,CACXiJ,EAAA,EAAAA,EAAApJ,OAAAuJ,EACA2J,EAAA8d,GALA,YASe5rB,EAAA,kCCzTAA,EAAA,GACf6xB,UAAA,YACA1f,QAAA,UACA2f,MAAA,QACA7iB,MAAA,uCCsBO,SAAA8iB,EAAA3sB,GACP,OAAAA,EAAA,MAAAA,EAAA,KAWO,SAAAiJ,EAAAjJ,EAAA4sB,EAAAC,GAMP,YALAp0B,IAAAo0B,IACAA,EAAA,OAEAA,EAAA,GAAA7sB,EAAA,GAAA4sB,EAAA,KACAC,EAAA,GAAA7sB,EAAA,GAAA4sB,EAAA,KACAC,EAaO,SAAAC,EAAA9sB,EAAA6sB,GACP,OAAArgB,MAAA2K,QAAAnX,GACAA,QAEAvH,IAAAo0B,EACAA,EAAA,CAAA7sB,KAEA6sB,EAAA,GAAAA,EAAA,GAAoD,EAEpDA,GA1EAz2B,EAAA2C,EAAA6B,EAAA,sBAAA+xB,IAAAv2B,EAAA2C,EAAA6B,EAAA,sBAAAqO,IAAA7S,EAAA2C,EAAA6B,EAAA,sBAAAkyB,kCCAA12B,EAAA2C,EAAA6B,EAAA,sBAAAmyB,IAAA,IAAAC,EAAA52B,EAAA,IAwBO,SAAA22B,EAAAE,GACP,OAAAzgB,MAAA2K,QAAA8V,GACWt3B,OAAAq3B,EAAA,EAAAr3B,CAAQs3B,GAEnBA,iCC5BA,IAAAC,EAAA92B,EAAA,IAAA+2B,EAAA/2B,EAAA,GAAAslB,EAAAtlB,EAAA,IAAAg3B,EAAAh3B,EAAA,IA6BAi3B,EAAA,SAAAC,GACA,SAAAD,IAEAC,EAAAx3B,KAAAsZ,MAMAA,KAAAme,iBAAA,GAMAne,KAAAoe,aAAA,GAMApe,KAAAqe,WAAA,GAoHA,OAhHAH,IAAAD,EAAAlb,UAAAmb,GACAD,EAAAz3B,UAAAD,OAAAmE,OAAAwzB,KAAA13B,WACAy3B,EAAAz3B,UAAAwc,YAAAib,EAMAA,EAAAz3B,UAAA8N,iBAAA,SAAAvL,EAAAsK,GACA,IAAAD,EAAA4M,KAAAqe,WAAAt1B,GACAqK,IACAA,EAAA4M,KAAAqe,WAAAt1B,GAAA,KAEA,IAAAqK,EAAAqB,QAAApB,IACAD,EAAA9M,KAAA+M,IAiBA4qB,EAAAz3B,UAAA8nB,cAAA,SAAA7lB,GACA,IAAA8L,EAAA,iBAAA9L,EAAA,IAA8Cu1B,EAAA,EAAKv1B,KACnDM,EAAAwL,EAAAxL,KACAwL,EAAAtL,OAAA+W,KACA,IACAse,EADAlrB,EAAA4M,KAAAqe,WAAAt1B,GAEA,GAAAqK,EAAA,CACArK,KAAAiX,KAAAoe,eACApe,KAAAoe,aAAAr1B,GAAA,EACAiX,KAAAme,iBAAAp1B,GAAA,KAEAiX,KAAAoe,aAAAr1B,GACA,QAAA7C,EAAA,EAAAgI,EAAAkF,EAAAhN,OAA4CF,EAAAgI,IAAQhI,EACpD,QAAAkN,EAAAlN,GAAAQ,KAAAsZ,KAAAzL,MAAA8e,mBAAA,CACAiL,GAAA,EACA,MAIA,KADAte,KAAAoe,aAAAr1B,GACA,IAAAiX,KAAAoe,aAAAr1B,GAAA,CACA,IAAAw1B,EAAAve,KAAAme,iBAAAp1B,GAEA,WADAiX,KAAAme,iBAAAp1B,GACAw1B,KACAve,KAAAhM,oBAAAjL,EAAyCujB,EAAA,UAEzCtM,KAAAoe,aAAAr1B,GAEA,OAAAu1B,IAOAL,EAAAz3B,UAAAg4B,gBAAA,WACIj4B,OAAAw3B,EAAA,EAAAx3B,CAAWyZ,OAUfie,EAAAz3B,UAAAkN,aAAA,SAAA3K,GACA,OAAAiX,KAAAqe,WAAAt1B,IAQAk1B,EAAAz3B,UAAAi4B,YAAA,SAAAC,GACA,OAAAA,EACAA,KAAA1e,KAAAqe,WACA93B,OAAA2N,KAAA8L,KAAAqe,YAAAj4B,OAAA,GAOA63B,EAAAz3B,UAAAwN,oBAAA,SAAAjL,EAAAsK,GACA,IAAAD,EAAA4M,KAAAqe,WAAAt1B,GACA,GAAAqK,EAAA,CACA,IAAAmV,EAAAnV,EAAAqB,QAAApB,GACAtK,KAAAiX,KAAAme,kBAEA/qB,EAAAmV,GAA2B+D,EAAA,IAC3BtM,KAAAme,iBAAAp1B,KAEAqK,EAAAsB,OAAA6T,EAAA,GACA,IAAAnV,EAAAhN,eACA4Z,KAAAqe,WAAAt1B,MAMAk1B,EAzIA,CA0IEH,EAAA,GAGatyB,EAAA,kCC7JR,SAAAmzB,EAAAnvB,EAAAC,EAAAC,EAAAC,EAAAivB,GAGP,IAFA,IAAA5wB,OAAA3E,IAAAu1B,IAAA,GACA14B,EAAA,EACA+W,EAAAxN,EAAsBwN,EAAAvN,EAASuN,GAAAtN,EAC/B3B,EAAA9H,KAAAsJ,EAAAlE,MAAA2R,IAAAtN,GAGA,OADA3B,EAAA5H,OAAAF,EACA8H,EAYO,SAAA6wB,EAAArvB,EAAAC,EAAAqvB,EAAAnvB,EAAAovB,GAGP,IAFA,IAAAC,OAAA31B,IAAA01B,IAAA,GACA74B,EAAA,EACA+W,EAAA,EAAAgiB,EAAAH,EAAA14B,OAAmC6W,EAAAgiB,IAAQhiB,EAAA,CAC3C,IAAAvN,EAAAovB,EAAA7hB,GACA+hB,EAAA94B,KAAAy4B,EACAnvB,EAAAC,EAAAC,EAAAC,EAAAqvB,EAAA94B,IACAuJ,EAAAC,EAGA,OADAsvB,EAAA54B,OAAAF,EACA84B,EAaO,SAAAE,EAAA1vB,EAAAC,EAAA0vB,EAAAxvB,EAAAyvB,GAGP,IAFA,IAAAC,OAAAh2B,IAAA+1B,IAAA,GACAl5B,EAAA,EACA+W,EAAA,EAAAgiB,EAAAE,EAAA/4B,OAAoC6W,EAAAgiB,IAAQhiB,EAAA,CAC5C,IAAA6hB,EAAAK,EAAAliB,GACAoiB,EAAAn5B,KAAA24B,EACArvB,EAAAC,EAAAqvB,EAAAnvB,EAAA0vB,EAAAn5B,IACAuJ,EAAAqvB,IAAA14B,OAAA,GAGA,OADAi5B,EAAAj5B,OAAAF,EACAm5B,EAjEAr4B,EAAA2C,EAAA6B,EAAA,sBAAAmzB,IAAA33B,EAAA2C,EAAA6B,EAAA,sBAAAqzB,IAAA73B,EAAA2C,EAAA6B,EAAA,sBAAA0zB,kCCYO,SAAAI,EAAA9vB,EAAAC,EAAAjB,EAAAmB,GACP,QAAAzJ,EAAA,EAAAgI,EAAAM,EAAApI,OAAyCF,EAAAgI,IAAQhI,EACjDsJ,EAAAC,KAAAjB,EAAAtI,GAEA,OAAAuJ,EAWO,SAAA8vB,EAAA/vB,EAAAC,EAAAzB,EAAA2B,GACP,QAAAzJ,EAAA,EAAAgI,EAAAF,EAAA5H,OAA0CF,EAAAgI,IAAQhI,EAElD,IADA,IAAAsI,EAAAR,EAAA9H,GACA+W,EAAA,EAAmBA,EAAAtN,IAAYsN,EAC/BzN,EAAAC,KAAAjB,EAAAyO,GAGA,OAAAxN,EAYO,SAAA+vB,EAAAhwB,EAAAC,EAAAuvB,EAAArvB,EAAA8vB,GAGP,IAFA,IAAAX,EAAAW,GAAA,GACAv5B,EAAA,EACA+W,EAAA,EAAAgiB,EAAAD,EAAA54B,OAA2C6W,EAAAgiB,IAAQhiB,EAAA,CACnD,IAAAvN,EAAA6vB,EACA/vB,EAAAC,EAAAuvB,EAAA/hB,GAAAtN,GACAmvB,EAAA54B,KAAAwJ,EACAD,EAAAC,EAGA,OADAovB,EAAA14B,OAAAF,EACA44B,EAYO,SAAAY,EAAAlwB,EAAAC,EAAA4vB,EAAA1vB,EAAAgwB,GAGP,IAFA,IAAAR,EAAAQ,GAAA,GACAz5B,EAAA,EACA+W,EAAA,EAAAgiB,EAAAI,EAAAj5B,OAA4C6W,EAAAgiB,IAAQhiB,EAAA,CACpD,IAAA6hB,EAAAU,EACAhwB,EAAAC,EAAA4vB,EAAApiB,GAAAtN,EAAAwvB,EAAAj5B,IACAi5B,EAAAj5B,KAAA44B,EACArvB,EAAAqvB,IAAA14B,OAAA,GAGA,OADA+4B,EAAA/4B,OAAAF,EACAi5B,EA9EAn4B,EAAA2C,EAAA6B,EAAA,sBAAA8zB,IAAAt4B,EAAA2C,EAAA6B,EAAA,sBAAA+zB,IAAAv4B,EAAA2C,EAAA6B,EAAA,sBAAAg0B,IAAAx4B,EAAA2C,EAAA6B,EAAA,sBAAAk0B,kCCAA14B,EAAA2C,EAAA6B,EAAA,sBAAAo0B,IAAA,IAAAC,EAAA74B,EAAA,GAAA84B,EAAA94B,EAAA,GAAA+4B,EAAA/4B,EAAA,GAAAg5B,EAAAh5B,EAAA,IAAAi5B,EAAAj5B,EAAA,IAAAk5B,EAAAl5B,EAAA,IAAAm5B,EAAAn5B,EAAA,IAAAo5B,EAAAp5B,EAAA,IAAAq5B,EAAAr5B,EAAA,IAiEAs5B,EAAA,SAAAC,GACA,SAAAD,EAAAvgB,GAEA,IAAAygB,EAAsBj6B,OAAA45B,EAAA,EAAA55B,CAAM,GAAGwZ,UAC/BygB,EAAA9b,OAEA6b,EAAA75B,KAAAsZ,KAAAwgB,GAMAxgB,KAAAygB,kBAAA,KAMAzgB,KAAA0gB,cAAA,KAMA1gB,KAAA2gB,iBAAA,KAEA5gB,EAAA8Q,KACA7Q,KAAA4Q,OAAA7Q,EAAA8Q,KAGItqB,OAAAs5B,EAAA,EAAAt5B,CAAMyZ,KACJzZ,OAAAy5B,EAAA,EAAAz5B,CAAmB25B,EAAA,EAAa/M,QACtCnT,KAAA4gB,4BAAA5gB,MAEA,IAAA0E,EAAA3E,EAAA2E,OAAA3E,EAAA2E,OAAA,KACA1E,KAAA6gB,UAAAnc,GAuHA,OApHA6b,IAAAD,EAAAvd,UAAAwd,GACAD,EAAA95B,UAAAD,OAAAmE,OAAA61B,KAAA/5B,WACA85B,EAAA95B,UAAAwc,YAAAsd,EAKAA,EAAA95B,UAAAs6B,eAAA,SAAA/I,GACA,IAAAQ,EAAAR,GAAA,GAEA,OADAQ,EAAAjyB,KAAA0Z,MACAuY,GAMA+H,EAAA95B,UAAAu6B,oBAAA,SAAAC,GACA,IAAAC,EAAAD,GAAA,GAEA,OADAC,EAAA36B,KAAA0Z,KAAAkhB,iBACAD,GASAX,EAAA95B,UAAA26B,UAAA,WAEA,OADAnhB,KAAA/V,IAA0Bi2B,EAAA,EAAa/M,SAEgB,MAOvDmN,EAAA95B,UAAA46B,eAAA,WACA,IAAA1c,EAAA1E,KAAAmhB,YACA,OAAAzc,EAAgCA,EAAA2c,WAAXhB,EAAA,EAAWhD,WAMhCiD,EAAA95B,UAAA86B,oBAAA,WACAthB,KAAAmd,WAMAmD,EAAA95B,UAAAo6B,4BAAA,WACA5gB,KAAA2gB,mBACMp6B,OAAAs5B,EAAA,EAAAt5B,CAAayZ,KAAA2gB,kBACnB3gB,KAAA2gB,iBAAA,MAEA,IAAAjc,EAAA1E,KAAAmhB,YACAzc,IACA1E,KAAA2gB,iBAA8Bp6B,OAAAs5B,EAAA,EAAAt5B,CAAMme,EAC5Bob,EAAA,EAAS7lB,OAAA+F,KAAAshB,oBAAAthB,OAEjBA,KAAAmd,WAeAmD,EAAA95B,UAAAoqB,OAAA,SAAAC,GACA7Q,KAAAygB,oBACMl6B,OAAAs5B,EAAA,EAAAt5B,CAAayZ,KAAAygB,mBACnBzgB,KAAAygB,kBAAA,MAEA5P,GACA7Q,KAAAmd,UAEAnd,KAAA0gB,gBACMn6B,OAAAs5B,EAAA,EAAAt5B,CAAayZ,KAAA0gB,eACnB1gB,KAAA0gB,cAAA,MAEA7P,IACA7Q,KAAAygB,kBAA+Bl6B,OAAAs5B,EAAA,EAAAt5B,CAAMsqB,EAAMuP,EAAA,EAAe/G,WAAA,SAAA9kB,GAC1D,IAAAgtB,EAA0E,EAC1EC,EAAAxhB,KAAAkhB,gBACAM,EAAAC,SAAA,OACAp4B,IAAA2W,KAAA0hB,cACAF,EAAAG,OAAAryB,KAEAiyB,EAAAK,WAAAC,iBAAAv7B,KAAAk7B,GACAD,EAAAK,WAAAE,YAA2Cv7B,OAAAw5B,EAAA,EAAAx5B,CAAMyZ,OAAAwhB,GAC1CxhB,MACPA,KAAA0gB,cAA2Bn6B,OAAAs5B,EAAA,EAAAt5B,CAAMyZ,KAAO8f,EAAA,EAAS7lB,OAAA4W,EAAAkR,OAAAlR,GACjD7Q,KAAAmd,YAUAmD,EAAA95B,UAAAq6B,UAAA,SAAAnc,GACA1E,KAAA5B,IAAa8hB,EAAA,EAAa/M,OAAAzO,IAG1B4b,EA1JA,CA2JEL,EAAA,GAWK,SAAAL,EAAA4B,EAAA9wB,GACP,OAAA8wB,EAAAQ,SAAAtxB,GAAA8wB,EAAAS,eACAvxB,EAAA8wB,EAAAU,cAIe12B,EAAA,kCC7OfxE,EAAA2C,EAAA6B,EAAA,sBAAA22B,IAAAn7B,EAAA2C,EAAA6B,EAAA,sBAAA42B,IAAAp7B,EAAA2C,EAAA6B,EAAA,sBAAA62B,IAAAr7B,EAAA2C,EAAA6B,EAAA,sBAAA82B,IAAA,IAAAC,EAAAv7B,EAAA,GAcO,SAAAm7B,EAAA3yB,EAAAC,EAAAC,EAAAC,EAAA1B,GASP,OARgB1H,OAAAg8B,EAAA,EAAAh8B,CAAa0H,EAK7B,SAAAO,GACA,OAAA4zB,EAAA5yB,EAAAC,EAAAC,EAAAC,EAAAnB,EAAA,GAAAA,EAAA,MAeO,SAAA4zB,EAAA5yB,EAAAC,EAAAC,EAAAC,EAAAvB,EAAAC,GAWP,IAHA,IAAAm0B,EAAA,EACAlxB,EAAA9B,EAAAE,EAAAC,GACA+B,EAAAlC,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAA4B,EAAA/B,EAAAC,GACAkC,EAAAnC,EAAAC,EAAA,GACAiC,GAAArD,EACAsD,EAAAtD,IAAAkD,EAAAD,IAAAjD,EAAAqD,IAAAtD,EAAAkD,IAAAK,EAAAD,GAAA,GACA8wB,IAEK7wB,GAAAtD,IAAAkD,EAAAD,IAAAjD,EAAAqD,IAAAtD,EAAAkD,IAAAK,EAAAD,GAAA,GACL8wB,IAEAlxB,EAAAC,EACAG,EAAAC,EAEA,WAAA6wB,EAaO,SAAAH,EAAA7yB,EAAAC,EAAAqvB,EAAAnvB,EAAAvB,EAAAC,GACP,OAAAywB,EAAA14B,OACA,SAEA,IAAAg8B,EAAA5yB,EAAAC,EAAAqvB,EAAA,GAAAnvB,EAAAvB,EAAAC,GACA,SAEA,QAAAnI,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAC3C,GAAAk8B,EAAA5yB,EAAAsvB,EAAA54B,EAAA,GAAA44B,EAAA54B,GAAAyJ,EAAAvB,EAAAC,GACA,SAGA,SAaO,SAAAi0B,EAAA9yB,EAAAC,EAAA0vB,EAAAxvB,EAAAvB,EAAAC,GACP,OAAA8wB,EAAA/4B,OACA,SAEA,QAAAF,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAAA,CAC5C,IAAA44B,EAAAK,EAAAj5B,GACA,GAAAm8B,EAAA7yB,EAAAC,EAAAqvB,EAAAnvB,EAAAvB,EAAAC,GACA,SAEAoB,EAAAqvB,IAAA14B,OAAA,GAEA,wCC7GAY,EAAA2C,EAAA6B,EAAA,sBAAAi3B,IAAAz7B,EAAA2C,EAAA6B,EAAA,sBAAAk3B,IAAA17B,EAAA2C,EAAA6B,EAAA,sBAAAm3B,IAAA37B,EAAA2C,EAAA6B,EAAA,sBAAAo3B,IAAA57B,EAAA2C,EAAA6B,EAAA,sBAAAq3B,IAAA77B,EAAA2C,EAAA6B,EAAA,sBAAAs3B,IAAA,IAAAC,EAAA/7B,EAAA,GAkBA,SAAAg8B,EAAAxzB,EAAAyzB,EAAAC,EAAAvzB,EAAAvB,EAAAC,EAAAmsB,GACA,IAIA/qB,EAJA6B,EAAA9B,EAAAyzB,GACAvxB,EAAAlC,EAAAyzB,EAAA,GACA30B,EAAAkB,EAAA0zB,GAAA5xB,EACA/C,EAAAiB,EAAA0zB,EAAA,GAAAxxB,EAEA,OAAApD,GAAA,IAAAC,EACAkB,EAAAwzB,MACG,CACH,IAAA34B,IAAA8D,EAAAkD,GAAAhD,GAAAD,EAAAqD,GAAAnD,IAAAD,IAAAC,KACA,GAAAjE,EAAA,EACAmF,EAAAyzB,MACK,IAAA54B,EAAA,GACL,QAAApE,EAAA,EAAqBA,EAAAyJ,IAAYzJ,EACjCs0B,EAAAt0B,GAA0BK,OAAAw8B,EAAA,EAAAx8B,CAAIiJ,EAAAyzB,EAAA/8B,GAC9BsJ,EAAA0zB,EAAAh9B,GAAAoE,GAGA,YADAkwB,EAAAp0B,OAAAuJ,GAGAF,EAAAwzB,GAGA,QAAAE,EAAA,EAAmBA,EAAAxzB,IAAcwzB,EACjC3I,EAAA2I,GAAA3zB,EAAAC,EAAA0zB,GAEA3I,EAAAp0B,OAAAuJ,EAcO,SAAA8yB,EAAAjzB,EAAAC,EAAAC,EAAAC,EAAAI,GACP,IAAAuB,EAAA9B,EAAAC,GACAiC,EAAAlC,EAAAC,EAAA,GACA,IAAAA,GAAAE,EAAwBF,EAAAC,EAAcD,GAAAE,EAAA,CACtC,IAAA4B,EAAA/B,EAAAC,GACAkC,EAAAnC,EAAAC,EAAA,GACA2zB,EAAuB78B,OAAAw8B,EAAA,EAAAx8B,CAAS+K,EAAAI,EAAAH,EAAAI,GAChCyxB,EAAArzB,IACAA,EAAAqzB,GAEA9xB,EAAAC,EACAG,EAAAC,EAEA,OAAA5B,EAYO,SAAA2yB,EAAAlzB,EAAAC,EAAAqvB,EAAAnvB,EAAAI,GACP,QAAA7J,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAAA,CAC3C,IAAAwJ,EAAAovB,EAAA54B,GACA6J,EAAA0yB,EACAjzB,EAAAC,EAAAC,EAAAC,EAAAI,GACAN,EAAAC,EAEA,OAAAK,EAYO,SAAA4yB,EAAAnzB,EAAAC,EAAA0vB,EAAAxvB,EAAAI,GACP,QAAA7J,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAAA,CAC5C,IAAA44B,EAAAK,EAAAj5B,GACA6J,EAAA2yB,EACAlzB,EAAAC,EAAAqvB,EAAAnvB,EAAAI,GACAN,EAAAqvB,IAAA14B,OAAA,GAEA,OAAA2J,EAkBO,SAAA6yB,EAAApzB,EAAAC,EAAAC,EACPC,EAAA0zB,EAAAC,EAAAl1B,EAAAC,EAAAmsB,EAAAC,EACA8I,GACA,GAAA9zB,GAAAC,EACA,OAAA+qB,EAEA,IAAAv0B,EAAAkW,EACA,OAAAinB,EAAA,CAIA,IAFAjnB,EAAsB7V,OAAAw8B,EAAA,EAAAx8B,CACtB6H,EAAAC,EAAAmB,EAAAC,GAAAD,EAAAC,EAAA,KACAgrB,EAAA,CACA,IAAAv0B,EAAA,EAAiBA,EAAAyJ,IAAYzJ,EAC7Bs0B,EAAAt0B,GAAAsJ,EAAAC,EAAAvJ,GAGA,OADAs0B,EAAAp0B,OAAAuJ,EACAyM,EAEA,OAAAqe,EAKA,IAFA,IAAA+I,EAAAD,GAAA,CAAA3I,SACArS,EAAA9Y,EAAAE,EACA4Y,EAAA7Y,GAIA,GAHAszB,EACAxzB,EAAA+Y,EAAA5Y,EAAA4Y,EAAA5Y,EAAAvB,EAAAC,EAAAm1B,IACApnB,EAAsB7V,OAAAw8B,EAAA,EAAAx8B,CAAS6H,EAAAC,EAAAm1B,EAAA,GAAAA,EAAA,KAC/B/I,EAAA,CAEA,IADAA,EAAAre,EACAlW,EAAA,EAAiBA,EAAAyJ,IAAYzJ,EAC7Bs0B,EAAAt0B,GAAAs9B,EAAAt9B,GAEAs0B,EAAAp0B,OAAAuJ,EACA4Y,GAAA5Y,OAYA4Y,GAAA5Y,EAAAE,KAAAE,KACAF,KAAA4zB,KAAArnB,GACAvM,KAAA4zB,KAAAhJ,IAAA4I,EAAA,KAGA,GAAAC,IAEAN,EACAxzB,EAAAE,EAAAC,EAAAF,EAAAE,EAAAvB,EAAAC,EAAAm1B,IACApnB,EAAsB7V,OAAAw8B,EAAA,EAAAx8B,CAAS6H,EAAAC,EAAAm1B,EAAA,GAAAA,EAAA,KAC/B/I,GAAA,CAEA,IADAA,EAAAre,EACAlW,EAAA,EAAiBA,EAAAyJ,IAAYzJ,EAC7Bs0B,EAAAt0B,GAAAs9B,EAAAt9B,GAEAs0B,EAAAp0B,OAAAuJ,EAGA,OAAA8qB,EAkBO,SAAAoI,EAAArzB,EAAAC,EAAAqvB,EACPnvB,EAAA0zB,EAAAC,EAAAl1B,EAAAC,EAAAmsB,EAAAC,EACA8I,GAEA,IADA,IAAAC,EAAAD,GAAA,CAAA3I,SACA10B,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAAA,CAC3C,IAAAwJ,EAAAovB,EAAA54B,GACAu0B,EAAAmI,EACApzB,EAAAC,EAAAC,EAAAC,EACA0zB,EAAAC,EAAAl1B,EAAAC,EAAAmsB,EAAAC,EAAA+I,GACA/zB,EAAAC,EAEA,OAAA+qB,EAkBO,SAAAqI,EAAAtzB,EAAAC,EACP0vB,EAAAxvB,EAAA0zB,EAAAC,EAAAl1B,EAAAC,EAAAmsB,EAAAC,EACA8I,GAEA,IADA,IAAAC,EAAAD,GAAA,CAAA3I,SACA10B,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAAA,CAC5C,IAAA44B,EAAAK,EAAAj5B,GACAu0B,EAAAoI,EACArzB,EAAAC,EAAAqvB,EAAAnvB,EACA0zB,EAAAC,EAAAl1B,EAAAC,EAAAmsB,EAAAC,EAAA+I,GACA/zB,EAAAqvB,IAAA14B,OAAA,GAEA,OAAAq0B,iCCxPAzzB,EAAA2C,EAAA6B,EAAA,sBAAAk4B,IAAA18B,EAAA2C,EAAA6B,EAAA,sBAAAqrB,IAAA,IAAAhpB,EAAA7G,EAAA,IAAA28B,EAAA38B,EAAA,GAuBA48B,EAAA,oDASAC,EAAA,cASO,SAAAH,EAAA7F,GACP,uBAAAA,EACAA,EAEAhH,EAAAgH,GA2BO,IAgBPzZ,EAKA0f,EALA1f,EAAA,GAKA0f,EAAA,EAuGO,SAAAC,EAAAlG,GAKP,OAJAA,EAAA,GAAat3B,OAAAo9B,EAAA,EAAAp9B,CAAKs3B,EAAA,eAClBA,EAAA,GAAat3B,OAAAo9B,EAAA,EAAAp9B,CAAKs3B,EAAA,eAClBA,EAAA,GAAat3B,OAAAo9B,EAAA,EAAAp9B,CAAKs3B,EAAA,eAClBA,EAAA,GAAat3B,OAAAo9B,EAAA,EAAAp9B,CAAKs3B,EAAA,QAClBA,EAQO,SAAAhH,EAAAgH,GACP,IAAA3zB,EAAA2zB,EAAA,GACA3zB,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAA85B,EAAAnG,EAAA,GACAmG,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAAvmB,EAAAogB,EAAA,GAKA,OAJApgB,IAAA,EAAAA,KACAA,IAAA,MAGA,QAAAvT,EAAA,IAAA85B,EAAA,IAAAvmB,EAAA,UADApU,IAAAw0B,EAAA,KAAAA,EAAA,IACA,qHChFeoG,EA3HD,SAAAhI,GACd,SAAAiI,EAAAl2B,EAAA+uB,GAEAd,EAAAv1B,KAAAsZ,MAMAA,KAAAmkB,WAAA,EAMAnkB,KAAAokB,mBAAA,OAEA/6B,IAAA0zB,GAAA3f,MAAA2K,QAAA/Z,EAAA,IAGAgS,KAAA8c,eAAkF,EAAAC,GAFlF/c,KAAA4c,mBAAAG,EAAmE,GAqGnE,OA9FAd,IAAAiI,EAAAnhB,UAAAkZ,GACAiI,EAAA19B,UAAAD,OAAAmE,OAAAuxB,KAAAz1B,WACA09B,EAAA19B,UAAAwc,YAAAkhB,EAQAA,EAAA19B,UAAAmF,MAAA,WACA,WAAAu4B,EAAAlkB,KAAAxQ,gBAAAlE,QAAA0U,KAAAkc,SAMAgI,EAAA19B,UAAA+zB,eAAA,SAAAnsB,EAAAC,EAAAmsB,EAAAC,GACA,OAAAA,EAA6Bl0B,OAAAqgB,EAAA,EAAArgB,CAAwByZ,KAAAmB,YAAA/S,EAAAC,GACrDosB,GAEAza,KAAAokB,mBAAApkB,KAAA+a,gBACA/a,KAAAmkB,UAAAt0B,KAAA4zB,KAAiCl9B,OAAA89B,EAAA,EAAA99B,CACjCyZ,KAAAxQ,gBAAA,EAAAwQ,KAAAxQ,gBAAApJ,OAAA4Z,KAAArQ,OAAA,IACAqQ,KAAAokB,kBAAApkB,KAAA+a,eAEWx0B,OAAA89B,EAAA,EAAA99B,CACXyZ,KAAAxQ,gBAAA,EAAAwQ,KAAAxQ,gBAAApJ,OAAA4Z,KAAArQ,OACAqQ,KAAAmkB,WAAA,EAAA/1B,EAAAC,EAAAmsB,EAAAC,KAQAyJ,EAAA19B,UAAAoG,QAAA,WACA,OAAWrG,OAAA+9B,EAAA,EAAA/9B,CAAcyZ,KAAAxQ,gBAAA,EAAAwQ,KAAAxQ,gBAAApJ,OAAA4Z,KAAArQ,SASzBu0B,EAAA19B,UAAA41B,eAAA,WACA,OAAW71B,OAAAg+B,EAAA,EAAAh+B,CACXyZ,KAAAxQ,gBAAA,EAAAwQ,KAAAxQ,gBAAApJ,OAAA4Z,KAAArQ,SAMAu0B,EAAA19B,UAAAk2B,8BAAA,SAAAtB,GACA,IAAAoJ,EAAA,GAIA,OAHAA,EAAAp+B,OAAuCG,OAAA00B,EAAA,EAAA10B,CACvCyZ,KAAAxQ,gBAAA,EAAAwQ,KAAAxQ,gBAAApJ,OAAA4Z,KAAArQ,OACAyrB,EAAAoJ,EAAA,GACA,IAAAN,EAAAM,EAAqDrI,EAAA,EAAczJ,KAOnEwR,EAAA19B,UAAA60B,QAAA,WACA,OAAWoJ,EAAA,EAAY/oB,aAMvBwoB,EAAA19B,UAAA80B,iBAAA,SAAArtB,GACA,UAUAi2B,EAAA19B,UAAAs2B,eAAA,SAAA9uB,EAAA+uB,GACA/c,KAAAgd,UAAAD,EAAA/uB,EAAA,GACAgS,KAAAxQ,kBACAwQ,KAAAxQ,gBAAA,IAEAwQ,KAAAxQ,gBAAApJ,OAAkCG,OAAAm+B,EAAA,EAAAn+B,CAClCyZ,KAAAxQ,gBAAA,EAAAxB,EAAAgS,KAAArQ,QACAqQ,KAAAmd,WAGA+G,EAvHc,CAwHZS,EAAA,0DC5IF39B,EAAA2C,EAAA6B,EAAA,sBAAAo5B,IAAA59B,EAAA2C,EAAA6B,EAAA,sBAAAq5B,IAAA79B,EAAA2C,EAAA6B,EAAA,sBAAAs5B,IA4BA,IAAIC,EAAO,SAAA9I,GACX,SAAA+I,EAAAh3B,EAAA+uB,EAAA0C,GAEAxD,EAAAv1B,KAAAsZ,MAMAA,KAAAilB,MAAA,GAMAjlB,KAAAklB,4BAAA,EAMAllB,KAAAmlB,mBAAA,KAMAnlB,KAAAmkB,WAAA,EAMAnkB,KAAAokB,mBAAA,EAMApkB,KAAAolB,mBAAA,EAMAplB,KAAAqlB,yBAAA,UAEAh8B,IAAA0zB,GAAA0C,GACAzf,KAAA4c,mBAAAG,EAAmE,GACnE/c,KAAAilB,MAAAxF,GAEAzf,KAAA8c,eAAyF,EAAAC,GAmPzF,OA9OAd,IAAA+I,EAAAjiB,UAAAkZ,GACA+I,EAAAx+B,UAAAD,OAAAmE,OAAAuxB,KAAAz1B,WACAw+B,EAAAx+B,UAAAwc,YAAAgiB,EAOAA,EAAAx+B,UAAA8+B,iBAAA,SAAAC,GACAvlB,KAAAxQ,gBAGMjJ,OAAAgyB,EAAA,EAAAhyB,CAAMyZ,KAAAxQ,gBAAA+1B,EAAAjJ,sBAFZtc,KAAAxQ,gBAAA+1B,EAAAjJ,qBAAAhxB,QAIA0U,KAAAilB,MAAA3+B,KAAA0Z,KAAAxQ,gBAAApJ,QACA4Z,KAAAmd,WASA6H,EAAAx+B,UAAAmF,MAAA,WACA,WAAAq5B,EAAAhlB,KAAAxQ,gBAAAlE,QAAA0U,KAAAkc,OAAAlc,KAAAilB,MAAA35B,UAMA05B,EAAAx+B,UAAA+zB,eAAA,SAAAnsB,EAAAC,EAAAmsB,EAAAC,GACA,OAAAA,EAA6Bl0B,OAAAqgB,EAAA,EAAArgB,CAAwByZ,KAAAmB,YAAA/S,EAAAC,GACrDosB,GAEAza,KAAAokB,mBAAApkB,KAAA+a,gBACA/a,KAAAmkB,UAAAt0B,KAAA4zB,KAAiCl9B,OAAA89B,EAAA,EAAA99B,CACjCyZ,KAAAxQ,gBAAA,EAAAwQ,KAAAilB,MAAAjlB,KAAArQ,OAAA,IACAqQ,KAAAokB,kBAAApkB,KAAA+a,eAEWx0B,OAAA89B,EAAA,EAAA99B,CACXyZ,KAAAxQ,gBAAA,EAAAwQ,KAAAilB,MAAAjlB,KAAArQ,OACAqQ,KAAAmkB,WAAA,EAAA/1B,EAAAC,EAAAmsB,EAAAC,KAMAuK,EAAAx+B,UAAAuF,WAAA,SAAAqC,EAAAC,GACA,OAAW9H,OAAAi/B,EAAA,EAAAj/B,CAAqByZ,KAAAylB,6BAAA,EAAAzlB,KAAAilB,MAAAjlB,KAAArQ,OAAAvB,EAAAC,IAQhC22B,EAAAx+B,UAAAoG,QAAA,WACA,OAAWrG,OAAA+9B,EAAA,EAAA/9B,CAAeyZ,KAAAylB,6BAAA,EAAAzlB,KAAAilB,MAAAjlB,KAAArQ,SAiB1Bq1B,EAAAx+B,UAAA41B,eAAA,SAAAsJ,GACA,IAAAl2B,EASA,YARAnG,IAAAq8B,GACAl2B,EAAAwQ,KAAAylB,6BAAAn6B,QACM/E,OAAAo/B,EAAA,EAAAp/B,CACNiJ,EAAA,EAAAwQ,KAAAilB,MAAAjlB,KAAArQ,OAAA+1B,IAEAl2B,EAAAwQ,KAAAxQ,gBAGWjJ,OAAAg+B,EAAA,EAAAh+B,CACXiJ,EAAA,EAAAwQ,KAAAilB,MAAAjlB,KAAArQ,SAMAq1B,EAAAx+B,UAAAo/B,QAAA,WACA,OAAA5lB,KAAAilB,OAMAD,EAAAx+B,UAAAq/B,qBAAA,WACA,GAAA7lB,KAAAklB,4BAAAllB,KAAA+a,cAAA,CACA,IAAA+K,EAAuBv/B,OAAAqgB,EAAA,EAAArgB,CAASyZ,KAAAmB,aAChCnB,KAAAmlB,mBAAgC5+B,OAAAw/B,EAAA,EAAAx/B,CAChCyZ,KAAAylB,6BAAA,EAAAzlB,KAAAilB,MAAAjlB,KAAArQ,OACAm2B,EAAA,GACA9lB,KAAAklB,2BAAAllB,KAAA+a,cAEA,OAAA/a,KAAAmlB,oBASAH,EAAAx+B,UAAAw/B,iBAAA,WACA,WAAeC,EAAA,EAAKjmB,KAAA6lB,uBAA8B1J,EAAA,EAAcvJ,MAUhEoS,EAAAx+B,UAAA0/B,mBAAA,WACA,OAAAlmB,KAAAilB,MAAA7+B,QAaA4+B,EAAAx+B,UAAA2/B,cAAA,SAAA5d,GACA,OAAAA,EAAA,GAAAvI,KAAAilB,MAAA7+B,QAAAmiB,EACA,KAEA,IAAe0b,EAAUjkB,KAAAxQ,gBAAAlE,MACzB,IAAAid,EAAA,EAAAvI,KAAAilB,MAAA1c,EAAA,GAAAvI,KAAAilB,MAAA1c,IAAAvI,KAAAkc,SAQA8I,EAAAx+B,UAAA4/B,eAAA,WAMA,IALA,IAAAlK,EAAAlc,KAAAkc,OACA1sB,EAAAwQ,KAAAxQ,gBACAsvB,EAAA9e,KAAAilB,MACAoB,EAAA,GACA52B,EAAA,EACAvJ,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAqCF,EAAAgI,IAAQhI,EAAA,CAC7C,IAAAwJ,EAAAovB,EAAA54B,GACAq/B,EAAA,IAA2BtB,EAAUz0B,EAAAlE,MAAAmE,EAAAC,GAAAwsB,GACrCmK,EAAA//B,KAAAi/B,GACA91B,EAAAC,EAEA,OAAA22B,GAMArB,EAAAx+B,UAAAi/B,2BAAA,WACA,GAAAzlB,KAAAolB,mBAAAplB,KAAA+a,cAAA,CACA,IAAAvrB,EAAAwQ,KAAAxQ,gBACUjJ,OAAAo/B,EAAA,EAAAp/B,CACViJ,EAAA,EAAAwQ,KAAAilB,MAAAjlB,KAAArQ,QACAqQ,KAAAqlB,yBAAA71B,GAEAwQ,KAAAqlB,yBAAA71B,EAAAlE,QACA0U,KAAAqlB,yBAAAj/B,OACYG,OAAAo/B,EAAA,EAAAp/B,CACZyZ,KAAAqlB,yBAAA,EAAArlB,KAAAilB,MAAAjlB,KAAArQ,SAEAqQ,KAAAolB,kBAAAplB,KAAA+a,cAEA,OAAA/a,KAAAqlB,0BAMAL,EAAAx+B,UAAAk2B,8BAAA,SAAAtB,GACA,IAAAoJ,EAAA,GACA8B,EAAA,GAKA,OAJA9B,EAAAp+B,OAAuCG,OAAA00B,EAAA,EAAA10B,CACvCyZ,KAAAxQ,gBAAA,EAAAwQ,KAAAilB,MAAAjlB,KAAArQ,OACAE,KAAA4zB,KAAArI,GACAoJ,EAAA,EAAA8B,GACA,IAAAtB,EAAAR,EAAkDrI,EAAA,EAAczJ,GAAA4T,IAOhEtB,EAAAx+B,UAAA60B,QAAA,WACA,OAAWoJ,EAAA,EAAY9oB,SAOvBqpB,EAAAx+B,UAAA80B,iBAAA,SAAArtB,GACA,OAAW1H,OAAAggC,EAAA,EAAAhgC,CACXyZ,KAAAylB,6BAAA,EAAAzlB,KAAAilB,MAAAjlB,KAAArQ,OAAA1B,IAUA+2B,EAAAx+B,UAAAs2B,eAAA,SAAA9uB,EAAA+uB,GACA/c,KAAAgd,UAAAD,EAAA/uB,EAAA,GACAgS,KAAAxQ,kBACAwQ,KAAAxQ,gBAAA,IAEA,IAAAsvB,EAAev4B,OAAAm+B,EAAA,EAAAn+B,CACfyZ,KAAAxQ,gBAAA,EAAAxB,EAAAgS,KAAArQ,OAAAqQ,KAAAilB,OACAjlB,KAAAxQ,gBAAApJ,OAAA,IAAA04B,EAAA14B,OAAA,EAAA04B,IAAA14B,OAAA,GACA4Z,KAAAmd,WAGA6H,EAtSW,CAuSTL,EAAA,GAGan5B,EAAA,IAiCR,SAAAo5B,EAAA32B,GACP,IAAAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,GACAa,EAAAb,EAAA,GACAuB,EACA,CAAAb,EAAAC,EAAAD,EAAAG,EAAAD,EAAAC,EAAAD,EAAAD,EAAAD,EAAAC,GACA,WAAam2B,EAAOv1B,EAAkB2sB,EAAA,EAAczJ,GAAA,CAAAljB,EAAApJ,SAa7C,SAAAy+B,EAAA2B,EAAAC,EAAAC,GAOP,IANA,IAAAC,EAAAF,GAAA,GACA92B,EAAA62B,EAAA7J,YACAT,EAAAsK,EAAAhK,YACA/rB,EAAA+1B,EAAAz5B,YACA65B,EAAAj3B,GAAAg3B,EAAA,GACAn3B,EAAA,IAAA4N,MAAAwpB,GACA1gC,EAAA,EAAiBA,EAAA0gC,EAAiB1gC,GAAAyJ,EAAA,CAClCH,EAAAtJ,GAAA,EACAsJ,EAAAtJ,EAAA,KACA,QAAA+W,EAAA,EAAmBA,EAAAtN,EAAYsN,IAC/BzN,EAAAtJ,EAAA+W,GAAAxM,EAAAwM,GAGA,IAAA6hB,EAAA,CAAAtvB,EAAApJ,QACAygC,EAAA,IAAoB9B,EAAOv1B,EAAA0sB,EAAA4C,GAE3B,OADAgG,EAAA+B,EAAAp2B,EAAA+1B,EAAAM,YAAAJ,GACAG,EAYO,SAAA/B,EAAA+B,EAAAp2B,EAAAs2B,EAAAL,GAKP,IAJA,IAAAl3B,EAAAq3B,EAAAvK,qBACA3sB,EAAAk3B,EAAAlK,YACAgK,EAAAn3B,EAAApJ,OAAAuJ,EAAA,EACAq3B,EAAAN,GAAA,EACAxgC,EAAA,EAAiBA,GAAAygC,IAAYzgC,EAAA,CAC7B,IAAAuJ,EAAAvJ,EAAAyJ,EACA8P,EAAAunB,EAAoC,EAANzgC,OAAAuc,EAAA,EAAAvc,CAAML,EAAAygC,GAAA92B,KAAAyN,GAAAqpB,EACpCn3B,EAAAC,GAAAgB,EAAA,GAAAs2B,EAAAl3B,KAAAiB,IAAA2O,GACAjQ,EAAAC,EAAA,GAAAgB,EAAA,GAAAs2B,EAAAl3B,KAAAmB,IAAAyO,GAEAonB,EAAA1J,yCCnaAn2B,EAAA2C,EAAA6B,EAAA,sBAAAy7B,IAAAjgC,EAAA2C,EAAA6B,EAAA,sBAAA07B,IAAAlgC,EAAA2C,EAAA6B,EAAA,sBAAA27B,IAAAngC,EAAA2C,EAAA6B,EAAA,sBAAA47B,IAAA,IAAArE,EAAA/7B,EAAA,GAgBO,SAAAigC,EAAAt2B,EAAAogB,GACP,YAAA1nB,IAAAsH,EACA,OAEA,EAUO,SAAAu2B,EAAAv2B,EAAAogB,GACP,YAAA1nB,IAAAsH,EACAA,EAAAogB,OAEA,EASO,SAAAoW,EAAAt8B,GACP,IAAAw8B,EAAA,EAAAx3B,KAAAyN,GAAAzS,EACA,gBAMA8F,EAAAogB,GACA,YAAA1nB,IAAAsH,EACAA,EAAAd,KAAAy3B,OAAA32B,EAAAogB,GAAAsW,EAAA,IAAAA,OAGA,GAUO,SAAAD,EAAAG,GACP,IAAArM,EAAAqM,GAAmChhC,OAAAw8B,EAAA,EAAAx8B,CAAS,GAC5C,gBAMAoK,EAAAogB,GACA,YAAA1nB,IAAAsH,EACAd,KAAAiN,IAAAnM,EAAAogB,IAAAmK,EACA,EAEAvqB,EAAAogB,OAGA,kCClFA/pB,EAAA2C,EAAA6B,EAAA,sBAAAg8B,IAAAxgC,EAAA2C,EAAA6B,EAAA,sBAAAi8B,IAAAzgC,EAAA2C,EAAA6B,EAAA,sBAAAk8B,IAAA1gC,EAAA2C,EAAA6B,EAAA,sBAAAm8B,IAAA,IAAAC,EAAA5gC,EAAA,IAAA6gC,EAAA7gC,EAAA,IAAA8gC,EAAA9gC,EAAA,GAAA+gC,EAAA/gC,EAAA,IAAAghC,EAAAhhC,EAAA,IAAAihC,EAAAjhC,EAAA,IAAAkhC,EAAAlhC,EAAA,IAiBO,SAAAwgC,EAAAviB,GACP,IAAApD,EAAAoD,EAAAtD,qBAKA,OAJAE,IACAA,EAiIO,SAAAoD,EAAAkjB,EAAAC,EAAAC,GAEP,OA9FO,SAAAp6B,EAAAk6B,EAAAC,EAAAC,GACP,IAAAj4B,OAAA/G,IAAAg/B,IAAuDN,EAAA,EAAMx3B,SAE7DyhB,EAAAsW,EAAAr6B,EAAAk6B,EAAAC,GAEA,WAAaF,EAAA,EAAQ,CACrBj6B,SACAs6B,OAAYhiC,OAAAuhC,EAAA,EAAAvhC,CAAS0H,EAAAmC,GACrB4hB,cACAwW,SAAAJ,IAqFAK,CADAd,EAAA1iB,GACAkjB,EAAAC,EAAAC,GAnIAK,CAAAzjB,GACAA,EAAArD,mBAAAC,IAEAA,EAUO,SAAA4lB,EAAA5lB,EAAA0S,EAAAtP,GACP,IAAAkP,EAAAI,EAAA,GACA9jB,EAAAoR,EAAA8mB,mBAAApU,GACAqU,EAAAjB,EAAA1iB,GACA,GAAO1e,OAAAuhC,EAAA,EAAAvhC,CAAkBqiC,EAAAn4B,GAMzB,OAAA8jB,EALA,IAAAsU,EAAqBtiC,OAAAuhC,EAAA,EAAAvhC,CAAQqiC,GAC7BE,EAAAj5B,KAAAk5B,MAAAH,EAAA,GAAAn4B,EAAA,IAAAo4B,GAEA,OADAp4B,EAAA,IAAAo4B,EAAAC,EACAjnB,EAAAmnB,yBAAAv4B,EAAA0jB,GAgDO,SAAAuT,EAAA7R,GAEP,IAAAoT,EAAApT,GAAA,GAEA5nB,EAAAg7B,EAAAh7B,QAAoC1H,OAAAyhC,EAAA,EAAAzhC,CAAa,aAAA4a,YAGjD+nB,EAAA,CACAj7B,SACAk7B,QAAAF,EAAAE,QACAX,SAAAS,EAAAT,SACAxW,YAAAsW,EACAr6B,EACAg7B,EAAAG,QACAH,EAAAT,WAGA,WAAaN,EAAA,EAAQgB,GAarB,SAAAZ,EAAAr6B,EAAAk6B,EAAAC,GAcA,IAbA,IAAAgB,OAAA//B,IAAA8+B,EACAA,EAAkBP,EAAA,EAElBpvB,EAAejS,OAAAuhC,EAAA,EAAAvhC,CAAS0H,GACxB4J,EAActR,OAAAuhC,EAAA,EAAAvhC,CAAQ0H,GAEtBu6B,EAAiBjiC,OAAAshC,EAAA,EAAAthC,MAAM8C,IAAA++B,EACvBA,EAAmBR,EAAA,GACnB1F,EAAAryB,KAAAE,IACA8H,EAAA2wB,EAAA,GAAAhwB,EAAAgwB,EAAA,IAEApiC,EAAAgjC,EAAA,EACApX,EAAA,IAAA5U,MAAAhX,GACA+tB,EAAA,EAAiBA,EAAA/tB,IAAY+tB,EAC7BnC,EAAAmC,GAAA+N,EAAAryB,KAAA2jB,IAAA,EAAAW,GAEA,OAAAnC,EAyBO,SAAA2V,EAAA1iB,GAEP,IAAAhX,GADAgX,EAAe1e,OAAAyhC,EAAA,EAAAzhC,CAAa0e,IAC5B9D,YACA,IAAAlT,EAAA,CACA,IAAAo7B,EAAA,IAAqBpB,EAAA,EAAgBA,EAAA,EAAK/jB,SAAAe,EAAA5D,mBAC1CpT,EAAa1H,OAAAuhC,EAAA,EAAAvhC,EAAc8iC,UAE3B,OAAAp7B,iCCxKAjH,EAAA2C,EAAA6B,EAAA,sBAAA89B,IAAAtiC,EAAA2C,EAAA6B,EAAA,sBAAA+9B,IAAAviC,EAAA2C,EAAA6B,EAAA,sBAAAg+B,IAAAxiC,EAAA2C,EAAA6B,EAAA,sBAAAi+B,IAAAziC,EAAA2C,EAAA6B,EAAA,sBAAAk+B,IAAA,IAAA3G,EAAA/7B,EAAA,GAyEO,SAAAsiC,EAAA95B,EAAAC,EAAAC,EACPC,EAAAyrB,EAAAoJ,EAAAmF,GACA,IAAA9+B,GAAA6E,EAAAD,GAAAE,EACA,GAAA9E,EAAA,GACA,KAAU4E,EAAAC,EAAcD,GAAAE,EACxB60B,EAAAmF,KACAn6B,EAAAC,GACA+0B,EAAAmF,KACAn6B,EAAAC,EAAA,GAEA,OAAAk6B,EAGA,IAAAC,EAAA,IAAAxsB,MAAAvS,GACA++B,EAAA,KACAA,EAAA/+B,EAAA,KAIA,IAFA,IAAAg/B,EAAA,CAAAp6B,EAAAC,EAAAC,GACA4Y,EAAA,EACAshB,EAAAzjC,OAAA,IAQA,IAPA,IAAA0jC,EAAAD,EAAAvR,MACAyR,EAAAF,EAAAvR,MACA0R,EAAA,EACA14B,EAAA9B,EAAAu6B,GACAr4B,EAAAlC,EAAAu6B,EAAA,GACAx4B,EAAA/B,EAAAs6B,GACAn4B,EAAAnC,EAAAs6B,EAAA,GACA5jC,EAAA6jC,EAAAp6B,EAAgCzJ,EAAA4jC,EAAU5jC,GAAAyJ,EAAA,CAC1C,IAAAvB,EAAAoB,EAAAtJ,GACAmI,EAAAmB,EAAAtJ,EAAA,GACAkW,EAA4B7V,OAAAw8B,EAAA,EAAAx8B,CAC5B6H,EAAAC,EAAAiD,EAAAI,EAAAH,EAAAI,GACAyK,EAAA4tB,IACAzhB,EAAAriB,EACA8jC,EAAA5tB,GAGA4tB,EAAA5O,IACAwO,GAAArhB,EAAA9Y,GAAAE,GAAA,EACAo6B,EAAAp6B,EAAA4Y,GACAshB,EAAAvjC,KAAAyjC,EAAAxhB,GAEAA,EAAA5Y,EAAAm6B,GACAD,EAAAvjC,KAAAiiB,EAAAuhB,IAIA,QAAA3G,EAAA,EAAmBA,EAAAt4B,IAASs4B,EAC5ByG,EAAAzG,KACAqB,EAAAmF,KACAn6B,EAAAC,EAAA0zB,EAAAxzB,GACA60B,EAAAmF,KACAn6B,EAAAC,EAAA0zB,EAAAxzB,EAAA,IAGA,OAAAg6B,EAgBO,SAAAJ,EAAA/5B,EAAAC,EACPqvB,EAAAnvB,EAAAyrB,EAAAoJ,EACAmF,EAAArD,GACA,QAAApgC,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAAA,CAC3C,IAAAwJ,EAAAovB,EAAA54B,GACAyjC,EAAAL,EACA95B,EAAAC,EAAAC,EAAAC,EAAAyrB,EACAoJ,EAAAmF,GACArD,EAAAhgC,KAAAqjC,GACAl6B,EAAAC,EAEA,OAAAi6B,EAsFO,SAAAH,EAAAn/B,EAAA6wB,GACP,OAAAA,EAAArrB,KAAAo6B,MAAA5/B,EAAA6wB,GAuBO,SAAAgP,EAAA16B,EAAAC,EAAAC,EAAAC,EACPurB,EAAAsJ,EAAAmF,GAEA,GAAAl6B,GAAAC,EACA,OAAAi6B,EAGA,IAQAp4B,EAAAI,EARAL,EAAAk4B,EAAAh6B,EAAAC,GAAAyrB,GACAxpB,EAAA83B,EAAAh6B,EAAAC,EAAA,GAAAyrB,GACAzrB,GAAAE,EAEA60B,EAAAmF,KAAAr4B,EACAkzB,EAAAmF,KAAAj4B,EAIA,GAIA,GAHAH,EAAAi4B,EAAAh6B,EAAAC,GAAAyrB,GACAvpB,EAAA63B,EAAAh6B,EAAAC,EAAA,GAAAyrB,IACAzrB,GAAAE,IACAD,EAOA,OAFA80B,EAAAmF,KAAAp4B,EACAizB,EAAAmF,KAAAh4B,EACAg4B,QAEGp4B,GAAAD,GAAAK,GAAAD,GACH,KAAAjC,EAAAC,GAAA,CAEA,IAAA8B,EAAAg4B,EAAAh6B,EAAAC,GAAAyrB,GACAtpB,EAAA43B,EAAAh6B,EAAAC,EAAA,GAAAyrB,GAGA,GAFAzrB,GAAAE,EAEA6B,GAAAD,GAAAK,GAAAD,EAAA,CAIA,IAAA0N,EAAA9N,EAAAD,EACAgO,EAAA3N,EAAAD,EAEAgO,EAAAlO,EAAAF,EACAqO,EAAA/N,EAAAF,EAIA2N,EAAAM,GAAAL,EAAAI,IACAL,EAAA,GAAAK,EAAAL,MAAAK,GAAAL,EAAA,GAAAK,EAAAL,KACAC,EAAA,GAAAK,EAAAL,MAAAK,GAAAL,EAAA,GAAAK,EAAAL,IAEA/N,EAAAC,EACAG,EAAAC,IAMA4yB,EAAAmF,KAAAp4B,EACAizB,EAAAmF,KAAAh4B,EACAL,EAAAC,EACAG,EAAAC,EACAJ,EAAAC,EACAG,EAAAC,IAKA,OAFA4yB,EAAAmF,KAAAp4B,EACAizB,EAAAmF,KAAAh4B,EACAg4B,EAgBO,SAAAF,EACPj6B,EAAAC,EAAAqvB,EAAAnvB,EACAurB,EACAsJ,EAAAmF,EAAArD,GACA,QAAApgC,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAAA,CAC3C,IAAAwJ,EAAAovB,EAAA54B,GACAyjC,EAAAO,EACA16B,EAAAC,EAAAC,EAAAC,EACAurB,EACAsJ,EAAAmF,GACArD,EAAAhgC,KAAAqjC,GACAl6B,EAAAC,EAEA,OAAAi6B,EAgBO,SAAAD,EACPl6B,EAAAC,EAAA0vB,EAAAxvB,EACAurB,EACAsJ,EAAAmF,EAAAQ,GACA,QAAAjkC,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAAA,CAC5C,IAAA44B,EAAAK,EAAAj5B,GACAogC,EAAA,GACAqD,EAAAF,EACAj6B,EAAAC,EAAAqvB,EAAAnvB,EACAurB,EACAsJ,EAAAmF,EAAArD,GACA6D,EAAA7jC,KAAAggC,GACA72B,EAAAqvB,IAAA14B,OAAA,GAEA,OAAAujC,iCClYen+B,EAAA,GAMf+iB,eAAA,gDCbA,IAKA6b,EAAA,SAAAC,GACA,SAAAD,EAAArhC,EAAA8nB,EAAA3D,EAAAod,EAAAC,GAEAF,EAAA3jC,KAAAsZ,KAAAjX,EAAA8nB,EAAA3D,EAAAT,cAAA6d,EAAAC,GAMAvqB,KAAAkN,eAQA,OAJAmd,IAAAD,EAAArnB,UAAAsnB,GACAD,EAAA5jC,UAAAD,OAAAmE,OAAA2/B,KAAA7jC,WACA4jC,EAAA5jC,UAAAwc,YAAAonB,EAEAA,EAjBA,CALApjC,EAAA,IAuBE,GAEawE,EAAA,kCCrBf,IAAAg/B,EAAA,SAAAC,EAAAC,GAKA1qB,KAAAyqB,aAOAzqB,KAAA2qB,SAAAD,GAOAF,EAAAhkC,UAAAokC,UAAA,WACA,OAAArkC,OAAA2N,KAAA8L,KAAA2qB,WAQAH,EAAAhkC,UAAAqkC,mBAAA,SAAAxc,GACA,OAAArO,KAAA2qB,SAAAtc,IAGe7iB,EAAA,kCCpCfxE,EAAA2C,EAAA6B,EAAA,sBAAAs/B,IAAA9jC,EAAA2C,EAAA6B,EAAA,sBAAAu/B,IAAA/jC,EAAA2C,EAAA6B,EAAA,sBAAAw/B,IAAAhkC,EAAA2C,EAAA6B,EAAA,sBAAAy/B,IAAA,IAAAp9B,EAAA7G,EAAA,IAAA28B,EAAA38B,EAAA,GAAAkkC,EAAAlkC,EAAA,IAaO,SAAAmkC,EAAAC,EAAAvpB,GACP,IAAAwpB,EAAA,SACAC,EAAA,SACAC,EAAA,SACAC,EAAA,UACA,gBAOAjX,EAAAkX,EAAAxmB,GACA,OAAAsP,EAGA6W,EAAAM,QAAAL,EAAA9W,EAAA,GAAAsC,YACA6U,QAAAJ,EAAA/W,EAAA,GAAAsC,YACA6U,QAAAH,EAAA,WAEA,QADAhX,EAAA,MACAsC,aAEA6U,QAAAF,EAAA,WACA,IAAArX,EAAAI,EAAA,GACAoX,EAAA9pB,EAAAyT,iBAAAnB,GAGA,OAFY5tB,OAAAsH,EAAA,EAAAtH,CAAMolC,EAAA,KAClBA,EAAAz+B,YAAAqnB,EAAA,IACAsC,kBAbA,GA0BO,SAAAiU,EAAAc,EAAA/pB,GAGP,IAFA,IAAA3K,EAAA00B,EAAAxlC,OACAylC,EAAA,IAAAzuB,MAAAlG,GACAhR,EAAA,EAAiBA,EAAAgR,IAAShR,EAC1B2lC,EAAA3lC,GAAAilC,EAAAS,EAAA1lC,GAAA2b,GAEA,OAAAkpB,EAAAc,GAQO,SAAAd,EAAAc,GACP,WAAAA,EAAAzlC,OACAylC,EAAA,GAEA,SAOAtX,EAAAkX,EAAAxmB,GACA,GAAAsP,EAEO,CACP,IAAA3a,EAAgBrT,OAAA2kC,EAAA,EAAA3kC,CAAaguB,GAC7BhM,EAAoBhiB,OAAAo9B,EAAA,EAAAp9B,CAAMqT,EAAAiyB,EAAAzlC,QAC1B,OAAAylC,EAAAtjB,GAAAgM,EAAAkX,EAAAxmB,KAaO,SAAA+lB,EAAAzW,EAAAkX,EAAAxmB,IASA,SAAAgmB,EAAAa,GACP,IAAAC,EAAA,GACAC,EAAA,sBAAkCC,KAAAH,GAClC,GAAAE,EAAA,CAEA,IAEApX,EAFAsX,EAAAF,EAAA,GAAAG,WAAA,GACAC,EAAAJ,EAAA,GAAAG,WAAA,GAEA,IAAAvX,EAAAsX,EAAkCtX,GAAAwX,IAA0BxX,EAC5DmX,EAAAzlC,KAAAwlC,EAAAJ,QAAAM,EAAA,GAAA/2B,OAAA8f,aAAAH,KAEA,OAAAmX,EAGA,GADAC,IAAA,kBAAkCC,KAAAH,GAClC,CAGA,IADA,IAAAO,EAAAC,SAAAN,EAAA,OACA9lC,EAAAomC,SAAAN,EAAA,OAAwC9lC,GAAAmmC,EAAWnmC,IACnD6lC,EAAAzlC,KAAAwlC,EAAAJ,QAAAM,EAAA,GAAA9lC,EAAA2wB,aAEA,OAAAkV,EAGA,OADAA,EAAAzlC,KAAAwlC,GACAC,iCCjIA,IAAAQ,EAAAvlC,EAAA,IAAAwlC,EAAAxlC,EAAA,IAAAywB,EAAAzwB,EAAA,IAAAylC,EAAAzlC,EAAA,IAAA0lC,EAAA1lC,EAAA,GA+CA2lC,EAAA,SAAA9e,GACA,SAAA8e,EAAA5sB,GAEA8N,EAAAnnB,KAAAsZ,MAMAA,KAAA6X,QAAA9X,EAAA8X,QAAA9X,EAAA8X,QAAA,KAMA7X,KAAA4sB,QAAA,KAMA5sB,KAAAsQ,KAAA,KAMAtQ,KAAA6sB,aAAA,GAKA7sB,KAAA+hB,OAAAhiB,EAAAgiB,OAAAhiB,EAAAgiB,OAAoDwK,EAAA,EAEpDxsB,EAAA9W,QACA+W,KAAA8sB,UAAA/sB,EAAA9W,QAqEA,OAhEA4kB,IAAA8e,EAAA5pB,UAAA8K,GACA8e,EAAAnmC,UAAAD,OAAAmE,OAAAmjB,KAAArnB,WACAmmC,EAAAnmC,UAAAwc,YAAA2pB,EAKAA,EAAAnmC,UAAAg4B,gBAAA,WACIj4B,OAAAkmC,EAAA,EAAAlmC,CAAUyZ,KAAA6X,SACdhK,EAAArnB,UAAAg4B,gBAAA93B,KAAAsZ,OAQA2sB,EAAAnmC,UAAAkqB,OAAA,WACA,OAAA1Q,KAAAsQ,MAUAqc,EAAAnmC,UAAAoqB,OAAA,SAAAC,GACA7Q,KAAAsQ,MACM/pB,OAAAkmC,EAAA,EAAAlmC,CAAUyZ,KAAA6X,SAEhB,QAAA3xB,EAAA,EAAAgI,EAAA8R,KAAA6sB,aAAAzmC,OAAkDF,EAAAgI,IAAQhI,EACpDK,OAAAmmC,EAAA,EAAAnmC,CAAayZ,KAAA6sB,aAAA3mC,KAEnB8Z,KAAA6sB,aAAAzmC,OAAA,EACA4Z,KAAAsQ,KAAAO,EACA7Q,KAAAsQ,SACAtQ,KAAA4sB,QACA5sB,KAAA4sB,QAAA/b,EAAAkc,gCACAxjC,YAAAyW,KAAA6X,SACA7X,KAAA+hB,SAA0BwK,EAAA,GAC1BvsB,KAAA6sB,aAAAvmC,KAA+BC,OAAAmmC,EAAA,EAAAnmC,CAAMsqB,EAC3B2b,EAAA,EAAYQ,WAAAhtB,KAAA+hB,OAAA/hB,OAEtB6Q,EAAAkR,WAaA4K,EAAAnmC,UAAAsmC,UAAA,SAAA7jC,GACA+W,KAAA4sB,QAAA,iBAAA3jC,EACApB,SAAAolC,eAAAhkC,GACAA,GAGA0jC,EAxGA,CAyGElV,EAAA,GAGajsB,EAAA,kCC3JfxE,EAAA2C,EAAA6B,EAAA,sBAAA0hC,IAAAlmC,EAAA2C,EAAA6B,EAAA,sBAAA2hC,IAQO,IAAAD,EAAA,GAMAC,EAAA,kCCdPnmC,EAAA2C,EAAA6B,EAAA,sBAAA4hC,IAAApmC,EAAA2C,EAAA6B,EAAA,sBAAA6hC,IAAArmC,EAAA2C,EAAA6B,EAAA,sBAAA8hC,IAAA,IAAAC,EAAAvmC,EAAA,IAwCOomC,EAAA,EAMAC,EAAA,QAgBP,SAAAG,EAAAC,GACA,IAAAztB,KAAA0tB,2BAAAD,GAAA,CAGAL,EAAAvW,aAAA7W,KAAA2tB,YACA3tB,KAAA4tB,OAAAH,GAEA,IAAArmC,EAAAkmC,EAAAG,EAAAztB,KAAAyqB,YACAzqB,KAAA2tB,WAAAP,EAAAvW,YAAA4W,EACAztB,KAAAyqB,WAAAoD,KAAAzmC,EAAAqmC,IAUA,SAAAK,EAAAL,GACA,IAAAztB,KAAA0tB,2BAAAD,GAAA,CACA,IAAArmC,EAAAkmC,EAAAG,EAAAztB,KAAAyqB,YACAzqB,KAAAyqB,WAAAsD,KAAA3mC,EAAAqmC,IAUA,SAAAO,EAAAP,GACA,IAAAztB,KAAA0tB,2BAAAD,GAAA,CACA,IAAAnlC,EAAA0X,KAAA2tB,WAAAP,EAAAvW,YAEA,GAAAvuB,KAAA0kB,SAAAygB,EAAAzgB,OAAA,CACA,IAAA5lB,EAAAkmC,EAAAG,EAAAztB,KAAAyqB,YACAzqB,KAAAyqB,WAAAwD,GAAA7mC,EAAAqmC,GACAztB,KAAAkuB,iBAWA,SAAAC,EAAAV,GACA,IAAAztB,KAAA0tB,2BAAAD,GAAA,CACA,IAAArmC,EAAAkmC,EAAAG,EAAAztB,KAAAyqB,YACAzqB,KAAAyqB,WAAA2D,UAAAhnC,EAAAqmC,IAUA,SAAAY,EAAAZ,GACA,IAAAztB,KAAA0tB,2BAAAD,GAAA,CACA,IAAArmC,EAAAkmC,EAAAG,EAAAztB,KAAAyqB,YACAzqB,KAAAyqB,WAAA6D,SAAAlnC,EAAAqmC,IAKA,IAAAc,EAAA,SAAA/D,GACA,SAAA+D,EAAA9D,GACA,IAAAC,EAAA,CACA8C,YACAM,YACAE,UACAG,YACAE,YAEA7D,EAAA9jC,KAAAsZ,KAAAyqB,EAAAC,GAMA1qB,KAAA2tB,WAAAlD,EAAAkD,WAMA3tB,KAAAwuB,YAAA,GAgEA,OA7DAhE,IAAA+D,EAAAxrB,UAAAynB,GACA+D,EAAA/nC,UAAAD,OAAAmE,OAAA8/B,KAAAhkC,WACA+nC,EAAA/nC,UAAAwc,YAAAurB,EA0BAA,EAAA/nC,UAAAknC,2BAAA,SAAAD,GAIA,IAHA,IAAAgB,EAAAzuB,KAAAwuB,YACApgC,EAAAq/B,EAAA1W,QACA1oB,EAAAo/B,EAAAzW,QACA9wB,EAAA,EAAAiB,EAAAsnC,EAAAroC,OAAAkE,OAAA,EAAiDpE,EAAAiB,IAAAmD,EAAAmkC,EAAAvoC,IAAuBA,IAAA,CAExE,IAAAoI,EAAAuB,KAAAiN,IAAA1O,EAAA9D,EAAA,IACAiE,EAAAsB,KAAAiN,IAAAzO,EAAA/D,EAAA,IACA,GAAAgE,GA3IA,IA2IAC,GA3IA,GA4IA,SAGA,UAQAggC,EAAA/nC,UAAAonC,OAAA,SAAAH,GACA,IAAArmC,EAAAkmC,EAAAG,EAAAztB,KAAAyqB,YACAzqB,KAAAyqB,WAAAmD,OAAAxmC,EAAAqmC,GACAztB,KAAAkuB,gBAMAK,EAAA/nC,UAAA0nC,aAAA,kBACAluB,KAAA2tB,WAAAP,EAAAvW,aAGA0X,EArFA,CAsFEhB,EAAA,GAWK,SAAAD,EAAAG,EAAAhD,GACP,IAAArjC,EAAAqjC,EAAAiE,WAAAjB,KAGAkB,EAAAvnC,EAAAksB,eAUA,OATAlsB,EAAAksB,eAAA,WACAma,EAAAna,iBACAqb,KAGAvnC,EAAAwvB,UAAAwW,EACAhmC,EAAAwnC,WAAA,EACAxnC,EAAA+lB,YAAAkgB,EAEAjmC,EAIeoE,EAAA,kCChPAA,EAAA,GACf6E,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,2CCFO,SAAAq+B,EAAAC,EAAAj3B,EAAAk3B,GACP,IAAAC,OAAA3lC,IAAA0lC,EAAAD,EAAAG,QAAAF,GAAA,GAAAD,EACAI,EAAAF,EAAAv6B,QAAA,KAEA,OADAy6B,GAAA,IAAAA,EAAAF,EAAA5oC,OAAA8oC,GACAr3B,EAAAm3B,EAAA,IAAA5xB,MAAA,EAAAvF,EAAAq3B,GAAAla,KAAA,KAAAga,EAUO,SAAAG,EAAAC,EAAAC,GAIP,IAHA,IAAAC,GAAA,GAAAF,GAAAlb,MAAA,KACAqb,GAAA,GAAAF,GAAAnb,MAAA,KAEAhuB,EAAA,EAAiBA,EAAA2J,KAAAE,IAAAu/B,EAAAlpC,OAAAmpC,EAAAnpC,QAAoCF,IAAA,CACrD,IAAAspC,EAAAlD,SAAAgD,EAAAppC,IAAA,QACAupC,EAAAnD,SAAAiD,EAAArpC,IAAA,QAEA,GAAAspC,EAAAC,EACA,SAEA,GAAAA,EAAAD,EACA,SAIA,SAxCAxoC,EAAA2C,EAAA6B,EAAA,sBAAAqjC,IAAA7nC,EAAA2C,EAAA6B,EAAA,sBAAA2jC,kCCAAnoC,EAAA2C,EAAA6B,EAAA,sBAAAU,IAQA,IAAAwjC,EAAA,SAAA/gC,EAAAE,EAAAD,EAAAE,GAKAkR,KAAArR,OAKAqR,KAAAnR,OAKAmR,KAAApR,OAKAoR,KAAAlR,QAkGO,SAAA5C,EAAAyC,EAAAE,EAAAD,EAAAE,EAAAsmB,GACP,YAAA/rB,IAAA+rB,GACAA,EAAAzmB,OACAymB,EAAAvmB,OACAumB,EAAAxmB,OACAwmB,EAAAtmB,OACAsmB,GAEA,IAAAsa,EAAA/gC,EAAAE,EAAAD,EAAAE,GAlGA4gC,EAAAlpC,UAAAg/B,SAAA,SAAAjR,GACA,OAAAvU,KAAAjU,WAAAwoB,EAAA,GAAAA,EAAA,KAOAmb,EAAAlpC,UAAAmpC,kBAAA,SAAAva,GACA,OAAApV,KAAArR,MAAAymB,EAAAzmB,MAAAymB,EAAAvmB,MAAAmR,KAAAnR,MACAmR,KAAApR,MAAAwmB,EAAAxmB,MAAAwmB,EAAAtmB,MAAAkR,KAAAlR,MAQA4gC,EAAAlpC,UAAAuF,WAAA,SAAAqC,EAAAC,GACA,OAAA2R,KAAArR,MAAAP,MAAA4R,KAAAnR,MAAAmR,KAAApR,MAAAP,MAAA2R,KAAAlR,MAOA4gC,EAAAlpC,UAAA+F,OAAA,SAAA6oB,GACA,OAAApV,KAAArR,MAAAymB,EAAAzmB,MAAAqR,KAAApR,MAAAwmB,EAAAxmB,MACAoR,KAAAnR,MAAAumB,EAAAvmB,MAAAmR,KAAAlR,MAAAsmB,EAAAtmB,MAMA4gC,EAAAlpC,UAAAgG,OAAA,SAAA4oB,GACAA,EAAAzmB,KAAAqR,KAAArR,OACAqR,KAAArR,KAAAymB,EAAAzmB,MAEAymB,EAAAvmB,KAAAmR,KAAAnR,OACAmR,KAAAnR,KAAAumB,EAAAvmB,MAEAumB,EAAAxmB,KAAAoR,KAAApR,OACAoR,KAAApR,KAAAwmB,EAAAxmB,MAEAwmB,EAAAtmB,KAAAkR,KAAAlR,OACAkR,KAAAlR,KAAAsmB,EAAAtmB,OAOA4gC,EAAAlpC,UAAA0G,UAAA,WACA,OAAA8S,KAAAlR,KAAAkR,KAAApR,KAAA,GAMA8gC,EAAAlpC,UAAAopC,QAAA,WACA,OAAA5vB,KAAA1S,WAAA0S,KAAA9S,cAMAwiC,EAAAlpC,UAAA8G,SAAA,WACA,OAAA0S,KAAAnR,KAAAmR,KAAArR,KAAA,GAOA+gC,EAAAlpC,UAAA+G,WAAA,SAAA6nB,GACA,OAAApV,KAAArR,MAAAymB,EAAAvmB,MACAmR,KAAAnR,MAAAumB,EAAAzmB,MACAqR,KAAApR,MAAAwmB,EAAAtmB,MACAkR,KAAAlR,MAAAsmB,EAAAxmB,MAyBepD,EAAA,kCCnIf,IAAA0yB,EAAA,WAMAle,KAAA6vB,WAAA,GAMA3R,EAAA13B,UAAAspC,QAAA,WACA9vB,KAAA6vB,YACA7vB,KAAA6vB,WAAA,EACA7vB,KAAAwe,oBAQAN,EAAA13B,UAAAg4B,gBAAA,aAEehzB,EAAA,kCC1BAA,EAAA,GAOfwhC,WAAA,aAOA+C,UAAA,YAOAC,QAAA,yCC5BA,IAUAC,EAAA,SAAAtiB,GACA,SAAAsiB,EAAAlnC,EAAA8nB,EAAA0Z,GAEA5c,EAAAjnB,KAAAsZ,KAAAjX,GAOAiX,KAAA6Q,MAOA7Q,KAAA4hB,gBAAAv4B,IAAAkhC,IAAA,KAQA,OAJA5c,IAAAsiB,EAAAltB,UAAA4K,GACAsiB,EAAAzpC,UAAAD,OAAAmE,OAAAijB,KAAAnnB,WACAypC,EAAAzpC,UAAAwc,YAAAitB,EAEAA,EAzBA,CAVAjpC,EAAA,IAoCE,GAEawE,EAAA,kCC3BR,SAAAwC,EAAAwB,EAAAC,EAAAC,EAAAC,GACP,KAAAF,EAAAC,EAAAC,GAAA,CACA,QAAAzJ,EAAA,EAAmBA,EAAAyJ,IAAYzJ,EAAA,CAC/B,IAAA8W,EAAAxN,EAAAC,EAAAvJ,GACAsJ,EAAAC,EAAAvJ,GAAAsJ,EAAAE,EAAAC,EAAAzJ,GACAsJ,EAAAE,EAAAC,EAAAzJ,GAAA8W,EAEAvN,GAAAE,EACAD,GAAAC,GCNO,SAAAugC,EAAA1gC,EAAAC,EAAAC,EAAAC,GAMP,IAHA,IAAAwgC,EAAA,EACA7+B,EAAA9B,EAAAE,EAAAC,GACA+B,EAAAlC,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAA4B,EAAA/B,EAAAC,GACAkC,EAAAnC,EAAAC,EAAA,GACA0gC,IAAA5+B,EAAAD,IAAAK,EAAAD,GACAJ,EAAAC,EACAG,EAAAC,EAEA,OAAAw+B,EAAA,EAiBO,SAAAC,EAAA5gC,EAAAC,EAAAqvB,EAAAnvB,EAAA+1B,GAEP,IADA,IAAA2K,OAAAhnC,IAAAq8B,KACAx/B,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAAA,CAC3C,IAAAwJ,EAAAovB,EAAA54B,GACAoqC,EAAAJ,EACA1gC,EAAAC,EAAAC,EAAAC,GACA,OAAAzJ,GACA,GAAAmqC,GAAAC,IAAAD,IAAAC,EACA,cAGA,GAAAD,IAAAC,IAAAD,GAAAC,EACA,SAGA7gC,EAAAC,EAEA,SAiBO,SAAA6gC,EAAA/gC,EAAAC,EAAA0vB,EAAAxvB,EAAA+1B,GACP,QAAAx/B,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAC5C,IAAAkqC,EACA5gC,EAAAC,EAAA0vB,EAAAj5B,GAAAyJ,EAAA+1B,GACA,SAGA,SAiBO,SAAA8K,EAAAhhC,EAAAC,EAAAqvB,EAAAnvB,EAAA+1B,GAEP,IADA,IAAA2K,OAAAhnC,IAAAq8B,KACAx/B,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAAA,CAC3C,IAAAwJ,EAAAovB,EAAA54B,GACAoqC,EAAAJ,EACA1gC,EAAAC,EAAAC,EAAAC,IACA,IAAAzJ,EACAmqC,GAAAC,IAAAD,IAAAC,EACAD,IAAAC,IAAAD,GAAAC,IAEMtiC,EAAkBwB,EAAAC,EAAAC,EAAAC,GAExBF,EAAAC,EAEA,OAAAD,EAiBO,SAAAghC,EAAAjhC,EAAAC,EAAA0vB,EAAAxvB,EAAA+1B,GACP,QAAAx/B,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAC5CuJ,EAAA+gC,EACAhhC,EAAAC,EAAA0vB,EAAAj5B,GAAAyJ,EAAA+1B,GAEA,OAAAj2B,EAzIAzI,EAAA2C,EAAA6B,EAAA,sBAAA4kC,IAAAppC,EAAA2C,EAAA6B,EAAA,sBAAA+kC,IAAAvpC,EAAA2C,EAAA6B,EAAA,sBAAAglC,IAAAxpC,EAAA2C,EAAA6B,EAAA,sBAAAilC,kCCAAzpC,EAAA2C,EAAA6B,EAAA,sBAAAklC,IAAA1pC,EAAA2C,EAAA6B,EAAA,sBAAAu2B,IAAA,IAAA4O,EAAA3pC,EAAA,IAAA4pC,EAAA5pC,EAAA,GAAA6pC,EAAA7pC,EAAA,GAAA8pC,EAAA9pC,EAAA,IAqBO,SAAA0pC,EAAAnV,EAAAwV,EACPC,EAAAC,GAEA,IAAAC,EAAqB3qC,OAAAuqC,EAAA,EAAAvqC,CAASyqC,EAAAD,EAAAxV,GAG9B4V,EAAyB5qC,OAAAuqC,EAAA,EAAAvqC,CAAkBwqC,EAAAE,EAAAD,GAE3CI,EAAAL,EAAA1vB,wBACAhY,IAAA+nC,IACAD,GAAAC,GAEA,IAAAC,EAAA9V,EAAAla,wBACAhY,IAAAgoC,IACAF,GAAAE,GAOA,IAAAC,EAAA/V,EAAApa,YACA,IAAAmwB,GAAuB/qC,OAAAqqC,EAAA,EAAArqC,CAAkB+qC,EAAAJ,GAAA,CACzC,IAAAK,EAA6BhrC,OAAAuqC,EAAA,EAAAvqC,CAAkBg1B,EAAA4V,EAAAD,GAC/CC,EACAK,SAAAD,MAAA,IACAJ,GAAAI,GAIA,OAAAJ,EAcA,SAAAM,EAAAC,EAAAC,EAAAvjC,EAAAC,GACA,IAAAujC,EAAAxjC,EAAAsjC,EACAG,EAAAxjC,EAAAsjC,EACAG,EAAAjiC,KAAA4zB,KAAAmO,IAAAC,KACA,OAAAhiC,KAAAo6B,MAAA77B,EAAAwjC,EAAAE,GAAAjiC,KAAAo6B,MAAA57B,EAAAwjC,EAAAC,IAuBO,SAAA/P,EAAAlqB,EAAAW,EAAAizB,EACP0F,EAAAG,EAAAL,EAAAc,EACAC,EAAAC,EAAAC,EAAAC,GAEA,IAAA76B,EAAgB/Q,OAAAoqC,EAAA,EAAApqC,CAAqBsJ,KAAAo6B,MAAAwB,EAAA5zB,GACrChI,KAAAo6B,MAAAwB,EAAAjzB,IAEA,OAAAy5B,EAAA7rC,OACA,OAAAkR,EAAA2T,OAGA3T,EAAAuC,MAAA4xB,KAEA,IAAA2G,EAAyB7rC,OAAAqqC,EAAA,EAAArqC,GACzB0rC,EAAApsB,QAAA,SAAAxd,EAAAnC,EAAAuhB,GACIlhB,OAAAqqC,EAAA,EAAArqC,CAAM6rC,EAAA/pC,EAAA4F,UAGV,IAAAokC,EAA2B9rC,OAAAqqC,EAAA,EAAArqC,CAAQ6rC,GACnCE,EAA4B/rC,OAAAqqC,EAAA,EAAArqC,CAAS6rC,GACrCG,EAAsBhsC,OAAAoqC,EAAA,EAAApqC,CACtBsJ,KAAAo6B,MAAAwB,EAAA4G,EAAAlB,GACAthC,KAAAo6B,MAAAwB,EAAA6G,EAAAnB,IAEAqB,EAAA/G,EAAA0F,EAEAc,EAAApsB,QAAA,SAAAxd,EAAAnC,EAAAuhB,GACA,IAAAgrB,EAAApqC,EAAA4F,OAAA,GAAAmkC,EAAA,GACAM,IAAArqC,EAAA4F,OAAA,GAAAmkC,EAAA,IACAO,EAAmBpsC,OAAAqqC,EAAA,EAAArqC,CAAQ8B,EAAA4F,QAC3B2kC,EAAoBrsC,OAAAqqC,EAAA,EAAArqC,CAAS8B,EAAA4F,QAE7BskC,EAAAn8B,UACA/N,EAAAmR,MACA04B,IACA7pC,EAAAmR,MAAA3B,MAAA,EAAAq6B,EAAA7pC,EAAAmR,MAAAhB,OAAA,EAAA05B,EACAO,EAAAD,EAAAE,EAAAF,EACAG,EAAAH,EAAAI,EAAAJ,KAGA,IAAAK,EAAsBtsC,OAAAqqC,EAAA,EAAArqC,CAAUwrC,GA6GhC,OA3GAC,EAAAc,eAAAjtB,QAAA,SAAAktB,EAAA7sC,EAAAuhB,GAqBA,IAAA/C,EAAAquB,EAAAruB,OACAzb,EAAA8pC,EAAA9pC,OACAoI,EAAAqT,EAAA,MAAAjT,EAAAiT,EAAA,MACApT,EAAAoT,EAAA,MAAAhT,EAAAgT,EAAA,MACAnT,EAAAmT,EAAA,MAAA/S,EAAA+S,EAAA,MACAsuB,GAAA/pC,EAAA,MAAA4pC,EAAA,IAAA5B,EACAgC,IAAAhqC,EAAA,MAAA4pC,EAAA,IAAA5B,EACAiC,GAAAjqC,EAAA,MAAA4pC,EAAA,IAAA5B,EACA7B,IAAAnmC,EAAA,MAAA4pC,EAAA,IAAA5B,EACAkC,GAAAlqC,EAAA,MAAA4pC,EAAA,IAAA5B,EACA5B,IAAApmC,EAAA,MAAA4pC,EAAA,IAAA5B,EAKAmC,EAAA/hC,EACAgiC,EAAA5hC,EACAJ,EAAA,EACAI,EAAA,EAMA,IAAA6hC,EAAA,CACA,CANAhiC,GAAA8hC,EACA1hC,GAAA2hC,EAKA,IAAAH,EAAAF,GACA,CALAzhC,GAAA6hC,EACAzhC,GAAA0hC,EAIA,IAAAF,EAAAH,GACA,KAAA1hC,EAAAI,EAAA09B,EAAA6D,GACA,KAAA1hC,EAAAI,EAAA09B,EAAA4D,IAEAM,EAAsBhtC,OAAAsqC,EAAA,EAAAtqC,CAAiB+sC,GACvC,GAAAC,EAAA,CAIAj8B,EAAAk8B,OACAl8B,EAAAm8B,YACA,IAAA/B,GAAAsB,EAAAE,EAAAC,GAAA,EACAxB,GAAAsB,EAAA7D,EAAAC,GAAA,EACAqE,EAAAjC,EAAAC,EAAAC,EAAAqB,EAAAC,GACAU,EAAAlC,EAAAC,EAAAC,EAAAuB,EAAA9D,GACAwE,EAAAnC,EAAAC,EAAAC,EAAAwB,EAAA9D,GAEA/3B,EAAAu8B,OAAAF,EAAA,GAAAA,EAAA,IACAr8B,EAAAw8B,OAAAJ,EAAA,GAAAA,EAAA,IACAp8B,EAAAw8B,OAAAF,EAAA,GAAAA,EAAA,IACAt8B,EAAAy8B,OAEAz8B,EAAAgC,UACAi6B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAP,EAAAC,GAEA37B,EAAA8B,UAAAg5B,EAAA,GAAAgB,EACAhB,EAAA,GAAAiB,GAEA/7B,EAAAuC,MAAAs3B,EAAA1F,GACA0F,EAAA1F,GAEAn0B,EAAAlB,UAAAm8B,EAAAtnB,OAAA,KACA3T,EAAA08B,aAGA7B,IACA76B,EAAAk8B,OAEAl8B,EAAA28B,YAAA,QACA38B,EAAA48B,UAAA,EAEAlC,EAAAc,eAAAjtB,QAAA,SAAAktB,EAAA7sC,EAAAuhB,GACA,IAAAxe,EAAA8pC,EAAA9pC,OACA+pC,GAAA/pC,EAAA,MAAA4pC,EAAA,IAAA5B,EACAgC,IAAAhqC,EAAA,MAAA4pC,EAAA,IAAA5B,EACAiC,GAAAjqC,EAAA,MAAA4pC,EAAA,IAAA5B,EACA7B,IAAAnmC,EAAA,MAAA4pC,EAAA,IAAA5B,EACAkC,GAAAlqC,EAAA,MAAA4pC,EAAA,IAAA5B,EACA5B,IAAApmC,EAAA,MAAA4pC,EAAA,IAAA5B,EAEA35B,EAAAm8B,YACAn8B,EAAAu8B,OAAAX,EAAA9D,GACA93B,EAAAw8B,OAAAd,EAAAC,GACA37B,EAAAw8B,OAAAX,EAAA9D,GACA/3B,EAAA68B,YACA78B,EAAA88B,WAGA98B,EAAA08B,WAEA18B,EAAA2T,sCCrOO,SAAAsa,EAAA/1B,EAAAC,EAAAC,EAAAC,GAIP,IAHA,IAAA0kC,EAAA,EACA/iC,EAAA9B,EAAAE,EAAAC,GACA+B,EAAAlC,EAAAE,EAAAC,EAAA,GACQF,EAAAC,EAAcD,GAAAE,EAAA,CACtB,IAAA4B,EAAA/B,EAAAC,GACAkC,EAAAnC,EAAAC,EAAA,GACA4kC,GAAA3iC,EAAAH,EAAAD,EAAAK,EACAL,EAAAC,EACAG,EAAAC,EAEA,OAAA0iC,EAAA,EAWO,SAAAhO,EAAA72B,EAAAC,EAAAqvB,EAAAnvB,GAEP,IADA,IAAAQ,EAAA,EACAjK,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAAA,CAC3C,IAAAwJ,EAAAovB,EAAA54B,GACAiK,GAAAo1B,EAAA/1B,EAAAC,EAAAC,EAAAC,GACAF,EAAAC,EAEA,OAAAS,EAWO,SAAAmkC,EAAA9kC,EAAAC,EAAA0vB,EAAAxvB,GAEP,IADA,IAAAQ,EAAA,EACAjK,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAAA,CAC5C,IAAA44B,EAAAK,EAAAj5B,GACAiK,GAAAk2B,EAAA72B,EAAAC,EAAAqvB,EAAAnvB,GACAF,EAAAqvB,IAAA14B,OAAA,GAEA,OAAA+J,EA3DAnJ,EAAA2C,EAAA6B,EAAA,sBAAA+5B,IAAAv+B,EAAA2C,EAAA6B,EAAA,sBAAA66B,IAAAr/B,EAAA2C,EAAA6B,EAAA,sBAAA8oC,kCCAAttC,EAAA2C,EAAA6B,EAAA,sBAAA+oC,IAAAvtC,EAAA2C,EAAA6B,EAAA,sBAAAgpC,IAAAxtC,EAAA2C,EAAA6B,EAAA,sBAAAipC,IAAAztC,EAAA2C,EAAA6B,EAAA,sBAAAkpC,IAAA,IAAAnS,EAAAv7B,EAAA,GAAA2tC,EAAA3tC,EAAA,IAAA4tC,EAAA5tC,EAAA,IAgBO,SAAAutC,EAAA/kC,EAAAC,EAAAC,EAAAC,EAAA1B,GACP,IAAA4mC,EAA0BtuC,OAAAg8B,EAAA,EAAAh8B,CACtBA,OAAAg8B,EAAA,EAAAh8B,GAAWiJ,EAAAC,EAAAC,EAAAC,GACf,QAAOpJ,OAAAg8B,EAAA,EAAAh8B,CAAU0H,EAAA4mC,OAGXtuC,OAAAg8B,EAAA,EAAAh8B,CAAc0H,EAAA4mC,KAGpBA,EAAA,IAAA5mC,EAAA,IACA4mC,EAAA,IAAA5mC,EAAA,KAGA4mC,EAAA,IAAA5mC,EAAA,IACA4mC,EAAA,IAAA5mC,EAAA,IAGS1H,OAAAquC,EAAA,EAAAruC,CAAciJ,EAAAC,EAAAC,EAAAC,EAOvB,SAAAmlC,EAAAC,GACA,OAAaxuC,OAAAg8B,EAAA,EAAAh8B,CAAiB0H,EAAA6mC,EAAAC,QAavB,SAAAP,EAAAhlC,EAAAC,EAAAqvB,EAAAnvB,EAAA1B,GACP,QAAA/H,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAAA,CAC3C,GAAAquC,EACA/kC,EAAAC,EAAAqvB,EAAA54B,GAAAyJ,EAAA1B,GACA,SAEAwB,EAAAqvB,EAAA54B,GAEA,SAyCO,SAAAuuC,EAAAjlC,EAAAC,EAAAqvB,EAAAnvB,EAAA1B,GACP,IA9BO,SAAAuB,EAAAC,EAAAC,EAAAC,EAAA1B,GACP,SAAAsmC,EACA/kC,EAAAC,EAAAC,EAAAC,EAAA1B,IAGM1H,OAAAouC,EAAA,EAAApuC,CAAoBiJ,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA,GAAAA,EAAA,KAGpB1H,OAAAouC,EAAA,EAAApuC,CAAoBiJ,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA,GAAAA,EAAA,KAGpB1H,OAAAouC,EAAA,EAAApuC,CAAoBiJ,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA,GAAAA,EAAA,KAGpB1H,OAAAouC,EAAA,EAAApuC,CAAoBiJ,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA,GAAAA,EAAA,KAgB1B+mC,CACAxlC,EAAAC,EAAAqvB,EAAA,GAAAnvB,EAAA1B,GACA,SAEA,OAAA6wB,EAAA14B,OACA,SAEA,QAAAF,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAmCF,EAAAgI,IAAQhI,EAC3C,GAAQK,OAAAouC,EAAA,EAAApuC,CAAwBiJ,EAAAsvB,EAAA54B,EAAA,GAAA44B,EAAA54B,GAAAyJ,EAAA1B,KAChCsmC,EAAA/kC,EAAAsvB,EAAA54B,EAAA,GAAA44B,EAAA54B,GAAAyJ,EAAA1B,GACA,SAIA,SAYO,SAAAymC,EAAAllC,EAAAC,EAAA0vB,EAAAxvB,EAAA1B,GACP,QAAA/H,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAAA,CAC5C,IAAA44B,EAAAK,EAAAj5B,GACA,GAAAuuC,EACAjlC,EAAAC,EAAAqvB,EAAAnvB,EAAA1B,GACA,SAEAwB,EAAAqvB,IAAA14B,OAAA,GAEA,wCCzIAc,EAAAD,QAAAguC,EACA/tC,EAAAD,QAAAiuC,QAAAD,EAEA,IAAAE,EAAkBnuC,EAAQ,KAE1B,SAAAiuC,EAAAG,EAAAC,GACA,KAAAr1B,gBAAAi1B,GAAA,WAAAA,EAAAG,EAAAC,GAGAr1B,KAAAs1B,YAAAzlC,KAAAE,IAAA,EAAAqlC,GAAA,GACAp1B,KAAAu1B,YAAA1lC,KAAAE,IAAA,EAAAF,KAAAk5B,KAAA,GAAA/oB,KAAAs1B,cAEAD,GACAr1B,KAAAw1B,YAAAH,GAGAr1B,KAAAhI,QAwbA,SAAAy9B,EAAAhd,EAAAid,EAAAC,GACA,IAAAA,EAAA,OAAAD,EAAAjhC,QAAAgkB,GAEA,QAAAvyB,EAAA,EAAmBA,EAAAwvC,EAAAtvC,OAAkBF,IACrC,GAAAyvC,EAAAld,EAAAid,EAAAxvC,IAAA,OAAAA,EAEA,SAIA,SAAA0vC,EAAAlqB,EAAAmqB,GACAC,EAAApqB,EAAA,EAAAA,EAAAqqB,SAAA3vC,OAAAyvC,EAAAnqB,GAIA,SAAAoqB,EAAApqB,EAAAvO,EAAA7U,EAAAutC,EAAAG,GACAA,MAAAC,EAAA,OACAD,EAAArnC,KAAAW,IACA0mC,EAAApnC,KAAAU,IACA0mC,EAAAnnC,MAAAS,IACA0mC,EAAAlnC,MAAAQ,IAEA,QAAA4mC,EAAAhwC,EAAAiX,EAA0BjX,EAAAoC,EAAOpC,IACjCgwC,EAAAxqB,EAAAqqB,SAAA7vC,GACAsG,EAAAwpC,EAAAtqB,EAAAyqB,KAAAN,EAAAK,MAGA,OAAAF,EAGA,SAAAxpC,EAAAgR,EAAAC,GAKA,OAJAD,EAAA7O,KAAAkB,KAAAC,IAAA0N,EAAA7O,KAAA8O,EAAA9O,MACA6O,EAAA5O,KAAAiB,KAAAC,IAAA0N,EAAA5O,KAAA6O,EAAA7O,MACA4O,EAAA3O,KAAAgB,KAAAE,IAAAyN,EAAA3O,KAAA4O,EAAA5O,MACA2O,EAAA1O,KAAAe,KAAAE,IAAAyN,EAAA1O,KAAA2O,EAAA3O,MACA0O,EAGA,SAAA44B,EAAA54B,EAAAC,GAAgC,OAAAD,EAAA7O,KAAA8O,EAAA9O,KAChC,SAAA0nC,EAAA74B,EAAAC,GAAgC,OAAAD,EAAA5O,KAAA6O,EAAA7O,KAEhC,SAAA0nC,EAAA94B,GAAwB,OAAAA,EAAA3O,KAAA2O,EAAA7O,OAAA6O,EAAA1O,KAAA0O,EAAA5O,MACxB,SAAA2nC,EAAA/4B,GAAwB,OAAAA,EAAA3O,KAAA2O,EAAA7O,MAAA6O,EAAA1O,KAAA0O,EAAA5O,MAiBxB,SAAA42B,EAAAhoB,EAAAC,GACA,OAAAD,EAAA7O,MAAA8O,EAAA9O,MACA6O,EAAA5O,MAAA6O,EAAA7O,MACA6O,EAAA5O,MAAA2O,EAAA3O,MACA4O,EAAA3O,MAAA0O,EAAA1O,KAGA,SAAAvB,EAAAiQ,EAAAC,GACA,OAAAA,EAAA9O,MAAA6O,EAAA3O,MACA4O,EAAA7O,MAAA4O,EAAA1O,MACA2O,EAAA5O,MAAA2O,EAAA7O,MACA8O,EAAA3O,MAAA0O,EAAA5O,KAGA,SAAAqnC,EAAAF,GACA,OACAA,WACAv9B,OAAA,EACA29B,MAAA,EACAxnC,KAAAW,IACAV,KAAAU,IACAT,MAAAS,IACAR,MAAAQ,KAOA,SAAAknC,EAAA/uB,EAAA3O,EAAAu3B,EAAAxlC,EAAAme,GAIA,IAHA,IACA/B,EADA4iB,EAAA,CAAA/wB,EAAAu3B,GAGAxG,EAAAzjC,SACAiqC,EAAAxG,EAAAvR,QACAxf,EAAA+wB,EAAAvR,QAEAztB,IAEAoc,EAAAnO,EAAAjJ,KAAAk5B,MAAAsH,EAAAv3B,GAAAjO,EAAA,GAAAA,EACAsqC,EAAA1tB,EAAAR,EAAAnO,EAAAu3B,EAAArnB,GAEA6gB,EAAAvjC,KAAAwS,EAAAmO,IAAAopB,IA1hBA4E,EAAAzuC,UAAA,CAEAgD,IAAA,WACA,OAAAwW,KAAAy2B,KAAAz2B,KAAAna,KAAA,KAGA6wC,OAAA,SAAAC,GAEA,IAAAjrB,EAAA1L,KAAAna,KACA+wC,EAAA,GACAf,EAAA71B,KAAA61B,OAEA,IAAAtoC,EAAAopC,EAAAjrB,GAAA,OAAAkrB,EAKA,IAHA,IACA1wC,EAAAgR,EAAAg/B,EAAAW,EADAC,EAAA,GAGAprB,GAAA,CACA,IAAAxlB,EAAA,EAAAgR,EAAAwU,EAAAqqB,SAAA3vC,OAAmDF,EAAAgR,EAAShR,IAE5DgwC,EAAAxqB,EAAAqqB,SAAA7vC,GAGAqH,EAAAopC,EAFAE,EAAAnrB,EAAAyqB,KAAAN,EAAAK,QAGAxqB,EAAAyqB,KAAAS,EAAAtwC,KAAA4vC,GACA1Q,EAAAmR,EAAAE,GAAA72B,KAAAy2B,KAAAP,EAAAU,GACAE,EAAAxwC,KAAA4vC,IAGAxqB,EAAAorB,EAAAxe,MAGA,OAAAse,GAGAG,SAAA,SAAAJ,GAEA,IAAAjrB,EAAA1L,KAAAna,KACAgwC,EAAA71B,KAAA61B,OAEA,IAAAtoC,EAAAopC,EAAAjrB,GAAA,SAKA,IAHA,IACAxlB,EAAAgR,EAAAg/B,EAAAW,EADAC,EAAA,GAGAprB,GAAA,CACA,IAAAxlB,EAAA,EAAAgR,EAAAwU,EAAAqqB,SAAA3vC,OAAmDF,EAAAgR,EAAShR,IAK5D,GAHAgwC,EAAAxqB,EAAAqqB,SAAA7vC,GAGAqH,EAAAopC,EAFAE,EAAAnrB,EAAAyqB,KAAAN,EAAAK,MAEA,CACA,GAAAxqB,EAAAyqB,MAAA3Q,EAAAmR,EAAAE,GAAA,SACAC,EAAAxwC,KAAA4vC,GAGAxqB,EAAAorB,EAAAxe,MAGA,UAGA0e,KAAA,SAAAnxC,GACA,IAAAA,MAAAO,OAAA,OAAA4Z,KAEA,GAAAna,EAAAO,OAAA4Z,KAAAu1B,YAAA,CACA,QAAArvC,EAAA,EAAAgR,EAAArR,EAAAO,OAA8CF,EAAAgR,EAAShR,IACvD8Z,KAAAi3B,OAAApxC,EAAAK,IAEA,OAAA8Z,KAIA,IAAA0L,EAAA1L,KAAAk3B,OAAArxC,EAAAyF,QAAA,EAAAzF,EAAAO,OAAA,KAEA,GAAA4Z,KAAAna,KAAAkwC,SAAA3vC,OAIS,GAAA4Z,KAAAna,KAAA2S,SAAAkT,EAAAlT,OAETwH,KAAAm3B,WAAAn3B,KAAAna,KAAA6lB,OAES,CACT,GAAA1L,KAAAna,KAAA2S,OAAAkT,EAAAlT,OAAA,CAEA,IAAA4+B,EAAAp3B,KAAAna,KACAma,KAAAna,KAAA6lB,EACAA,EAAA0rB,EAIAp3B,KAAAq3B,QAAA3rB,EAAA1L,KAAAna,KAAA2S,OAAAkT,EAAAlT,OAAA,WAfAwH,KAAAna,KAAA6lB,EAkBA,OAAA1L,MAGAi3B,OAAA,SAAAxe,GAEA,OADAA,GAAAzY,KAAAq3B,QAAA5e,EAAAzY,KAAAna,KAAA2S,OAAA,GACAwH,MAGAhI,MAAA,WAEA,OADAgI,KAAAna,KAAAowC,EAAA,IACAj2B,MAGAgI,OAAA,SAAAyQ,EAAAkd,GACA,IAAAld,EAAA,OAAAzY,KASA,IAPA,IAIA9Z,EAAAolB,EAAA/C,EAAA+uB,EAJA5rB,EAAA1L,KAAAna,KACA8wC,EAAA32B,KAAA61B,OAAApd,GACA8e,EAAA,GACAC,EAAA,GAIA9rB,GAAA6rB,EAAAnxC,QAAA,CASA,GAPAslB,IACAA,EAAA6rB,EAAAjf,MACAhN,EAAAisB,IAAAnxC,OAAA,GACAF,EAAAsxC,EAAAlf,MACAgf,GAAA,GAGA5rB,EAAAyqB,OAGA,KAFA5tB,EAAAktB,EAAAhd,EAAA/M,EAAAqqB,SAAAJ,IAOA,OAHAjqB,EAAAqqB,SAAArhC,OAAA6T,EAAA,GACAgvB,EAAAjxC,KAAAolB,GACA1L,KAAAy3B,UAAAF,GACAv3B,KAIAs3B,GAAA5rB,EAAAyqB,OAAA3Q,EAAA9Z,EAAAirB,GAOarrB,GACbplB,IACAwlB,EAAAJ,EAAAyqB,SAAA7vC,GACAoxC,GAAA,GAEa5rB,EAAA,MAXb6rB,EAAAjxC,KAAAolB,GACA8rB,EAAAlxC,KAAAJ,GACAA,EAAA,EACAolB,EAAAI,EACAA,IAAAqqB,SAAA,IAUA,OAAA/1B,MAGA61B,OAAA,SAAApd,GAA6B,OAAAA,GAE7Bif,YAAAtB,EACAuB,YAAAtB,EAEAuB,OAAA,WAAyB,OAAA53B,KAAAna,MAEzBgyC,SAAA,SAAAhyC,GAEA,OADAma,KAAAna,OACAma,MAGAy2B,KAAA,SAAA/qB,EAAAkrB,GAEA,IADA,IAAAE,EAAA,GACAprB,GACAA,EAAAyqB,KAAAS,EAAAtwC,KAAAqM,MAAAikC,EAAAlrB,EAAAqqB,UACAe,EAAAxwC,KAAAqM,MAAAmkC,EAAAprB,EAAAqqB,UAEArqB,EAAAorB,EAAAxe,MAEA,OAAAse,GAGAM,OAAA,SAAAxB,EAAA58B,EAAAu3B,EAAA73B,GAEA,IAEAkT,EAFAosB,EAAAzH,EAAAv3B,EAAA,EACAi/B,EAAA/3B,KAAAs1B,YAGA,GAAAwC,GAAAC,EAIA,OADAnC,EADAlqB,EAAAuqB,EAAAP,EAAApqC,MAAAwN,EAAAu3B,EAAA,IACArwB,KAAA61B,QACAnqB,EAGAlT,IAEAA,EAAA3I,KAAAk5B,KAAAl5B,KAAA4T,IAAAq0B,GAAAjoC,KAAA4T,IAAAs0B,IAGAA,EAAAloC,KAAAk5B,KAAA+O,EAAAjoC,KAAA2jB,IAAAukB,EAAAv/B,EAAA,MAGAkT,EAAAuqB,EAAA,KACAE,MAAA,EACAzqB,EAAAlT,SAIA,IAEAtS,EAAA+W,EAAA+6B,EAAAC,EAFAC,EAAAroC,KAAAk5B,KAAA+O,EAAAC,GACAI,EAAAD,EAAAroC,KAAAk5B,KAAAl5B,KAAA4zB,KAAAsU,IAKA,IAFAvB,EAAAd,EAAA58B,EAAAu3B,EAAA8H,EAAAn4B,KAAA03B,aAEAxxC,EAAA4S,EAAsB5S,GAAAmqC,EAAYnqC,GAAAiyC,EAMlC,IAFA3B,EAAAd,EAAAxvC,EAFA8xC,EAAAnoC,KAAAC,IAAA5J,EAAAiyC,EAAA,EAAA9H,GAEA6H,EAAAl4B,KAAA23B,aAEA16B,EAAA/W,EAAuB+W,GAAA+6B,EAAa/6B,GAAAi7B,EAEpCD,EAAApoC,KAAAC,IAAAmN,EAAAi7B,EAAA,EAAAF,GAGAtsB,EAAAqqB,SAAAzvC,KAAA0Z,KAAAk3B,OAAAxB,EAAAz4B,EAAAg7B,EAAAz/B,EAAA,IAMA,OAFAo9B,EAAAlqB,EAAA1L,KAAA61B,QAEAnqB,GAGA0sB,eAAA,SAAAzB,EAAAjrB,EAAA2sB,EAAAd,GAIA,IAFA,IAAArxC,EAAAgR,EAAAg/B,EAAAoC,EAAAnoC,EAAAooC,EAAAC,EAAAC,EAsPAj7B,EAAAC,EAnPA85B,EAAAjxC,KAAAolB,IAEAA,EAAAyqB,MAAAoB,EAAAnxC,OAAA,IAAAiyC,GAHA,CAOA,IAFAG,EAAAC,EAAAnpC,IAEApJ,EAAA,EAAAgR,EAAAwU,EAAAqqB,SAAA3vC,OAAmDF,EAAAgR,EAAShR,IAE5DiK,EAAAmmC,EADAJ,EAAAxqB,EAAAqqB,SAAA7vC,IA4OAsX,EA1OAm5B,EA0OAl5B,EA1OAy4B,GAAAqC,GA2OA1oC,KAAAE,IAAA0N,EAAA5O,KAAA2O,EAAA3O,MAAAgB,KAAAC,IAAA2N,EAAA9O,KAAA6O,EAAA7O,QACAkB,KAAAE,IAAA0N,EAAA3O,KAAA0O,EAAA1O,MAAAe,KAAAC,IAAA2N,EAAA7O,KAAA4O,EAAA5O,OA5OAuB,GAGAsoC,GACAA,EAAAF,EACAC,EAAAroC,EAAAqoC,EAAAroC,EAAAqoC,EACAF,EAAApC,GAEiBqC,IAAAE,GAEjBtoC,EAAAqoC,IACAA,EAAAroC,EACAmoC,EAAApC,GAKAxqB,EAAA4sB,GAAA5sB,EAAAqqB,SAAA,GAGA,OAAArqB,GAGA2rB,QAAA,SAAA5e,EAAA4f,EAAAK,GAEA,IAAA7C,EAAA71B,KAAA61B,OACAc,EAAA+B,EAAAjgB,EAAAod,EAAApd,GACAkgB,EAAA,GAGAjtB,EAAA1L,KAAAo4B,eAAAzB,EAAA32B,KAAAna,KAAAwyC,EAAAM,GAOA,IAJAjtB,EAAAqqB,SAAAzvC,KAAAmyB,GACAjsB,EAAAkf,EAAAirB,GAGA0B,GAAA,GACAM,EAAAN,GAAAtC,SAAA3vC,OAAA4Z,KAAAs1B,aACAt1B,KAAA44B,OAAAD,EAAAN,GACAA,IAKAr4B,KAAA64B,oBAAAlC,EAAAgC,EAAAN,IAIAO,OAAA,SAAAD,EAAAN,GAEA,IAAA3sB,EAAAitB,EAAAN,GACAN,EAAArsB,EAAAqqB,SAAA3vC,OACAqD,EAAAuW,KAAAu1B,YAEAv1B,KAAA84B,iBAAAptB,EAAAjiB,EAAAsuC,GAEA,IAAAgB,EAAA/4B,KAAAg5B,kBAAAttB,EAAAjiB,EAAAsuC,GAEA3sB,EAAA6qB,EAAAvqB,EAAAqqB,SAAArhC,OAAAqkC,EAAArtB,EAAAqqB,SAAA3vC,OAAA2yC,IACA3tB,EAAA5S,OAAAkT,EAAAlT,OACA4S,EAAA+qB,KAAAzqB,EAAAyqB,KAEAP,EAAAlqB,EAAA1L,KAAA61B,QACAD,EAAAxqB,EAAApL,KAAA61B,QAEAwC,EAAAM,EAAAN,EAAA,GAAAtC,SAAAzvC,KAAA8kB,GACApL,KAAAm3B,WAAAzrB,EAAAN,IAGA+rB,WAAA,SAAAzrB,EAAAN,GAEApL,KAAAna,KAAAowC,EAAA,CAAAvqB,EAAAN,IACApL,KAAAna,KAAA2S,OAAAkT,EAAAlT,OAAA,EACAwH,KAAAna,KAAAswC,MAAA,EACAP,EAAA51B,KAAAna,KAAAma,KAAA61B,SAGAmD,kBAAA,SAAAttB,EAAAjiB,EAAAsuC,GAEA,IAAA7xC,EAAA+yC,EAAAC,EAAAC,EAAAhpC,EAAAipC,EAAAZ,EAAAjwB,EA+JA/K,EAAAC,EACA9O,EACAC,EACAC,EACAC,EA/JA,IAFAsqC,EAAAZ,EAAAlpC,IAEApJ,EAAAuD,EAAmBvD,GAAA6xC,EAAAtuC,EAAYvD,IAC/B+yC,EAAAnD,EAAApqB,EAAA,EAAAxlB,EAAA8Z,KAAA61B,QACAqD,EAAApD,EAAApqB,EAAAxlB,EAAA6xC,EAAA/3B,KAAA61B,QAyJAr4B,EAvJAy7B,EAuJAx7B,EAvJAy7B,EAwJAvqC,SACAC,SACAC,SACAC,SAHAH,EAAAkB,KAAAE,IAAAyN,EAAA7O,KAAA8O,EAAA9O,MACAC,EAAAiB,KAAAE,IAAAyN,EAAA5O,KAAA6O,EAAA7O,MACAC,EAAAgB,KAAAC,IAAA0N,EAAA3O,KAAA4O,EAAA5O,MACAC,EAAAe,KAAAC,IAAA0N,EAAA1O,KAAA2O,EAAA3O,MA3JAqqC,EA6JAtpC,KAAAE,IAAA,EAAAlB,EAAAF,GACAkB,KAAAE,IAAA,EAAAjB,EAAAF,GA7JAuB,EAAAmmC,EAAA2C,GAAA3C,EAAA4C,GAGAC,EAAAC,GACAA,EAAAD,EACA5wB,EAAAriB,EAEAsyC,EAAAroC,EAAAqoC,EAAAroC,EAAAqoC,GAEaW,IAAAC,GAEbjpC,EAAAqoC,IACAA,EAAAroC,EACAoY,EAAAriB,GAKA,OAAAqiB,GAIAuwB,iBAAA,SAAAptB,EAAAjiB,EAAAsuC,GAEA,IAAAL,EAAAhsB,EAAAyqB,KAAAn2B,KAAA03B,YAAAtB,EACAuB,EAAAjsB,EAAAyqB,KAAAn2B,KAAA23B,YAAAtB,EACAr2B,KAAAq5B,eAAA3tB,EAAAjiB,EAAAsuC,EAAAL,GACA13B,KAAAq5B,eAAA3tB,EAAAjiB,EAAAsuC,EAAAJ,IAIAjsB,EAAAqqB,SAAAvtB,KAAAkvB,IAIA2B,eAAA,SAAA3tB,EAAAjiB,EAAAsuC,EAAA/uB,GAEA0C,EAAAqqB,SAAAvtB,KAAAQ,GAEA,IAIA9iB,EAAAgwC,EAJAL,EAAA71B,KAAA61B,OACAyD,EAAAxD,EAAApqB,EAAA,EAAAjiB,EAAAosC,GACA0D,EAAAzD,EAAApqB,EAAAqsB,EAAAtuC,EAAAsuC,EAAAlC,GACAl9B,EAAA49B,EAAA+C,GAAA/C,EAAAgD,GAGA,IAAArzC,EAAAuD,EAAmBvD,EAAA6xC,EAAAtuC,EAAWvD,IAC9BgwC,EAAAxqB,EAAAqqB,SAAA7vC,GACAsG,EAAA8sC,EAAA5tB,EAAAyqB,KAAAN,EAAAK,MACAv9B,GAAA49B,EAAA+C,GAGA,IAAApzC,EAAA6xC,EAAAtuC,EAAA,EAA2BvD,GAAAuD,EAAQvD,IACnCgwC,EAAAxqB,EAAAqqB,SAAA7vC,GACAsG,EAAA+sC,EAAA7tB,EAAAyqB,KAAAN,EAAAK,MACAv9B,GAAA49B,EAAAgD,GAGA,OAAA5gC,GAGAkgC,oBAAA,SAAAlC,EAAAY,EAAAc,GAEA,QAAAnyC,EAAAmyC,EAA2BnyC,GAAA,EAAQA,IACnCsG,EAAA+qC,EAAArxC,GAAAywC,IAIAc,UAAA,SAAAF,GAEA,QAAAiC,EAAAtzC,EAAAqxC,EAAAnxC,OAAA,EAA+CF,GAAA,EAAQA,IACvD,IAAAqxC,EAAArxC,GAAA6vC,SAAA3vC,OACAF,EAAA,GACAszC,EAAAjC,EAAArxC,EAAA,GAAA6vC,UACArhC,OAAA8kC,EAAA/kC,QAAA8iC,EAAArxC,IAAA,GAEiB8Z,KAAAhI,QAEJ49B,EAAA2B,EAAArxC,GAAA8Z,KAAA61B,SAIbL,YAAA,SAAAH,GAOA,IAAAoE,EAAA,wBAEAz5B,KAAA03B,YAAA,IAAAgC,SAAA,QAAAD,EAAAzkB,KAAAqgB,EAAA,KACAr1B,KAAA23B,YAAA,IAAA+B,SAAA,QAAAD,EAAAzkB,KAAAqgB,EAAA,KAEAr1B,KAAA61B,OAAA,IAAA6D,SAAA,IACA,kBAAqBrE,EAAA,GACrB,YAAAA,EAAA,GACA,YAAAA,EAAA,GACA,YAAAA,EAAA,yCCtcA,IAAA9S,EAAAv7B,EAAA,GAAA2yC,EAAA3yC,EAAA,GAAA4yC,EAAA5yC,EAAA,IAAA6yC,EAAA7yC,EAAA,IAAA8yC,EAAA9yC,EAAA,GAeAi/B,EAAA,SAAAhK,GACA,SAAAgK,EAAAj4B,EAAA+uB,GACAd,EAAAv1B,KAAAsZ,MACAA,KAAA8c,eAAA9uB,EAAA+uB,GAmFA,OAhFAd,IAAAgK,EAAAljB,UAAAkZ,GACAgK,EAAAz/B,UAAAD,OAAAmE,OAAAuxB,KAAAz1B,WACAy/B,EAAAz/B,UAAAwc,YAAAijB,EAQAA,EAAAz/B,UAAAmF,MAAA,WAEA,OADA,IAAAs6B,EAAAjmB,KAAAxQ,gBAAAlE,QAAA0U,KAAAkc,SAOA+J,EAAAz/B,UAAA+zB,eAAA,SAAAnsB,EAAAC,EAAAmsB,EAAAC,GACA,IAAAjrB,EAAAwQ,KAAAxQ,gBACA4M,EAA0B7V,OAAAuzC,EAAA,EAAAvzC,CAAS6H,EAAAC,EAAAmB,EAAA,GAAAA,EAAA,IACnC,GAAA4M,EAAAqe,EAAA,CAEA,IADA,IAAA9qB,EAAAqQ,KAAArQ,OACAzJ,EAAA,EAAqBA,EAAAyJ,IAAYzJ,EACjCs0B,EAAAt0B,GAAAsJ,EAAAtJ,GAGA,OADAs0B,EAAAp0B,OAAAuJ,EACAyM,EAEA,OAAAqe,GAUAwL,EAAAz/B,UAAA41B,eAAA,WACA,OAAApc,KAAAxQ,gBAAAwQ,KAAAxQ,gBAAAlE,QAAA,IAMA26B,EAAAz/B,UAAAs0B,cAAA,SAAA7sB,GACA,OAAW1H,OAAAg8B,EAAA,EAAAh8B,CAA4ByZ,KAAAxQ,gBAAAvB,IAOvCg4B,EAAAz/B,UAAA60B,QAAA,WACA,OAAWse,EAAA,EAAYn+B,OAOvByqB,EAAAz/B,UAAA80B,iBAAA,SAAArtB,GACA,OAAW1H,OAAAg8B,EAAA,EAAAh8B,CAAU0H,EAAA+R,KAAAxQ,gBAAA,GAAAwQ,KAAAxQ,gBAAA,KAOrBy2B,EAAAz/B,UAAAs2B,eAAA,SAAA9uB,EAAA+uB,GACA/c,KAAAgd,UAAAD,EAAA/uB,EAAA,GACAgS,KAAAxQ,kBACAwQ,KAAAxQ,gBAAA,IAEAwQ,KAAAxQ,gBAAApJ,OAAkCG,OAAAszC,EAAA,EAAAtzC,CAClCyZ,KAAAxQ,gBAAA,EAAAxB,EAAAgS,KAAArQ,QACAqQ,KAAAmd,WAGA8I,EAtFA,CAuFE2T,EAAA,GAGapuC,EAAA,kCCzGfxE,EAAA2C,EAAA6B,EAAA,sBAAAuuC,IAAA/yC,EAAA2C,EAAA6B,EAAA,sBAAAiE,IAAA,IAAAszB,EAAA/7B,EAAA,GA+BOgzC,GA/BPhzC,EAAA,GA+BO,WAYA,SAAA+yC,EAAAr7B,EAAAM,EAAAi7B,GACP,IAAAlT,EAAAkT,GAAAD,EACAE,EAAa3zC,OAAAw8B,EAAA,EAAAx8B,CAASmY,EAAA,IACtBy7B,EAAa5zC,OAAAw8B,EAAA,EAAAx8B,CAASyY,EAAA,IACtBo7B,GAAAD,EAAAD,GAAA,EACAG,EAAoB9zC,OAAAw8B,EAAA,EAAAx8B,CAASyY,EAAA,GAAAN,EAAA,MAC7BlB,EAAA3N,KAAAmB,IAAAopC,GAAAvqC,KAAAmB,IAAAopC,GACAvqC,KAAAmB,IAAAqpC,GAAAxqC,KAAAmB,IAAAqpC,GACAxqC,KAAAiB,IAAAopC,GAAArqC,KAAAiB,IAAAqpC,GACA,SAAApT,EAAAl3B,KAAAyqC,MAAAzqC,KAAA4zB,KAAAjmB,GAAA3N,KAAA4zB,KAAA,EAAAjmB,IA8LO,SAAA/N,EAAAiP,EAAAozB,EAAAyI,EAAAN,GACP,IAAAlT,EAAAkT,GAAAD,EACAE,EAAa3zC,OAAAw8B,EAAA,EAAAx8B,CAASmY,EAAA,IACtB87B,EAAaj0C,OAAAw8B,EAAA,EAAAx8B,CAASmY,EAAA,IACtB+7B,EAAA3I,EAAA/K,EACA2T,EAAA7qC,KAAA8qC,KACA9qC,KAAAmB,IAAAkpC,GAAArqC,KAAAiB,IAAA2pC,GACA5qC,KAAAiB,IAAAopC,GAAArqC,KAAAmB,IAAAypC,GAAA5qC,KAAAiB,IAAAypC,IACAK,EAAAJ,EAAA3qC,KAAAyqC,MACAzqC,KAAAmB,IAAAupC,GAAA1qC,KAAAmB,IAAAypC,GAAA5qC,KAAAiB,IAAAopC,GACArqC,KAAAiB,IAAA2pC,GAAA5qC,KAAAmB,IAAAkpC,GAAArqC,KAAAmB,IAAA0pC,IACA,OAAUn0C,OAAAw8B,EAAA,EAAAx8B,CAASq0C,GAAOr0C,OAAAw8B,EAAA,EAAAx8B,CAASm0C,mCC7PnC,IAAAG,EAAA7zC,EAAA,IAAA8zC,EAAA9zC,EAAA,IAAA8gC,EAAA9gC,EAAA,GAgCA+zC,EAAA,SAAAC,GACA,SAAAD,EAAAllB,GACA,IAAA9V,EAAA8V,GAAA,GAEAolB,EAAAl7B,EAAAk7B,UAAAl7B,EAAAk7B,UAA4DH,EAAA,EAE5DE,EAAAt0C,KAAAsZ,KAAA,CACAi7B,YACAC,UAAAn7B,EAAAm7B,WAAA,cACAC,aAOAn7B,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAMApR,KAAAq7B,UAAAhyC,IAAA0W,EAAAu7B,KAAAv7B,EAAAu7B,IAOA,OAJAN,IAAAD,EAAAh4B,UAAAi4B,GACAD,EAAAv0C,UAAAD,OAAAmE,OAAAswC,KAAAx0C,WACAu0C,EAAAv0C,UAAAwc,YAAA+3B,EAEAA,EA7BA,CAhCA/zC,EAAA,IA8DE,GAMF,SAAAm0C,IACA,IAAAtqB,EAAA7Q,KAAA0Q,SACAI,EAAsDD,EAAA0qB,UACtD3qC,EAAmDigB,EAAA+e,UACnD3hC,EAAA+R,KAAAw7B,cAAAr6B,YAEA,GAAAnB,KAAAq7B,KAAA,CACA,IAAAI,EAAA3qB,EAAA4qB,gBAAA9qC,GACA+qC,EAAyBp1C,OAAAuhC,EAAA,EAAAvhC,CAA6B,CACtDsqB,EAAA+qB,uBAAiCr1C,OAAAuhC,EAAA,EAAAvhC,CAAa0H,IAC9C4iB,EAAA+qB,uBAAiCr1C,OAAAuhC,EAAA,EAAAvhC,CAAW0H,MAC5C4tC,EAAA/qB,EAAAgrB,uBAAAH,EAAA/qC,GAEIrK,OAAAuhC,EAAA,EAAAvhC,CAAek1C,EAAA,EAAAI,GACnB5tC,EAAAwtC,EAGA,IAAA/qC,EAAAogB,EAAAe,oBACAf,EAAAgrB,uBAAA7tC,EAAA2C,IAEAH,EAAelK,OAAAuhC,EAAA,EAAAvhC,CAAS0H,GACxBwC,EAAAqgB,EAAAI,gBAAAzgB,GAEAqgB,EAAAK,QAAA,CACAzgB,aACAD,SACA2gB,SAAApR,KAAAo7B,UACA/pB,OAAYwpB,EAAA,IAKGrvC,EAAA,sFC6BAuwC,EA1HF,SAAA7d,GACb,SAAA8d,EAAAd,GACAhd,EAAAx3B,KAAAsZ,MAMAA,KAAAi8B,UAAA,KAMAj8B,KAAAk8B,SAA8Cr0C,SAAAG,cAAA,OAC9CgY,KAAAk8B,SAAAxjC,MAAAG,SAAA,WACAmH,KAAAk8B,SAAAhB,UAAA,UAAAA,EAMAl7B,KAAAsQ,KAAA,KAMAtQ,KAAAm8B,YAAA,KAMAn8B,KAAAo8B,UAAA,KAoFA,OAhFAle,IAAA8d,EAAAj5B,UAAAmb,GACA8d,EAAAx1C,UAAAD,OAAAmE,OAAAwzB,KAAA13B,WACAw1C,EAAAx1C,UAAAwc,YAAAg5B,EAKAA,EAAAx1C,UAAAg4B,gBAAA,WACAxe,KAAA4Q,OAAA,OAMAorB,EAAAx1C,UAAA61C,QAAA,WACA,IAAAC,EAAAt8B,KAAAm8B,YACAI,EAAAv8B,KAAAo8B,UAEA1jC,EAAAsH,KAAAk8B,SAAAxjC,MACAA,EAAAI,KAAAjJ,KAAAC,IAAAwsC,EAAA,GAAAC,EAAA,IAFA,KAGA7jC,EAAA8jC,IAAA3sC,KAAAC,IAAAwsC,EAAA,GAAAC,EAAA,IAHA,KAIA7jC,EAAAb,MAAAhI,KAAAiN,IAAAy/B,EAAA,GAAAD,EAAA,IAJA,KAKA5jC,EAAAF,OAAA3I,KAAAiN,IAAAy/B,EAAA,GAAAD,EAAA,IALA,MAWAN,EAAAx1C,UAAAoqB,OAAA,SAAAC,GACA,GAAA7Q,KAAAsQ,KAAA,CACAtQ,KAAAsQ,KAAAmsB,sBAAAxjC,YAAA+G,KAAAk8B,UACA,IAAAxjC,EAAAsH,KAAAk8B,SAAAxjC,MACAA,EAAAI,KAAAJ,EAAA8jC,IAAA9jC,EAAAb,MAAAa,EAAAF,OAAA,UAEAwH,KAAAsQ,KAAAO,EACA7Q,KAAAsQ,MACAtQ,KAAAsQ,KAAAmsB,sBAAAlzC,YAAAyW,KAAAk8B,WAQAF,EAAAx1C,UAAAk2C,UAAA,SAAAJ,EAAAC,GACAv8B,KAAAm8B,YAAAG,EACAt8B,KAAAo8B,UAAAG,EACAv8B,KAAA28B,yBACA38B,KAAAq8B,WAMAL,EAAAx1C,UAAAm2C,uBAAA,WACA,IAAAL,EAAAt8B,KAAAm8B,YACAI,EAAAv8B,KAAAo8B,UAOApuC,EANA,CACAsuC,EACA,CAAAA,EAAA,GAAAC,EAAA,IACAA,EACA,CAAAA,EAAA,GAAAD,EAAA,KAEAzrB,IAAA7Q,KAAAsQ,KAAAssB,uBAAA58B,KAAAsQ,MAEAtiB,EAAA,GAAAA,EAAA,GAAA1C,QACA0U,KAAAi8B,UAGAj8B,KAAAi8B,UAAAnf,eAAA,CAAA9uB,IAFAgS,KAAAi8B,UAAA,IAA2BjX,EAAA,EAAO,CAAAh3B,KASlCguC,EAAAx1C,UAAAg1C,YAAA,WACA,OAAAx7B,KAAAi8B,WAGAD,EAtHa,CAuHXa,EAAA,GCxFFC,EAMA,WANAA,EAaA,UAbAA,EAoBA,SASAC,EAAA,SAAApvB,GACA,SAAAovB,EAAAh0C,EAAAyF,EAAAge,GACAmB,EAAAjnB,KAAAsZ,KAAAjX,GAQAiX,KAAAxR,aAOAwR,KAAAwM,kBAQA,OAJAmB,IAAAovB,EAAAh6B,UAAA4K,GACAovB,EAAAv2C,UAAAD,OAAAmE,OAAAijB,KAAAnnB,WACAu2C,EAAAv2C,UAAAwc,YAAA+5B,EAEAA,EAzBA,CA0BEpvB,EAAA,GAiBEqvB,EAAO,SAAApnB,GACX,SAAAolB,EAAAnlB,GAEAD,EAAAlvB,KAAAsZ,MAEA,IAAAD,EAAA8V,GAAA,GAMA7V,KAAAi9B,KAAA,IAAoBlB,EAASh8B,EAAAm7B,WAAA,cAM7Bl7B,KAAAk9B,cAAA7zC,IAAA0W,EAAAy4B,QAAAz4B,EAAAy4B,QAAA,GAOAx4B,KAAAm9B,UAAAp9B,EAAAo7B,SAAAp7B,EAAAo7B,SAA2DiC,EAAA,EAM3Dp9B,KAAAm8B,YAAA,KAMAn8B,KAAAq9B,WAAAt9B,EAAAk7B,UAAAl7B,EAAAk7B,UAA8DA,EAAA,EAM9Dj7B,KAAAs9B,iBAAAv9B,EAAAw9B,gBACAx9B,EAAAw9B,gBAAAv9B,KAAAw9B,uBAoFA,OAjFA5nB,IAAAolB,EAAAj4B,UAAA6S,GACAolB,EAAAx0C,UAAAD,OAAAmE,OAAAkrB,KAAApvB,WACAw0C,EAAAx0C,UAAAwc,YAAAg4B,EAWAA,EAAAx0C,UAAAg3C,uBAAA,SAAAhxB,EAAA8vB,EAAAC,GACA,IAAA1kC,EAAA0kC,EAAA,GAAAD,EAAA,GACA9jC,EAAA+jC,EAAA,GAAAD,EAAA,GACA,OAAAzkC,IAAAW,KAAAwH,KAAAk9B,UAQAlC,EAAAx0C,UAAAg1C,YAAA,WACA,OAAAx7B,KAAAi9B,KAAAzB,eAMAR,EAAAx0C,UAAAuvB,gBAAA,SAAAvJ,GACSjmB,OAAA00C,EAAA,EAAA10C,CAASimB,KAIlBxM,KAAAi9B,KAAAP,UAAA18B,KAAAm8B,YAAA3vB,EAAAixB,OAEAz9B,KAAAsO,cAAA,IAAAyuB,EAAAD,EACAtwB,EAAAhe,WAAAge,MAMAwuB,EAAAx0C,UAAAyvB,cAAA,SAAAzJ,GACA,OAASjmB,OAAA00C,EAAA,EAAA10C,CAASimB,KAIlBxM,KAAAi9B,KAAArsB,OAAA,MAEA5Q,KAAAs9B,iBAAA9wB,EAAAxM,KAAAm8B,YAAA3vB,EAAAixB,SACAz9B,KAAAm9B,UAAA3wB,GACAxM,KAAAsO,cAAA,IAAAyuB,EAAAD,EACAtwB,EAAAhe,WAAAge,MAEA,IAMAwuB,EAAAx0C,UAAAsvB,gBAAA,SAAAtJ,GACA,QAASjmB,OAAA00C,EAAA,EAAA10C,CAASimB,QAIVjmB,OAAA00C,EAAA,EAAA10C,CAAiBimB,KACzBxM,KAAAq9B,WAAA7wB,MACAxM,KAAAm8B,YAAA3vB,EAAAixB,MACAz9B,KAAAi9B,KAAArsB,OAAApE,EAAAqE,KACA7Q,KAAAi9B,KAAAP,UAAA18B,KAAAm8B,YAAAn8B,KAAAm8B,aACAn8B,KAAAsO,cAAA,IAAAyuB,EAAAD,EACAtwB,EAAAhe,WAAAge,KACA,KAMAwuB,EA/HW,CAgIT0C,EAAA,GAGalyC,EAAA,kCCjPf,IAAA6hB,EAAArmB,EAAA,GAUA22C,EAAA,SAAAx0C,GACA,SAAAw0C,EAAAz9B,GACA,IACA09B,EAAA,oDADsB,WAAPvwB,EAAA,EAAuBA,EAAA,EAAO,IAASA,EAAA,EAAO6G,MAAA,SAE7D,gBAAAhU,EAAA,gBAEA/W,EAAAzC,KAAAsZ,KAAA49B,GAUA59B,KAAAE,OAKAF,KAAApW,KAAA,iBAGAoW,KAAA49B,UAOA,OAJAz0C,IAAAw0C,EAAA56B,UAAA5Z,GACAw0C,EAAAn3C,UAAAD,OAAAmE,OAAAvB,KAAA3C,WACAm3C,EAAAn3C,UAAAwc,YAAA26B,EAEAA,EA/BA,CAgCCx0C,OAEcqC,EAAA,kCC5Cf,IAAAq0B,EAAA74B,EAAA,GAAA62C,EAAA72C,EAAA,IAAA82C,EAAA92C,EAAA,GAkBA8mB,EAAA,SAAAiwB,GACA,SAAAjwB,IAEAiwB,EAAAr3C,KAAAsZ,MAMAA,KAAAg+B,UAAA,EAwFA,OApFAD,IAAAjwB,EAAA/K,UAAAg7B,GACAjwB,EAAAtnB,UAAAD,OAAAmE,OAAAqzC,KAAAv3C,WACAsnB,EAAAtnB,UAAAwc,YAAA8K,EAMAA,EAAAtnB,UAAA22B,QAAA,aACAnd,KAAAg+B,UACAh+B,KAAAsO,cAAuBwvB,EAAA,EAAS7jC,SAShC6T,EAAAtnB,UAAAu0B,YAAA,WACA,OAAA/a,KAAAg+B,WAYAlwB,EAAAtnB,UAAAy3C,GAAA,SAAAl1C,EAAAsK,GACA,GAAA+J,MAAA2K,QAAAhf,GAAA,CAGA,IAFA,IAAAmO,EAAAnO,EAAA3C,OACA8N,EAAA,IAAAkJ,MAAAlG,GACAhR,EAAA,EAAqBA,EAAAgR,IAAShR,EAC9BgO,EAAAhO,GAAkBK,OAAAs5B,EAAA,EAAAt5B,CAAMyZ,KAAAjX,EAAA7C,GAAAmN,GAExB,OAAAa,EAEA,OAAa3N,OAAAs5B,EAAA,EAAAt5B,CAAMyZ,KAAyB,EAAA3M,IAa5Cya,EAAAtnB,UAAA03C,KAAA,SAAAn1C,EAAAsK,GACA,GAAA+J,MAAA2K,QAAAhf,GAAA,CAGA,IAFA,IAAAmO,EAAAnO,EAAA3C,OACA8N,EAAA,IAAAkJ,MAAAlG,GACAhR,EAAA,EAAqBA,EAAAgR,IAAShR,EAC9BgO,EAAAhO,GAAkBK,OAAAs5B,EAAA,EAAAt5B,CAAUyZ,KAAAjX,EAAA7C,GAAAmN,GAE5B,OAAAa,EAEA,OAAa3N,OAAAs5B,EAAA,EAAAt5B,CAAUyZ,KAAyB,EAAA3M,IAUhDya,EAAAtnB,UAAA23C,GAAA,SAAAp1C,EAAAsK,GACA,GAAA+J,MAAA2K,QAAAhf,GACA,QAAA7C,EAAA,EAAAgI,EAAAnF,EAAA3C,OAAuCF,EAAAgI,IAAQhI,EACvCK,OAAAs5B,EAAA,EAAAt5B,CAAQyZ,KAAAjX,EAAA7C,GAAAmN,QAIV9M,OAAAs5B,EAAA,EAAAt5B,CAAQyZ,KAAyB,EAAA3M,IAIvCya,EAjGA,CAkGE+vB,EAAA,GAoBaryC,EAAA,kCCxIf,IAAA6hB,EAAArmB,EAAA,GAAAo3C,EAAAp3C,EAAA,IAAAkpB,EAAAlpB,EAAA,IAAAmpB,EAAAnpB,EAAA,GAAAymB,EAAAzmB,EAAA,IAqCAu5B,EAAA,SAAA1S,GACA,SAAA0S,EAAAxgB,GAEA8N,EAAAnnB,KAAAsZ,MAKA,IAAAq+B,EAAqB93C,OAAAknB,EAAA,EAAAlnB,CAAM,GAAGwZ,GAC9Bs+B,EAAenuB,EAAA,EAAa4C,cAC5BzpB,IAAA0W,EAAAxG,QAAAwG,EAAAxG,QAAA,EACA8kC,EAAenuB,EAAA,EAAa6C,cAC5B1pB,IAAA0W,EAAAiiB,SAAAjiB,EAAAiiB,QACAqc,EAAenuB,EAAA,EAAa8C,SAAAjT,EAAA4hB,OAC5B0c,EAAenuB,EAAA,EAAa+C,qBAC5B5pB,IAAA0W,EAAAmiB,cAAAniB,EAAAmiB,cAAA5yB,IACA+uC,EAAenuB,EAAA,EAAagD,qBAC5B7pB,IAAA0W,EAAAkiB,cAAAliB,EAAAkiB,cAAA,EAEAjiB,KAAAiO,cAAAowB,GAMAr+B,KAAAs+B,OAAA,KAOAt+B,KAAAjX,KA+LA,OA3LA8kB,IAAA0S,EAAAxd,UAAA8K,GACA0S,EAAA/5B,UAAAD,OAAAmE,OAAAmjB,KAAArnB,WACA+5B,EAAA/5B,UAAAwc,YAAAud,EAMAA,EAAA/5B,UAAA60B,QAAA,WACA,OAAArb,KAAAjX,MAMAw3B,EAAA/5B,UAAA06B,cAAA,WAEA,IAAAqd,EAAAv+B,KAAAs+B,QAA4C,CAC5CE,MAAAx+B,KACAyhB,SAAA,GAWA,OATA8c,EAAAhlC,QAAoBhT,OAAA4pB,EAAA,EAAA5pB,CAAKyZ,KAAAy+B,aAAA,KACzBF,EAAAG,YAAA1+B,KAAAohB,iBACAmd,EAAAvc,QAAAhiB,KAAA2+B,aACAJ,EAAAtwC,OAAA+R,KAAAmB,YACAo9B,EAAA5c,OAAA3hB,KAAA0hB,aAAA,EACA6c,EAAArc,cAAAliB,KAAAmS,mBACAosB,EAAAtc,cAAApyB,KAAAE,IAAAiQ,KAAAkS,mBAAA,GACAlS,KAAAs+B,OAAAC,EAEAA,GASAhe,EAAA/5B,UAAAs6B,eAAA,SAAA/I,GACA,OAAWxxB,OAAA8mB,EAAA,EAAA9mB,IASXg6B,EAAA/5B,UAAAu6B,oBAAA,SAAAC,GACA,OAAWz6B,OAAA8mB,EAAA,EAAA9mB,IAUXg6B,EAAA/5B,UAAA2a,UAAA,WACA,OACyDnB,KAAA/V,IAAcimB,EAAA,EAAa5N,SAUpFie,EAAA/5B,UAAA2rB,iBAAA,WACA,OAA6BnS,KAAA/V,IAAcimB,EAAA,EAAa+C,iBASxDsN,EAAA/5B,UAAA0rB,iBAAA,WACA,OAA6BlS,KAAA/V,IAAcimB,EAAA,EAAagD,iBASxDqN,EAAA/5B,UAAAi4C,WAAA,WACA,OAA6Bz+B,KAAA/V,IAAcimB,EAAA,EAAa4C,UAOxDyN,EAAA/5B,UAAA46B,eAAA,WACA,OAAW76B,OAAA8mB,EAAA,EAAA9mB,IASXg6B,EAAA/5B,UAAAm4C,WAAA,WACA,OAA8B3+B,KAAA/V,IAAcimB,EAAA,EAAa6C,UAUzDwN,EAAA/5B,UAAAk7B,UAAA,WACA,OAA6B1hB,KAAA/V,IAAcimB,EAAA,EAAa8C,UAUxDuN,EAAA/5B,UAAAsb,UAAA,SAAA7T,GACA+R,KAAA5B,IAAa8R,EAAA,EAAa5N,OAAArU,IAS1BsyB,EAAA/5B,UAAAo4C,iBAAA,SAAA1c,GACAliB,KAAA5B,IAAa8R,EAAA,EAAa+C,eAAAiP,IAS1B3B,EAAA/5B,UAAAq4C,iBAAA,SAAA5c,GACAjiB,KAAA5B,IAAa8R,EAAA,EAAagD,eAAA+O,IAS1B1B,EAAA/5B,UAAAs4C,WAAA,SAAAvlC,GACAyG,KAAA5B,IAAa8R,EAAA,EAAa4C,QAAAvZ,IAS1BgnB,EAAA/5B,UAAAu4C,WAAA,SAAA/c,GACAhiB,KAAA5B,IAAa8R,EAAA,EAAa6C,QAAAiP,IAU1BzB,EAAA/5B,UAAAw4C,UAAA,SAAAC,GACAj/B,KAAA5B,IAAa8R,EAAA,EAAa8C,QAAAisB,IAG1B1e,EA/NA,CAgOE6d,EAAA,GAGa5yC,EAAA,kCCxQf,IAAAqC,EAAA7G,EAAA,IAAA62C,EAAA72C,EAAA,IAAA82C,EAAA92C,EAAA,GA2BAk4C,EAAA,SAAAnB,GACA,SAAAmB,EAAAC,GAEApB,EAAAr3C,KAAAsZ,MAKAA,KAAAo/B,mBAAA/1C,IAAA81C,IAAA,KAMAn/B,KAAAq/B,OAAA,EAMAr/B,KAAAs/B,SAAA,GAMAt/B,KAAAu/B,QAAA,KAMAv/B,KAAAw/B,QAAA,KAgPA,OA5OAzB,IAAAmB,EAAAn8B,UAAAg7B,GACAmB,EAAA14C,UAAAD,OAAAmE,OAAAqzC,KAAAv3C,WACA04C,EAAA14C,UAAAwc,YAAAk8B,EAMAA,EAAA14C,UAAAi5C,eAAA,WACA,OAAAz/B,KAAA0/B,WAAA1/B,KAAAo/B,eAOAF,EAAA14C,UAAAwR,MAAA,WACAgI,KAAAq/B,OAAA,EACAr/B,KAAAs/B,SAAA,GACAt/B,KAAAu/B,QAAA,KACAv/B,KAAAw/B,QAAA,KACAx/B,KAAAsO,cAAuBwvB,EAAA,EAAS5jC,QAQhCglC,EAAA14C,UAAAm5C,YAAA,SAAAh1C,GACA,OAAAqV,KAAAs/B,SAAA74C,eAAAkE,IAYAu0C,EAAA14C,UAAAqf,QAAA,SAAAzG,EAAAnP,GAEA,IADA,IAAA2vC,EAAA5/B,KAAAu/B,QACAK,GACAxgC,EAAA1Y,KAAAuJ,EAAA2vC,EAAAC,OAAAD,EAAAE,KAAA9/B,MACA4/B,IAAAG,OASAb,EAAA14C,UAAAyD,IAAA,SAAAU,GACA,IAAAi1C,EAAA5/B,KAAAs/B,SAAA30C,GAGA,OAFIpE,OAAAsH,EAAA,EAAAtH,MAAM8C,IAAAu2C,EACV,IACAA,IAAA5/B,KAAAw/B,QACAI,EAAAC,QACKD,IAAA5/B,KAAAu/B,SACLv/B,KAAAu/B,QAAsCv/B,KAAAu/B,QAAA,MACtCv/B,KAAAu/B,QAAAS,MAAA,OAEAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,OAEAH,EAAAG,MAAA,KACAH,EAAAI,MAAAhgC,KAAAw/B,QACAx/B,KAAAw/B,QAAAO,MAAAH,EACA5/B,KAAAw/B,QAAAI,EACAA,EAAAC,SASAX,EAAA14C,UAAAwhB,OAAA,SAAArd,GACA,IAAAi1C,EAAA5/B,KAAAs/B,SAAA30C,GAkBA,OAjBIpE,OAAAsH,EAAA,EAAAtH,MAAM8C,IAAAu2C,EAAA,IACVA,IAAA5/B,KAAAw/B,SACAx/B,KAAAw/B,QAAsCI,EAAA,MACtC5/B,KAAAw/B,UACAx/B,KAAAw/B,QAAAO,MAAA,OAEKH,IAAA5/B,KAAAu/B,SACLv/B,KAAAu/B,QAAsCK,EAAA,MACtC5/B,KAAAu/B,UACAv/B,KAAAu/B,QAAAS,MAAA,QAGAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,cAEA//B,KAAAs/B,SAAA30C,KACAqV,KAAAq/B,OACAO,EAAAC,QAOAX,EAAA14C,UAAAk5C,SAAA,WACA,OAAA1/B,KAAAq/B,QAOAH,EAAA14C,UAAA0nB,QAAA,WACA,IAEA0xB,EAFA1rC,EAAA,IAAAkJ,MAAA4C,KAAAq/B,QACAn5C,EAAA,EAEA,IAAA05C,EAAA5/B,KAAAw/B,QAA8BI,EAAOA,IAAAI,MACrC9rC,EAAAhO,KAAA05C,EAAAE,KAEA,OAAA5rC,GAOAgrC,EAAA14C,UAAA4iB,UAAA,WACA,IAEAw2B,EAFAn2B,EAAA,IAAArM,MAAA4C,KAAAq/B,QACAn5C,EAAA,EAEA,IAAA05C,EAAA5/B,KAAAw/B,QAA8BI,EAAOA,IAAAI,MACrCv2B,EAAAvjB,KAAA05C,EAAAC,OAEA,OAAAp2B,GAOAy1B,EAAA14C,UAAAy5C,SAAA,WACA,OAAAjgC,KAAAu/B,QAAAM,QAOAX,EAAA14C,UAAA05C,YAAA,WACA,OAAAlgC,KAAAu/B,QAAAO,MAQAZ,EAAA14C,UAAA25C,aAAA,WACA,OAAAngC,KAAAw/B,QAAAM,MAOAZ,EAAA14C,UAAA8xB,IAAA,WACA,IAAAsnB,EAAA5/B,KAAAu/B,QAUA,cATAv/B,KAAAs/B,SAAAM,EAAAE,MACAF,EAAAG,QACAH,EAAAG,MAAAC,MAAA,MAEAhgC,KAAAu/B,QAAoCK,EAAA,MACpC5/B,KAAAu/B,UACAv/B,KAAAw/B,QAAA,QAEAx/B,KAAAq/B,OACAO,EAAAC,QAQAX,EAAA14C,UAAAklC,QAAA,SAAA/gC,EAAAN,GACA2V,KAAA/V,IAAAU,GACAqV,KAAAs/B,SAAA30C,GAAAk1C,OAAAx1C,GAQA60C,EAAA14C,UAAA4X,IAAA,SAAAzT,EAAAN,GACI9D,OAAAsH,EAAA,EAAAtH,GAAMoE,KAAAqV,KAAAs/B,UACV,IACA,IAAAM,EAAiC,CACjCE,KAAAn1C,EACAo1C,MAAA,KACAC,MAAAhgC,KAAAw/B,QACAK,OAAAx1C,GAEA2V,KAAAw/B,QAGAx/B,KAAAw/B,QAAAO,MAAAH,EAFA5/B,KAAAu/B,QAAAK,EAIA5/B,KAAAw/B,QAAAI,EACA5/B,KAAAs/B,SAAA30C,GAAAi1C,IACA5/B,KAAAq/B,QASAH,EAAA14C,UAAA45C,QAAA,SAAAxvC,GACAoP,KAAAo/B,cAAAxuC,GAOAsuC,EAAA14C,UAAA65C,MAAA,WACA,KAAArgC,KAAAy/B,kBACAz/B,KAAAsY,OAIA4mB,EAhRA,CAiRErB,EAAA,GAEaryC,EAAA,kCC9Sf,IAAA6hB,EAAArmB,EAAA,GAAA62C,EAAA72C,EAAA,IAAA82C,EAAA92C,EAAA,GAUAs5C,EAAA,SAAAvC,GACA,SAAAuC,EAAAryC,EAAAyC,EAAA+6B,EAAA8S,GAEAR,EAAAr3C,KAAAsZ,MAMAA,KAAA/R,SAMA+R,KAAAugC,YAAA9U,EAMAzrB,KAAAtP,aAMAsP,KAAAu+B,QA2DA,OAvDAR,IAAAuC,EAAAv9B,UAAAg7B,GACAuC,EAAA95C,UAAAD,OAAAmE,OAAAqzC,KAAAv3C,WACA85C,EAAA95C,UAAAwc,YAAAs9B,EAKAA,EAAA95C,UAAA22B,QAAA,WACAnd,KAAAsO,cAAuBwvB,EAAA,EAAS7jC,SAMhCqmC,EAAA95C,UAAA2a,UAAA,WACA,OAAAnB,KAAA/R,QAOAqyC,EAAA95C,UAAAg6C,SAAA,WACA,OAAWj6C,OAAA8mB,EAAA,EAAA9mB,IAMX+5C,EAAA95C,UAAAi6C,cAAA,WACA,OAAAzgC,KAAAugC,aAMAD,EAAA95C,UAAAurB,cAAA,WACA,OAA6B/R,KAAA,YAM7BsgC,EAAA95C,UAAA66B,SAAA,WACA,OAAArhB,KAAAu+B,OAOA+B,EAAA95C,UAAAwwC,KAAA,WACIzwC,OAAA8mB,EAAA,EAAA9mB,IAGJ+5C,EAtFA,CAuFEzC,EAAA,GAGaryC,EAAA,kCCpGf,IAUA6+B,EAAA,SAAA4F,GACA,SAAA5F,EAAAthC,EAAA8nB,EAAA6vB,EAAApW,EAAAC,GAEA0F,EAAAvpC,KAAAsZ,KAAAjX,EAAA8nB,EAAA0Z,GAQAvqB,KAAAyM,cAAAi0B,EAOA1gC,KAAAy9B,MAAA5sB,EAAA8vB,cAAAD,GAOA1gC,KAAAxR,WAAAqiB,EAAA+rB,uBAAA58B,KAAAy9B,OASAz9B,KAAA4gC,cAAAv3C,IAAAihC,KA8BA,OA1BA2F,IAAA5F,EAAAtnB,UAAAktB,GACA5F,EAAA7jC,UAAAD,OAAAmE,OAAAulC,KAAAzpC,WACA6jC,EAAA7jC,UAAAwc,YAAAqnB,EAQAA,EAAA7jC,UAAA8sB,eAAA,WACA2c,EAAAzpC,UAAA8sB,eAAA5sB,KAAAsZ,MACAA,KAAAyM,cAAA6G,kBASA+W,EAAA7jC,UAAA4sB,gBAAA,WACA6c,EAAAzpC,UAAA4sB,gBAAA1sB,KAAAsZ,MACAA,KAAAyM,cAAA2G,mBAGAiX,EAhEA,CAVArjC,EAAA,IA2EE,GAGawE,EAAA,kCC9Ef,IAAAq1C,EAAA75C,EAAA,IAAA85C,EAAA95C,EAAA,IAiEA2rB,EAAA,SAAAouB,GACA,SAAApuB,EAAAkD,GACA,IAAA9V,EAAA8V,GAAA,GACA5Q,OAAA5b,IAAA0W,EAAAkF,WACAlF,EAAAkF,WAAA,YAEApD,OAAAxY,IAAA0W,EAAA8B,SAAA9B,EAAA8B,SACMtb,OAAAu6C,EAAA,EAAAv6C,CAAS,CACf0H,OAAgB1H,OAAAu6C,EAAA,EAAAv6C,CAAoB0e,GACpCmkB,QAAArpB,EAAAqpB,QACAD,QAAAppB,EAAAopB,QACAX,SAAAzoB,EAAAyoB,WAGAuY,EAAAr6C,KAAAsZ,KAAA,CACAghC,aAAAjhC,EAAAihC,aACAld,UAAA/jB,EAAA+jB,UACAmd,YAAAlhC,EAAAkhC,YACAC,OAAAnhC,EAAAmhC,OACAj8B,aACAk8B,2BAAAphC,EAAAohC,2BACAt/B,WACAu/B,iBAAArhC,EAAAqhC,iBACAC,eAAAthC,EAAAshC,eACAC,gBAAAvhC,EAAAuhC,gBACAxV,IAAA/rB,EAAA+rB,IACAC,KAAAhsB,EAAAgsB,KACAtE,WAAAp+B,IAAA0W,EAAA0nB,OAAA1nB,EAAA0nB,MACA8Z,WAAAxhC,EAAAwhC,WACAC,wBAAAzhC,EAAAyhC,0BASA,OAJAT,IAAApuB,EAAA5P,UAAAg+B,GACApuB,EAAAnsB,UAAAD,OAAAmE,OAAAq2C,KAAAv6C,WACAmsB,EAAAnsB,UAAAwc,YAAA2P,EAEAA,EAtCA,CAuCEkuB,EAAA,GAEar1C,EAAA,kCC1Gf,IAAA6hB,EAAArmB,EAAA,GAAAo3C,EAAAp3C,EAAA,IAAAy6C,EAAAz6C,EAAA,IAAA06C,EAAA16C,EAAA,IAiDA26C,EAAA,SAAA9zB,GACA,SAAA8zB,EAAA5hC,GAEA8N,EAAAnnB,KAAAsZ,MAMAA,KAAA4hC,YAAuBr7C,OAAAk7C,EAAA,EAAAl7C,CAAawZ,EAAAkF,YAMpCjF,KAAA6hC,cAAAC,EAAA/hC,EAAAihC,cAMAhhC,KAAA+hC,8BAAA14C,IAAA0W,EAAAyhC,yBACAzhC,EAAAyhC,wBAOAxhC,KAAAgiC,SAAA,EAMAhiC,KAAAs+B,YAAAj1C,IAAA0W,EAAAw+B,MACAx+B,EAAAw+B,MAAsBmD,EAAA,EAAWpkB,MAMjCtd,KAAAiiC,YAAA54C,IAAA0W,EAAA0nB,OAAA1nB,EAAA0nB,MAsFA,OAlFA5Z,IAAA8zB,EAAA5+B,UAAA8K,GACA8zB,EAAAn7C,UAAAD,OAAAmE,OAAAmjB,KAAArnB,WACAm7C,EAAAn7C,UAAAwc,YAAA2+B,EAMAA,EAAAn7C,UAAA07C,gBAAA,WACA,OAAAliC,KAAA6hC,eAMAF,EAAAn7C,UAAA27C,2BAAA,WACA,OAAAniC,KAAA+hC,0BAQAJ,EAAAn7C,UAAA47C,cAAA,WACA,OAAApiC,KAAA4hC,aAOAD,EAAAn7C,UAAAyrB,eAAA,WACA,OAAW1rB,OAAA8mB,EAAA,EAAA9mB,IAQXo7C,EAAAn7C,UAAA66B,SAAA,WACA,OAAArhB,KAAAs+B,QAMAqD,EAAAn7C,UAAA67C,SAAA,WACA,OAAAriC,KAAAiiC,QAOAN,EAAAn7C,UAAA87C,QAAA,WACAtiC,KAAAmd,WAUAwkB,EAAAn7C,UAAA+7C,gBAAA,SAAAvB,GACAhhC,KAAA6hC,cAAAC,EAAAd,GACAhhC,KAAAmd,WAQAwkB,EAAAn7C,UAAAg8C,SAAA,SAAAjE,GACAv+B,KAAAs+B,OAAAC,EACAv+B,KAAAmd,WAGAwkB,EAhIA,CAiIEvD,EAAA,GAQF,SAAA0D,EAAAW,GACA,OAAAA,EAGArlC,MAAA2K,QAAA06B,GACA,SAAA7gB,GACA,OAAA6gB,GAIA,mBAAAA,EACAA,EAGA,SAAA7gB,GACA,OAAA6gB,IAbA,KAkBej3C,EAAA,mFC0FAk3C,EA5NP,SAAA3E,GACR,SAAA4E,EAAApuB,EAAAgqB,EAAA1oB,GACAkoB,EAAAr3C,KAAAsZ,MAEA,IAAAD,EAAA8V,GAAA,GAKA7V,KAAAuU,YAMAvU,KAAAu+B,QAQAv+B,KAAA4iC,YAAA,KAQA5iC,KAAArV,IAAA,GAMAqV,KAAA6iC,iBAAAx5C,IAAA0W,EAAAwhC,WAAA,IAAAxhC,EAAAwhC,WAOAvhC,KAAA8iC,kBAAA,GA4KA,OAxKA/E,IAAA4E,EAAA5/B,UAAAg7B,GACA4E,EAAAn8C,UAAAD,OAAAmE,OAAAqzC,KAAAv3C,WACAm8C,EAAAn8C,UAAAwc,YAAA2/B,EAKAA,EAAAn8C,UAAA22B,QAAA,WACAnd,KAAAsO,cAAuBy0B,EAAA,EAAS9oC,SAMhC0oC,EAAAn8C,UAAA8tB,OAAA,WACA,OAAAtU,KAAArV,IAAA,IAAAqV,KAAAuU,WASAouB,EAAAn8C,UAAAw8C,eAAA,WACA,IAAAhjC,KAAA4iC,YAEA,OAAA5iC,KAEA,IAAAijC,EAAAjjC,KAAA4iC,YAMA,GACA,GAAAK,EAAA5hB,YAA6B6hB,EAAA,EAAStlC,OACtC,OAAAqlC,EAEAA,IAAAL,kBACKK,GAGL,OAAAjjC,MAOA2iC,EAAAn8C,UAAA28C,oBAAA,WACA,GAAAnjC,KAAA4iC,YAAA,CAIA,IAAAK,EAAAjjC,KAAA4iC,YACA/pB,EAA+B,KAE/B,GACA,GAAAoqB,EAAA5hB,YAA6B6hB,EAAA,EAAStlC,OAAA,CAItCqlC,EAAAL,YAAA,KACA,MACOK,EAAA5hB,YAA6B6hB,EAAA,EAASvlC,QAG7Ckb,EAAAoqB,EACOA,EAAA5hB,YAA6B6hB,EAAA,EAASxlC,KAG7Cmb,EAAA+pB,YAAAK,EAAAL,YAEA/pB,EAAAoqB,EAEAA,EAAApqB,EAAA+pB,kBACKK,KAQLN,EAAAn8C,UAAA48C,aAAA,WACA,OAAApjC,KAAAuU,WAMAouB,EAAAn8C,UAAA66B,SAAA,WACA,OAAArhB,KAAAu+B,OAWAoE,EAAAn8C,UAAAg8C,SAAA,SAAAjE,GACAv+B,KAAAu+B,QACAv+B,KAAAmd,WAUAwlB,EAAAn8C,UAAAwwC,KAAA,aAQA2L,EAAAn8C,UAAA68C,SAAA,SAAA1sB,EAAA2sB,GACA,IAAAtjC,KAAA6iC,YACA,SAGA,IAAA7wC,EAAAgO,KAAA8iC,kBAAAnsB,GACA,GAAA3kB,GAGK,QAAAA,EACL,cAHAA,EAAAsxC,EACAtjC,KAAA8iC,kBAAAnsB,GAAA3kB,EAKA,IAAA+e,EAAAuyB,EAAAtxC,EAAA,OACA,OAAA+e,GAAA/Q,KAAA6iC,YACA,EAEWt8C,OAAA8qB,EAAA,EAAA9qB,CAAMwqB,EAAA/Q,KAAA6iC,cAUjBF,EAAAn8C,UAAA+8C,aAAA,SAAA5sB,GACA,QAAA3W,KAAA6iC,cAGA,IAAA7iC,KAAA8iC,kBAAAnsB,IAOAgsB,EAAAn8C,UAAAg9C,cAAA,SAAA7sB,GACA3W,KAAA6iC,cACA7iC,KAAA8iC,kBAAAnsB,IAAA,IAIAgsB,EAxNQ,CAyNN1kB,EAAA,kBCtIF,SAAAwlB,IACA,IAAAC,EAAYn9C,OAAAo9C,EAAA,EAAAp9C,CAAqB,KAGjC,OAFAm9C,EAAAE,UAAA,gBACAF,EAAAG,SAAA,SACAH,EAAAz4B,OAGe,IAAA64B,EA5JF,SAAAnB,GACb,SAAAoB,EAAAxvB,EAAAgqB,EAAAl2C,EAAA44C,EAAAG,EAAAvrB,GAEA8sB,EAAAj8C,KAAAsZ,KAAAuU,EAAAgqB,EAAA1oB,GAMA7V,KAAAgkC,aAAA/C,EAQAjhC,KAAAikC,KAAA57C,EAMA2X,KAAAkkC,OAAA,IAAAC,MACA,OAAAlD,IACAjhC,KAAAkkC,OAAAjD,eAOAjhC,KAAAokC,mBAAA,KAMApkC,KAAAqkC,kBAAAjD,EAuGA,OAnGAuB,IAAAoB,EAAAhhC,UAAA4/B,GACAoB,EAAAv9C,UAAAD,OAAAmE,OAAAi4C,KAAAn8C,WACAu9C,EAAAv9C,UAAAwc,YAAA+gC,EAKAA,EAAAv9C,UAAAg4B,gBAAA,WACAxe,KAAAu+B,OAAsB2E,EAAA,EAASvlC,UAC/BqC,KAAAskC,iBACAtkC,KAAAkkC,OAAAT,KAEAzjC,KAAA4iC,aACA5iC,KAAA4iC,YAAA9S,UAEA9vB,KAAAu+B,MAAiB2E,EAAA,EAASplC,MAC1BkC,KAAAmd,UACAwlB,EAAAn8C,UAAAg4B,gBAAA93B,KAAAsZ,OAQA+jC,EAAAv9C,UAAAg6C,SAAA,WACA,OAAAxgC,KAAAkkC,QAMAH,EAAAv9C,UAAA8tB,OAAA,WACA,OAAAtU,KAAAikC,MAQAF,EAAAv9C,UAAA+9C,kBAAA,WACAvkC,KAAAu+B,MAAiB2E,EAAA,EAASzoC,MAC1BuF,KAAAskC,iBACAtkC,KAAAkkC,OAAAT,IACAzjC,KAAAmd,WAQA4mB,EAAAv9C,UAAAg+C,iBAAA,WACA,IAAAhrC,EAA4CwG,KAAA,OAC5CxG,EAAAirC,cAAAjrC,EAAAkrC,cACA1kC,KAAAu+B,MAAmB2E,EAAA,EAAStlC,OAE5BoC,KAAAu+B,MAAmB2E,EAAA,EAASrlC,MAE5BmC,KAAAskC,iBACAtkC,KAAAmd,WAOA4mB,EAAAv9C,UAAAwwC,KAAA,WACAh3B,KAAAu+B,OAAsB2E,EAAA,EAASzoC,QAC/BuF,KAAAu+B,MAAmB2E,EAAA,EAASxlC,KAC5BsC,KAAAkkC,OAAA,IAAAC,MACA,OAAAnkC,KAAAgkC,eACAhkC,KAAAkkC,OAAAjD,YAAAjhC,KAAAgkC,eAGAhkC,KAAAu+B,OAAsB2E,EAAA,EAASxlC,OAC/BsC,KAAAu+B,MAAmB2E,EAAA,EAASvlC,QAC5BqC,KAAAmd,UACAnd,KAAAokC,mBAAA,CACQ79C,OAAAo+C,EAAA,EAAAp+C,CAAUyZ,KAAAkkC,OAAcnB,EAAA,EAAStoC,MACzCuF,KAAAukC,kBAAAvkC,MACQzZ,OAAAo+C,EAAA,EAAAp+C,CAAUyZ,KAAAkkC,OAAcnB,EAAA,EAASnoC,KACzCoF,KAAAwkC,iBAAAxkC,OAEAA,KAAAqkC,kBAAArkC,UAAAikC,QASAF,EAAAv9C,UAAA89C,eAAA,WACAtkC,KAAAokC,mBAAAv+B,QAAoC8+B,EAAA,GACpC3kC,KAAAokC,mBAAA,MAGAL,EA7Ia,CA8IXrB,mBClGakC,EAhDF,SAAA1F,GACb,SAAA2F,EAAA1F,GAEAD,EAAAx4C,KAAAsZ,KAAAm/B,GAyCA,OArCAD,IAAA2F,EAAA9hC,UAAAm8B,GACA2F,EAAAr+C,UAAAD,OAAAmE,OAAAw0C,KAAA14C,WACAq+C,EAAAr+C,UAAAwc,YAAA6hC,EAKAA,EAAAr+C,UAAAs+C,YAAA,SAAAC,GACA,KAAA/kC,KAAAy/B,kBAAA,CACA,IAAAwD,EAAAjjC,KAAAigC,WACA+E,EAAA/B,EAAA1uB,UAAA,GAAAsC,WACA,GAAAmuB,KAAAD,KAAAC,GAAAxf,SAAAyd,EAAA1uB,WACA,MAEAvU,KAAAsY,MAAAwX,YAQA+U,EAAAr+C,UAAAy+C,mBAAA,WACA,OAAAjlC,KAAA0/B,WAAA,CAGA,IAAA/0C,EAAAqV,KAAAmgC,eAEAhsB,EADoB5tB,OAAA2+C,EAAA,EAAA3+C,CAAOoE,GAC3B,GACAqV,KAAA6F,QAAA,SAAAo9B,GACAA,EAAA1uB,UAAA,KAAAJ,IACAnU,KAAAgI,OAAoBzhB,OAAA2+C,EAAA,EAAA3+C,CAAM08C,EAAA1uB,YAC1B0uB,EAAAnT,YAEK9vB,QAGL6kC,EA5Ca,CA6CXM,EAAA,yCCkQaC,EA3RD,SAAAzC,GACd,SAAA0C,EACA9pB,EACA+pB,EACAvU,EACAwU,EACAhxB,EACAixB,EACA/Z,EACAyG,EACAuT,EACAC,EACAvT,GAEAwQ,EAAAj8C,KAAAsZ,KAAAuU,EAA+B2uB,EAAA,EAASxlC,MAMxCsC,KAAA2lC,kBAAAt8C,IAAA8oC,KAMAnyB,KAAAugC,YAAA9U,EAMAzrB,KAAA4lC,QAAA1T,EAMAlyB,KAAA6lC,QAAA,KAMA7lC,KAAA8lC,gBAAAR,EAMAtlC,KAAA+lC,gBAAAR,EAMAvlC,KAAAgmC,kBAAAR,GAAAjxB,EAMAvU,KAAAimC,aAAA,GAMAjmC,KAAAkmC,qBAAA,KAMAlmC,KAAAmmC,SAAA,EAEA,IAAApU,EAAAwT,EAAAa,mBAAApmC,KAAAgmC,mBACAK,EAAArmC,KAAA+lC,gBAAA5kC,YACAmlC,EAAAtmC,KAAA8lC,gBAAA3kC,YAEAolC,EAAAF,EACM9/C,OAAA0H,EAAA,EAAA1H,CAAewrC,EAAAsU,GAAAtU,EAErB,GAAe,IAAPxrC,OAAA0H,EAAA,EAAA1H,CAAOggD,GAAf,CAOA,IAAAC,EAAAjrB,EAAApa,YACAqlC,IAIAF,EAHAA,EAG0B//C,OAAA0H,EAAA,EAAA1H,CAAe+/C,EAAAE,GAFzCA,GAMA,IAAAvV,EAAAsU,EAAAxzB,cACA/R,KAAAgmC,kBAAA,IAEAhV,EAAuBzqC,OAAA0H,EAAA,EAAA1H,CAASggD,GAChCpV,EAA2B5qC,OAAAkgD,EAAA,EAAAlgD,CAC3Bg1B,EAAAwV,EAAAC,EAAAC,GAEA,IAAAO,SAAAL,OAAA,EAGAnxB,KAAAu+B,MAAmB2E,EAAA,EAASrlC,UAH5B,CAOA,IAAA6oC,OAAAr9C,IAAAq8C,EACAA,EAA2BiB,EAAA,EAU3B,GAJA3mC,KAAA4mC,eAAA,IAA8BC,EAAA,EAC9BtrB,EAAAwV,EAAAwV,EAAAD,EACAnV,EAAAuV,GAEA,IAAA1mC,KAAA4mC,eAAA9T,eAAA1sC,OAAA,CAMA4Z,KAAAmmC,SAAAb,EAAAwB,kBAAA3V,GACA,IAAAG,EAAAtxB,KAAA4mC,eAAAG,wBAaA,GAXAT,IACA/qB,EAAAta,YACAqwB,EAAA,GAA0B/qC,OAAAuc,EAAA,EAAAvc,CAC1B+qC,EAAA,GAAAgV,EAAA,GAAAA,EAAA,IACAhV,EAAA,GAA0B/qC,OAAAuc,EAAA,EAAAvc,CAC1B+qC,EAAA,GAAAgV,EAAA,GAAAA,EAAA,KAEAhV,EAAuB/qC,OAAA0H,EAAA,EAAA1H,CAAe+qC,EAAAgV,IAI7B//C,OAAA0H,EAAA,EAAA1H,CAAO+qC,GAEX,CAIL,IAHA,IAAA0V,EAAA1B,EAAAjwB,0BACAic,EAAAtxB,KAAAmmC,UAEAc,EAAAD,EAAAr4C,KAAuCs4C,GAAAD,EAAAn4C,KAA0Bo4C,IACjE,QAAAC,EAAAF,EAAAp4C,KAAyCs4C,GAAAF,EAAAl4C,KAA0Bo4C,IAAA,CACnE,IAAAjE,EAAAwC,EAAAzlC,KAAAmmC,SAAAc,EAAAC,EAAAzb,GACAwX,GACAjjC,KAAAimC,aAAA3/C,KAAA28C,GAKA,IAAAjjC,KAAAimC,aAAA7/C,SACA4Z,KAAAu+B,MAAqB2E,EAAA,EAASrlC,YAf9BmC,KAAAu+B,MAAmB2E,EAAA,EAASrlC,WAnB5BmC,KAAAu+B,MAAmB2E,EAAA,EAASrlC,YAxC5BmC,KAAAu+B,MAAmB2E,EAAA,EAASrlC,MAiM5B,OAlHA8kC,IAAA0C,EAAAtiC,UAAA4/B,GACA0C,EAAA7+C,UAAAD,OAAAmE,OAAAi4C,KAAAn8C,WACA6+C,EAAA7+C,UAAAwc,YAAAqiC,EAKAA,EAAA7+C,UAAAg4B,gBAAA,WACAxe,KAAAu+B,OAAsB2E,EAAA,EAASvlC,SAC/BqC,KAAAmnC,mBAEAxE,EAAAn8C,UAAAg4B,gBAAA93B,KAAAsZ,OAOAqlC,EAAA7+C,UAAAg6C,SAAA,WACA,OAAAxgC,KAAA6lC,SAMAR,EAAA7+C,UAAA4gD,WAAA,WACA,IAAAnV,EAAA,GAWA,GAVAjyB,KAAAimC,aAAApgC,QAAA,SAAAo9B,EAAA/8C,EAAAuhB,GACAw7B,KAAA5hB,YAAqC6hB,EAAA,EAAStlC,QAC9Cq0B,EAAA3rC,KAAA,CACA2H,OAAA+R,KAAA8lC,gBAAAM,mBAAAnD,EAAA1uB,WACA/a,MAAAypC,EAAAzC,cAGK51C,KAAAoV,OACLA,KAAAimC,aAAA7/C,OAAA,EAEA,IAAA6rC,EAAA7rC,OACA4Z,KAAAu+B,MAAmB2E,EAAA,EAASzoC,UACvB,CACL,IAAA0Z,EAAAnU,KAAAgmC,kBAAA,GACAp1C,EAAAoP,KAAA+lC,gBAAAsB,YAAAlzB,GACAtc,EAAA,iBAAAjH,MAAA,GACA4H,EAAA,iBAAA5H,MAAA,GACAqgC,EAAAjxB,KAAA+lC,gBAAAh0B,cAAAoC,GACAgd,EAAAnxB,KAAA8lC,gBAAA/zB,cAAA/R,KAAAmmC,UAEApU,EAAA/xB,KAAA+lC,gBAAAK,mBACApmC,KAAAgmC,mBACAhmC,KAAA6lC,QAAqBt/C,OAAAkgD,EAAA,EAAAlgD,CAAiBsR,EAAAW,EAAAwH,KAAAugC,YACtCpP,EAAAnxB,KAAA8lC,gBAAA3kC,YACA8vB,EAAAc,EAAA/xB,KAAA4mC,eAAA3U,EACAjyB,KAAA4lC,QAAA5lC,KAAA2lC,cAEA3lC,KAAAu+B,MAAmB2E,EAAA,EAAStlC,OAE5BoC,KAAAmd,WAMAkoB,EAAA7+C,UAAAwwC,KAAA,WACA,GAAAh3B,KAAAu+B,OAAsB2E,EAAA,EAASxlC,KAAA,CAC/BsC,KAAAu+B,MAAmB2E,EAAA,EAASvlC,QAC5BqC,KAAAmd,UAEA,IAAAmqB,EAAA,EAEAtnC,KAAAkmC,qBAAA,GACAlmC,KAAAimC,aAAApgC,QAAA,SAAAo9B,EAAA/8C,EAAAuhB,GACA,IAAA82B,EAAA0E,EAAA5hB,WACA,GAAAkd,GAAqB2E,EAAA,EAASxlC,MAAA6gC,GAAkB2E,EAAA,EAASvlC,QAAA,CACzD2pC,IAEA,IAAAC,EAAgChhD,OAAAo+C,EAAA,EAAAp+C,CAAM08C,EAAOF,EAAA,EAAS9oC,OACtD,SAAA7S,GACA,IAAAm3C,EAAA0E,EAAA5hB,WACAkd,GAA2B2E,EAAA,EAAStlC,QACpC2gC,GAA6B2E,EAAA,EAASzoC,OACtC8jC,GAA6B2E,EAAA,EAASrlC,QACtBtX,OAAAo+C,EAAA,EAAAp+C,CAAaghD,GAE7B,MADAD,IAEAtnC,KAAAmnC,mBACAnnC,KAAAonC,gBAGapnC,MACbA,KAAAkmC,qBAAA5/C,KAAAihD,KAEO38C,KAAAoV,OAEPA,KAAAimC,aAAApgC,QAAA,SAAAo9B,EAAA/8C,EAAAuhB,GACAw7B,EAAA5hB,YACqB6hB,EAAA,EAASxlC,MAC9BulC,EAAAjM,SAIA,IAAAsQ,GACAh+C,WAAA0W,KAAAonC,WAAAx8C,KAAAoV,MAAA,KAQAqlC,EAAA7+C,UAAA2gD,iBAAA,WACAnnC,KAAAkmC,qBAAArgC,QAAsC8+B,EAAA,GACtC3kC,KAAAkmC,qBAAA,MAGAb,EAvRc,CAwRZ3C,2CC7QE8E,EAAU,SAAA7F,GACd,SAAA8F,EAAA1nC,GAEA4hC,EAAAj7C,KAAAsZ,KAAA,CACAghC,aAAAjhC,EAAAihC,aACAQ,wBAAAzhC,EAAAyhC,wBACAv8B,WAAAlF,EAAAkF,WACAs5B,MAAAx+B,EAAAw+B,MACA9W,MAAA1nB,EAAA0nB,QAOAznB,KAAA0nC,aAAAr+C,IAAA0W,EAAAmhC,QAAAnhC,EAAAmhC,OAMAlhC,KAAA2nC,qBAAAt+C,IAAA0W,EAAAshC,eACAthC,EAAAshC,eAAA,EAMArhC,KAAA6B,cAAAxY,IAAA0W,EAAA8B,SAAA9B,EAAA8B,SAAA,KAMA7B,KAAA4nC,UAAA,IAAyBhD,EAAS7kC,EAAA+jB,WAMlC9jB,KAAA6nC,QAAA,MAMA7nC,KAAA8/B,KAAA//B,EAAApV,KAAA,GAMAqV,KAAA8nC,YAAA,CAAwBvG,WAAAxhC,EAAAwhC,YA2NxB,OAvNAI,IAAA8F,EAAA1kC,UAAA4+B,GACA8F,EAAAjhD,UAAAD,OAAAmE,OAAAi3C,KAAAn7C,WACAihD,EAAAjhD,UAAAwc,YAAAykC,EAKAA,EAAAjhD,UAAAi5C,eAAA,WACA,OAAAz/B,KAAA4nC,UAAAnI,kBAOAgI,EAAAjhD,UAAAs+C,YAAA,SAAA7/B,EAAA8/B,GACA,IAAA6C,EAAA5nC,KAAA+nC,0BAAA9iC,GACA2iC,GACAA,EAAA9C,YAAAC,IAaA0C,EAAAjhD,UAAAwhD,kBAAA,SAAA/iC,EAAAkP,EAAAiB,EAAAplB,GACA,IAAA43C,EAAA5nC,KAAA+nC,0BAAA9iC,GACA,IAAA2iC,EACA,SAKA,IAFA,IACA3E,EAAAgF,EAAAC,EADAC,GAAA,EAEA/5C,EAAAgnB,EAAAzmB,KAAgCP,GAAAgnB,EAAAvmB,OAAqBT,EACrD,QAAAC,EAAA+mB,EAAAxmB,KAAkCP,GAAA+mB,EAAAtmB,OAAqBT,EACvD45C,EAAuB1hD,OAAA2+C,EAAA,EAAA3+C,CAAS4tB,EAAA/lB,EAAAC,GAChC65C,GAAA,EACAN,EAAAjI,YAAAsI,KAEAC,GADAjF,EAA0D2E,EAAA39C,IAAAg+C,IAC1D5mB,aAAuC6hB,EAAA,EAAStlC,UAEhDsqC,GAAA,IAAAl4C,EAAAizC,IAGAiF,IACAC,GAAA,GAIA,OAAAA,GAOAV,EAAAjhD,UAAA4hD,uBAAA,SAAAnjC,GACA,UAQAwiC,EAAAjhD,UAAA8tB,OAAA,WACA,OAAAtU,KAAA8/B,MAQA2H,EAAAjhD,UAAA6hD,OAAA,SAAA19C,GACAqV,KAAA8/B,OAAAn1C,IACAqV,KAAA8/B,KAAAn1C,EACAqV,KAAAmd,YAQAsqB,EAAAjhD,UAAA8hD,UAAA,SAAArjC,GACA,OAAAjF,KAAA0nC,SAMAD,EAAAjhD,UAAAyrB,eAAA,WACA,OAAAjS,KAAA6B,SAAAoQ,kBAYAw1B,EAAAjhD,UAAA+hD,QAAA,SAAAp0B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,GACA,OAAW1e,OAAA+zB,EAAA,EAAA/zB,IAQXkhD,EAAAjhD,UAAAgiD,YAAA,WACA,OAAAxoC,KAAA6B,UAOA4lC,EAAAjhD,UAAAiiD,yBAAA,SAAAxjC,GACA,OAAAjF,KAAA6B,SAGA7B,KAAA6B,SAFatb,OAAAmiD,EAAA,EAAAniD,CAAwB0e,IAWrCwiC,EAAAjhD,UAAAuhD,0BAAA,SAAA9iC,GACA,IAAA0jC,EAAA3oC,KAAAoiC,gBACA,OAAAuG,IAAqBpiD,OAAAqiD,EAAA,EAAAriD,CAAUoiD,EAAA1jC,GAC/B,KAEAjF,KAAA4nC,WAWAH,EAAAjhD,UAAAqiD,kBAAA,SAAApd,GACA,OAAAzrB,KAAA2nC,iBASAF,EAAAjhD,UAAAsiD,iBAAA,SAAA30B,EAAAsX,EAAAxmB,GACA,IAAApD,EAAA7B,KAAAyoC,yBAAAxjC,GACAo8B,EAAArhC,KAAA6oC,kBAAApd,GACAjD,EAAmBjiC,OAAAwiD,EAAA,EAAAxiD,CAAMsb,EAAAwlC,YAAAlzB,GAAAnU,KAAA6nC,SACzB,UAAAxG,EACA7Y,EAEajiC,OAAAwiD,EAAA,EAAAxiD,CAASiiC,EAAA6Y,EAAArhC,KAAA6nC,UAatBJ,EAAAjhD,UAAAwiD,+BAAA,SAAAz0B,EAAA00B,GACA,IAAAhkC,OAAA5b,IAAA4/C,EACAA,EAAAjpC,KAAAoiC,gBACAvgC,EAAA7B,KAAAyoC,yBAAAxjC,GAIA,OAHAjF,KAAAqiC,YAAAp9B,EAAAxD,aACA8S,EAAkBhuB,OAAAmiD,EAAA,EAAAniD,CAAKsb,EAAA0S,EAAAtP,IAEZ1e,OAAA2+C,EAAA,EAAA3+C,CAAgBguB,EAAA1S,GAAA0S,EAAA,MAM3BkzB,EAAAjhD,UAAA87C,QAAA,WACAtiC,KAAA4nC,UAAA5vC,QACAgI,KAAAmd,WAWAsqB,EAAAjhD,UAAA0iD,QAAA,SAAA/0B,EAAA/lB,EAAAC,EAAA4W,KAEAwiC,EA/Qc,CAgRZ0B,EAAA,GAQKC,EAAA,SAAAz7B,GACP,SAAAy7B,EAAArgD,EAAAk6C,GAEAt1B,EAAAjnB,KAAAsZ,KAAAjX,GAOAiX,KAAAijC,OAQA,OAJAt1B,IAAAy7B,EAAArmC,UAAA4K,GACAy7B,EAAA5iD,UAAAD,OAAAmE,OAAAijB,KAAAnnB,WACA4iD,EAAA5iD,UAAAwc,YAAAomC,EAEAA,EAlBO,CAmBLz7B,EAAA,GCzUa07B,EAOf,gBAPeA,EAef,cAfeA,EAsBf,gBCoCIC,EAAS,SAAAC,GACb,SAAAxI,EAAAhhC,GAEAwpC,EAAA7iD,KAAAsZ,KAAA,CACAghC,aAAAjhC,EAAAihC,aACAld,UAAA/jB,EAAA+jB,UACAod,OAAAnhC,EAAAmhC,OACAj8B,WAAAlF,EAAAkF,WACAs5B,MAAAx+B,EAAAw+B,MACA18B,SAAA9B,EAAA8B,SACAu/B,iBAAArhC,EAAAqhC,iBACArhC,EAAAqhC,iBAAAoI,EACAnI,eAAAthC,EAAAshC,eACAC,gBAAAvhC,EAAAuhC,gBACAxV,IAAA/rB,EAAA+rB,IACAC,KAAAhsB,EAAAgsB,KACAtE,MAAA1nB,EAAA0nB,MACA8Z,WAAAxhC,EAAAwhC,WACA52C,IAAAoV,EAAApV,IACA62C,wBAAAzhC,EAAAyhC,0BAOAxhC,KAAAihC,iBACA53C,IAAA0W,EAAAkhC,YAAAlhC,EAAAkhC,YAAA,KAMAjhC,KAAAypC,eAAApgD,IAAA0W,EAAA0pC,UACA1pC,EAAA0pC,UAA0B3F,EAM1B9jC,KAAA0pC,uBAAA,GAMA1pC,KAAA2pC,sBAAA,GAMA3pC,KAAA4pC,4BAAA7pC,EAAAohC,2BAMAnhC,KAAA6pC,0BAAA,EA6QA,OA1QAN,IAAAxI,EAAAh+B,UAAAwmC,GACAxI,EAAAv6C,UAAAD,OAAAmE,OAAA6+C,KAAA/iD,WACAu6C,EAAAv6C,UAAAwc,YAAA+9B,EAKAA,EAAAv6C,UAAAi5C,eAAA,WACA,IAASkH,EAAA,EACT,OAAA4C,EAAA/iD,UAAAi5C,eAAA/4C,KAAAsZ,MAEA,GAAAA,KAAA4nC,UAAAnI,iBACA,SAEA,QAAA90C,KAAAqV,KAAA0pC,uBACA,GAAA1pC,KAAA0pC,uBAAA/+C,GAAA80C,iBACA,SAIA,UAMAsB,EAAAv6C,UAAAs+C,YAAA,SAAA7/B,EAAA8/B,GACA,GAAS4B,EAAA,EAAT,CAIA,IAAAmD,EAAA9pC,KAAA+nC,0BAAA9iC,GAGA,QAAA0R,KADA3W,KAAA4nC,UAAA9C,YAAA9kC,KAAA4nC,WAAAkC,EAAA/E,EAAA,IACA/kC,KAAA0pC,uBAAA,CACA,IAAA9B,EAAA5nC,KAAA0pC,uBAAA/yB,GACAixB,EAAA9C,YAAA8C,GAAAkC,EAAA/E,EAAA,UARAwE,EAAA/iD,UAAAs+C,YAAAp+C,KAAAsZ,KAAAiF,EAAA8/B,IAeAhE,EAAAv6C,UAAA4hD,uBAAA,SAAAnjC,GACA,OAAQ0hC,EAAA,GACR3mC,KAAAoiC,iBAAAn9B,IAA+C1e,OAAAqiD,EAAA,EAAAriD,CAAUyZ,KAAAoiC,gBAAAn9B,GACzD,EAEAjF,KAAA+pC,aAOAhJ,EAAAv6C,UAAAujD,UAAA,WACA,UAMAhJ,EAAAv6C,UAAA8hD,UAAA,SAAArjC,GACA,QAAQ0hC,EAAA,GACR3mC,KAAAoiC,iBAAAn9B,IAA+C1e,OAAAqiD,EAAA,EAAAriD,CAAUyZ,KAAAoiC,gBAAAn9B,KAGzDskC,EAAA/iD,UAAA8hD,UAAA5hD,KAAAsZ,KAAAiF,IAOA87B,EAAAv6C,UAAAiiD,yBAAA,SAAAxjC,GACA,IAAS0hC,EAAA,EACT,OAAA4C,EAAA/iD,UAAAiiD,yBAAA/hD,KAAAsZ,KAAAiF,GAEA,IAAA0jC,EAAA3oC,KAAAoiC,gBACA,IAAApiC,KAAA6B,UAAA8mC,IAAuCpiD,OAAAqiD,EAAA,EAAAriD,CAAUoiD,EAAA1jC,GAE5C,CACL,IAAA+kC,EAAoBzjD,OAAA+zB,EAAA,EAAA/zB,CAAM0e,GAI1B,OAHA+kC,KAAAhqC,KAAA2pC,wBACA3pC,KAAA2pC,sBAAAK,GAA8CzjD,OAAAmiD,EAAA,EAAAniD,CAAwB0e,IAGRjF,KAAA2pC,sBAAAK,GAP9D,OAAAhqC,KAAA6B,UAeAk/B,EAAAv6C,UAAAuhD,0BAAA,SAAA9iC,GACA,IAAS0hC,EAAA,EACT,OAAA4C,EAAA/iD,UAAAuhD,0BAAArhD,KAAAsZ,KAAAiF,GAEA,IAAA0jC,EAAA3oC,KAAAoiC,gBAAwC,IAAAuG,GAAkBpiD,OAAAqiD,EAAA,EAAAriD,CAAUoiD,EAAA1jC,GACpE,OAAAjF,KAAA4nC,UAEA,IAAAoC,EAAoBzjD,OAAA+zB,EAAA,EAAA/zB,CAAM0e,GAI1B,OAHA+kC,KAAAhqC,KAAA0pC,yBACA1pC,KAAA0pC,uBAAAM,GAAA,IAAmDpF,EAAS5kC,KAAA4nC,UAAAxI,gBAE5Dp/B,KAAA0pC,uBAAAM,IAcAjJ,EAAAv6C,UAAAyjD,YAAA,SAAA91B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,EAAAta,GACA,IAAA4pB,EAAA,CAAAJ,EAAA/lB,EAAAC,GACA67C,EAAAlqC,KAAAgpC,+BACAz0B,EAAAtP,GACAklC,EAAAD,EACAlqC,KAAAshC,gBAAA4I,EAAAze,EAAAxmB,QAAA5b,EACA45C,EAAA,IAAAjjC,KAAAypC,UACAl1B,OACAlrB,IAAA8gD,EAA8BjH,EAAA,EAASxlC,KAAQwlC,EAAA,EAASrlC,WACxDxU,IAAA8gD,IAAA,GACAnqC,KAAAihC,YACAjhC,KAAAohC,iBACAphC,KAAA8nC,aAIA,OAHA7E,EAAAt4C,MACIpE,OAAAo+C,EAAA,EAAAp+C,CAAM08C,EAAOF,EAAA,EAAS9oC,OAC1B+F,KAAAoqC,iBAAApqC,MACAijC,GAMAlC,EAAAv6C,UAAA+hD,QAAA,SAAAp0B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,GACA,IAAAoB,EAA+ErG,KAAAoiC,gBAC/E,GAASuE,EAAA,GACTtgC,GAAApB,IAA4C1e,OAAAqiD,EAAA,EAAAriD,CAAU8f,EAAApB,GAEjD,CACL,IAEAg+B,EAFA7+B,EAAApE,KAAA+nC,0BAAA9iC,GACAsP,EAAA,CAAAJ,EAAA/lB,EAAAC,GAEA45C,EAAyB1hD,OAAA2+C,EAAA,EAAA3+C,CAAMguB,GAC/BnQ,EAAAu7B,YAAAsI,KACAhF,EAAwD7+B,EAAAna,IAAAg+C,IAExD,IAAAt9C,EAAAqV,KAAAsU,SACA,GAAA2uB,KAAAt4C,OACA,OAAAs4C,EAEA,IAAAqC,EAAAtlC,KAAAyoC,yBAAApiC,GACAk/B,EAAAvlC,KAAAyoC,yBAAAxjC,GACAugC,EACAxlC,KAAAgpC,+BAAAz0B,EAAAtP,GACAolC,EAAA,IAA0BjF,EAC1B/+B,EAAAi/B,EACArgC,EAAAsgC,EACAhxB,EAAAixB,EAAAxlC,KAAA6oC,kBAAApd,GACAzrB,KAAA+pC,YACA,SAAA51B,EAAA/lB,EAAAC,EAAAo9B,GACA,OAAAzrB,KAAAsqC,gBAAAn2B,EAAA/lB,EAAAC,EAAAo9B,EAAAplB,IACWzb,KAAAoV,WAAA4pC,4BACX5pC,KAAA6pC,0BAUA,OATAQ,EAAA1/C,MAEAs4C,GACAoH,EAAAzH,YAAAK,EACAoH,EAAAlH,sBACA/+B,EAAAsnB,QAAAuc,EAAAoC,IAEAjmC,EAAAhG,IAAA6pC,EAAAoC,GAEAA,EAnCA,OAAArqC,KAAAsqC,gBAAAn2B,EAAA/lB,EAAAC,EAAAo9B,EAAAplB,GAAApB,IAiDA87B,EAAAv6C,UAAA8jD,gBAAA,SAAAn2B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,GACA,IAAAg+B,EAAA,KACAgF,EAAuB1hD,OAAA2+C,EAAA,EAAA3+C,CAAS4tB,EAAA/lB,EAAAC,GAChC1D,EAAAqV,KAAAsU,SACA,GAAAtU,KAAA4nC,UAAAjI,YAAAsI,IAKA,IADAhF,EAAAjjC,KAAA4nC,UAAA39C,IAAAg+C,IACAt9C,OAAA,CAIA,IAAAi4C,EAAAK,EACAA,EAAAjjC,KAAAiqC,YAAA91B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,EAAAta,GAGAi4C,EAAAvhB,YAAsC6hB,EAAA,EAASxlC,KAE/CulC,EAAAL,0BAEAK,EAAAL,cAEAK,EAAAE,sBACAnjC,KAAA4nC,UAAAlc,QAAAuc,EAAAhF,SAnBAA,EAAAjjC,KAAAiqC,YAAA91B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,EAAAta,GACAqV,KAAA4nC,UAAAxpC,IAAA6pC,EAAAhF,GAqBA,OAAAA,GAQAlC,EAAAv6C,UAAA+jD,2BAAA,SAAAxoB,GACA,GAAS4kB,EAAA,GACT3mC,KAAA6pC,0BAAA9nB,EADA,CAKA,QAAApL,KADA3W,KAAA6pC,yBAAA9nB,EACA/hB,KAAA0pC,uBACA1pC,KAAA0pC,uBAAA/yB,GAAA3e,QAEAgI,KAAAmd,YAeA4jB,EAAAv6C,UAAAgkD,yBAAA,SAAAvlC,EAAAwlC,GACA,GAAQ9D,EAAA,EAA0B,CAClC,IAAAnrB,EAAiBj1B,OAAAqiD,EAAA,EAAAriD,CAAa0e,GAC9B,GAAAuW,EAAA,CACA,IAAAwuB,EAAsBzjD,OAAA+zB,EAAA,EAAA/zB,CAAMi1B,GAC5BwuB,KAAAhqC,KAAA2pC,wBACA3pC,KAAA2pC,sBAAAK,GAAAS,MAMA1J,EAvUa,CC7BF,SAAA0G,GACX,SAAA8B,EAAAxpC,GAEA0nC,EAAA/gD,KAAAsZ,KAAA,CACAghC,aAAAjhC,EAAAihC,aACAld,UAAA/jB,EAAA+jB,UACAod,OAAAnhC,EAAAmhC,OACAj8B,WAAAlF,EAAAkF,WACAs5B,MAAAx+B,EAAAw+B,MACA18B,SAAA9B,EAAA8B,SACAw/B,eAAAthC,EAAAshC,eACA5Z,MAAA1nB,EAAA0nB,MACA8Z,WAAAxhC,EAAAwhC,WACA52C,IAAAoV,EAAApV,IACA62C,wBAAAzhC,EAAAyhC,0BAOAxhC,KAAA0qC,0BAAA3qC,EAAAuhC,gBAMAthC,KAAAohC,iBAAArhC,EAAAqhC,iBAMAphC,KAAAshC,gBAAAvhC,EAAAuhC,gBAAAvhC,EAAAuhC,gBAAA12C,KAAAoV,MAA0F2qC,EAAA,EAM1F3qC,KAAA+rB,KAAA,KAEAhsB,EAAAgsB,KACA/rB,KAAA4qC,QAAA7qC,EAAAgsB,MACKhsB,EAAA+rB,KACL9rB,KAAA6qC,OAAA9qC,EAAA+rB,KAGA/rB,EAAAuhC,iBACAthC,KAAA8qC,mBAAA/qC,EAAAuhC,gBAAAthC,KAAA8/B,MAOA9/B,KAAA+qC,iBAAA,GA2HA,OAvHAtD,IAAA8B,EAAAxmC,UAAA0kC,GACA8B,EAAA/iD,UAAAD,OAAAmE,OAAA+8C,KAAAjhD,WACA+iD,EAAA/iD,UAAAwc,YAAAumC,EAOAA,EAAA/iD,UAAAwkD,oBAAA,WACA,OAAAhrC,KAAAohC,kBAQAmI,EAAA/iD,UAAAykD,mBAAA,WACA,OAAAjrC,KAAAshC,iBAUAiI,EAAA/iD,UAAA0kD,QAAA,WACA,OAAAlrC,KAAA+rB,MAQAwd,EAAA/iD,UAAA4jD,iBAAA,SAAA3hD,GACA,IAGAM,EAHAk6C,EAAuDx6C,EAAA,OACvD0iD,EAAc5kD,OAAA+zB,EAAA,EAAA/zB,CAAM08C,GACpBmI,EAAAnI,EAAA5hB,WAEA+pB,GAAqBlI,EAAA,EAASvlC,SAC9BqC,KAAA+qC,iBAAAI,IAAA,EACApiD,EAAasgD,GACR8B,KAAAnrC,KAAA+qC,0BACL/qC,KAAA+qC,iBAAAI,GACApiD,EAAAqiD,GAA0BlI,EAAA,EAASzoC,MAAS4uC,EAC5C+B,GAAsBlI,EAAA,EAAStlC,QAAAwtC,GAAwBlI,EAAA,EAASplC,MACtDurC,OAAahgD,GAEvBA,MAAAN,GACAiX,KAAAsO,cAAA,IAA6B86B,EAAergD,EAAAk6C,KAS5CsG,EAAA/iD,UAAA6kD,oBAAA,SAAAjK,GACAphC,KAAA4nC,UAAA5vC,QACAgI,KAAAohC,mBACAphC,KAAAmd,WASAosB,EAAA/iD,UAAAskD,mBAAA,SAAAxJ,EAAA32C,GACAqV,KAAAshC,kBACAthC,KAAA4nC,UAAA3C,0BACA,IAAAt6C,EACAqV,KAAAqoC,OAAA19C,GAEAqV,KAAAmd,WASAosB,EAAA/iD,UAAAqkD,OAAA,SAAA/e,GACA,IAAAC,EAAA/rB,KAAA+rB,KAA2BxlC,OAAAokD,EAAA,EAAApkD,CAASulC,GACpC9rB,KAAA4qC,QAAA7e,IAQAwd,EAAA/iD,UAAAokD,QAAA,SAAA7e,GACA/rB,KAAA+rB,OACA,IAAAphC,EAAAohC,EAAA/W,KAAA,MACAhV,KAAA0qC,yBACA1qC,KAAA8qC,mBAA8BvkD,OAAAokD,EAAA,EAAApkD,CAAmBwlC,EAAA/rB,KAAA6B,UAAAlX,GAEjDqV,KAAAqoC,OAAA19C,IAOA4+C,EAAA/iD,UAAA0iD,QAAA,SAAA/0B,EAAA/lB,EAAAC,GACA,IAAA45C,EAAuB1hD,OAAA2+C,EAAA,EAAA3+C,CAAS4tB,EAAA/lB,EAAAC,GAChC2R,KAAA4nC,UAAAjI,YAAAsI,IACAjoC,KAAA4nC,UAAA39C,IAAAg+C,IAIAsB,EAlLW,CH8SI,IE8Df,SAAAC,EAAA8B,EAAAjjD,GAC+CijD,EAAA9K,WAAAn4C,MAGhCmD,EAAA,oEE7WR,SAAA07B,EAAAz2B,GACP,OAAAA,0CCjCe86C,EACf,SADeA,EAEf,aAFeA,EAGf,iFCgKAC,EAAA,EAyDIC,EAAI,SAAA59B,GACR,SAAA69B,EAAA71B,GACAhI,EAAAnnB,KAAAsZ,MAEA,IAAAD,EAAkBxZ,OAAAwO,EAAA,EAAAxO,CAAM,GAAGsvB,GAM3B7V,KAAA2rC,OAAA,MAMA3rC,KAAA4rC,YAAA,GAMA5rC,KAAA6rC,oBAEA7rC,KAAA8rC,kBAAA9rC,KAAA8rC,kBAAAlhD,KAAAoV,MAOAA,KAAA4hC,YAAuBr7C,OAAAi1B,EAAA,EAAAj1B,CAAgBwZ,EAAAkF,WAAA,aAEvCjF,KAAA+rC,cAAAhsC,GA25BA,OAx5BA8N,IAAA69B,EAAA3oC,UAAA8K,GACA69B,EAAAllD,UAAAD,OAAAmE,OAAAmjB,KAAArnB,WACAklD,EAAAllD,UAAAwc,YAAA0oC,EAMAA,EAAAllD,UAAAulD,cAAA,SAAAhsC,GAKA,IAAAs+B,EAAA,GACAA,EAAekN,QAAYliD,IAAA0W,EAAAtP,OAC3BsP,EAAAtP,OAAA,KAEA,IAAAu7C,EAw6BO,SAAAjsC,GACP,IAAAksC,EACA/pB,EACAD,EAOAkH,OAAA9/B,IAAA0W,EAAAopB,QACAppB,EAAAopB,QAAAqiB,EAEApiB,OAAA//B,IAAA0W,EAAAqpB,QACArpB,EAAAqpB,QAPA,GASA8iB,OAAA7iD,IAAA0W,EAAAmsC,WACAnsC,EAAAmsC,WATA,EAWA,QAAA7iD,IAAA0W,EAAAiS,YAAA,CACA,IAAAA,EAAAjS,EAAAiS,YACAkQ,EAAAlQ,EAAAmX,GACAlH,OAAA54B,IAAA2oB,EAAAoX,GACApX,EAAAoX,GAAApX,IAAA5rB,OAAA,GACA6lD,ECxsCO,SAAAj6B,GACP,gBAOAthB,EAAAqgB,EAAApJ,GACA,QAAAte,IAAAqH,EAAA,CACA,IAAAyjB,EAAgB5tB,OAAAgyB,EAAA,EAAAhyB,CAAiByrB,EAAAthB,EAAAiX,GACjCwM,EAAY5tB,OAAAuc,EAAA,EAAAvc,CAAK4tB,EAAApD,EAAA,EAAAiB,EAAA5rB,OAAA,GACjB,IAAAmiB,EAAA1Y,KAAAy3B,MAAAnT,GACA,GAAAA,GAAA5L,KAAAyJ,EAAA5rB,OAAA,GACA,IAAA+lD,EAAAn6B,EAAAzJ,GAAAyJ,EAAAzJ,EAAA,GACA,OAAAyJ,EAAAzJ,GAAA1Y,KAAA2jB,IAAA24B,EAAAh4B,EAAA5L,GAEA,OAAAyJ,EAAAzJ,KDurC2B6jC,CAC3Bp6B,OACG,CAEH,IAAA/M,EAAqB1e,OAAAi1B,EAAA,EAAAj1B,CAAgBwZ,EAAAkF,WAAA,aACrChX,EAAAgX,EAAA9D,YACAvQ,EAAA3C,EAIA4B,KAAAE,IAAexJ,OAAAqgB,EAAA,EAAArgB,CAAQ0H,GAAU1H,OAAAqgB,EAAA,EAAArgB,CAAS0H,IAF1C,IAAYqT,EAAA,EAAgBA,EAAA,EAAK4C,SACjCe,EAAA5D,mBAGAgrC,EAAAz7C,EAAsC+1C,EAAA,EAAiB92C,KAAA2jB,IA5BvD,EA6BAg4B,GAEAc,EAAAD,EAAAx8C,KAAA2jB,IA/BA,EADA,GAiCAg4B,QAIAniD,KADA64B,EAAAniB,EAAAmiB,eAEAiH,EAAA,EAEAjH,EAAAmqB,EAAAx8C,KAAA2jB,IAAA04B,EAAA/iB,QAKA9/B,KADA44B,EAAAliB,EAAAkiB,iBAIAA,OAFA54B,IAAA0W,EAAAqpB,aACA//B,IAAA0W,EAAAmiB,cACAA,EAAAryB,KAAA2jB,IAAA04B,EAAA9iB,GAEAijB,EAAAx8C,KAAA2jB,IAAA04B,EAAA9iB,GAGAkjB,GAKAljB,EAAAD,EAAAt5B,KAAAy3B,MACAz3B,KAAA4T,IAAAye,EAAAD,GAAApyB,KAAA4T,IAAAyoC,IACAjqB,EAAAC,EAAAryB,KAAA2jB,IAAA04B,EAAA9iB,EAAAD,GAEA8iB,ECptCO,SAAAE,EAAAjqB,EAAAqqB,GACP,gBAOA77C,EAAAqgB,EAAApJ,GACA,QAAAte,IAAAqH,EAAA,CACA,IAAAjB,GAAAkY,EAAA,KACA6kC,EAAA38C,KAAAy3B,MACAz3B,KAAA4T,IAAAye,EAAAxxB,GAAAb,KAAA4T,IAAA0oC,GAAA18C,GACAg9C,EAAA58C,KAAAE,IAAAy8C,EAAAz7B,EAAA,GAIA,YAHA1nB,IAAAkjD,IACAE,EAAA58C,KAAAC,IAAA28C,EAAAF,IAEArqB,EAAAryB,KAAA2jB,IAAA24B,EAAAM,KDmsC2BC,CAC3BR,EAAAhqB,EAAAkH,EAAAD,GAEA,OAAUwjB,WAAAV,EAAA/pB,gBACVD,gBAAAkH,UAAA+iB,cAj/BAU,CAAA7sC,GAMAC,KAAA6sC,eAAAb,EAAA9pB,cAMAliB,KAAA8sC,eAAAd,EAAA/pB,cAMAjiB,KAAA+sC,YAAAf,EAAAE,WAMAlsC,KAAAgtC,aAAAjtC,EAAAiS,YAMAhS,KAAAitC,SAAAjB,EAAA7iB,QAEA,IAAA+jB,EA03BO,SAAAntC,GACP,YAAA1W,IAAA0W,EAAA9R,QFpqCOA,EEqqCgB8R,EAAA9R,OFpqCvB,SAKAwC,GACA,OAAAA,EACA,CACUlK,OAAAuc,EAAA,EAAAvc,CAAKkK,EAAA,GAAAxC,EAAA,GAAAA,EAAA,IACL1H,OAAAuc,EAAA,EAAAvc,CAAKkK,EAAA,GAAAxC,EAAA,GAAAA,EAAA,UAGf,IE0pCWi5B,EFvqCJ,IAAAj5B,EEySPk/C,CAAAptC,GACAksC,EAAAD,EAAAW,WACAS,EAu9BO,SAAArtC,GAGP,QAFA1W,IAAA0W,EAAAstC,gBACAttC,EAAAstC,eACA,CACA,IAAA77B,EAAAzR,EAAAyR,kBACA,YAAAnoB,IAAAmoB,IAAA,IAAAA,EACajrB,OAAA+mD,EAAA,EAAA/mD,IACR,IAAAirB,EACQ87B,EAAA,EACR,iBAAA97B,EACQjrB,OAAA+mD,EAAA,EAAA/mD,CAAairB,GAEb87B,EAAA,EAGb,OAAWA,EAAA,EAt+BXC,CAAAxtC,GAMAC,KAAAwtC,aAAA,CACA/8C,OAAAy8C,EACAx8C,WAAAu7C,EACAt7C,SAAAy8C,QAGA/jD,IAAA0W,EAAArP,WACA2tC,EAAiBkN,GAAYxrC,EAAArP,gBACxBrH,IAAA0W,EAAA8P,OACLwuB,EAAiBkN,GAAYvrC,KAAA6R,oBAC7B7R,KAAA6sC,eAAA9sC,EAAA8P,KAAA7P,KAAAitC,UAEAjtC,KAAAgtC,eACA3O,EAAmBkN,GAA2BhlD,OAAAuc,EAAA,EAAAvc,CAC9CkuB,OAAAzU,KAAA+R,iBAAAssB,EAAoDkN,IACpDvrC,KAAA8sC,eAAA9sC,KAAA6sC,kBAGAxO,EAAekN,QAAYliD,IAAA0W,EAAApP,SAAAoP,EAAApP,SAAA,EAC3BqP,KAAAiO,cAAAowB,GAMAr+B,KAAAytC,SAAA1tC,GAYA2rC,EAAAllD,UAAAknD,mBAAA,SAAAC,GACA,IAAA5tC,EAAkBxZ,OAAAwO,EAAA,EAAAxO,CAAM,GAAGyZ,KAAAytC,UAe3B,YAZApkD,IAAA0W,EAAArP,WACAqP,EAAArP,WAAAsP,KAAA+R,gBAEAhS,EAAA8P,KAAA7P,KAAA4tC,UAIA7tC,EAAAtP,OAAAuP,KAAAjT,YAGAgT,EAAApP,SAAAqP,KAAA0R,cAEWnrB,OAAAwO,EAAA,EAAAxO,CAAM,GAAGwZ,EAAA4tC,IAoCpBjC,EAAAllD,UAAA2qB,QAAA,SAAA08B,GACA,IAGA79C,EAHAsZ,EAAAC,UAEAukC,EAAAvkC,UAAAnjB,OAMA,GAJA0nD,EAAA,sBAAAvkC,UAAAukC,EAAA,KACA99C,EAAAuZ,UAAAukC,EAAA,KACAA,IAEA9tC,KAAA+tC,QAAA,CAEA,IAAAxP,EAAAh1B,UAAAukC,EAAA,GAaA,OAZAvP,EAAA9tC,QACAuP,KAAAsR,UAAAitB,EAAA9tC,aAEApH,IAAAk1C,EAAA1uB,MACA7P,KAAAguC,QAAAzP,EAAA1uB,WAEAxmB,IAAAk1C,EAAA5tC,UACAqP,KAAAiuC,YAAA1P,EAAA5tC,eAEAX,GACAk+C,EAAAl+C,GAAA,IASA,IALA,IAAAgC,EAAAm8C,KAAAC,MACA39C,EAAAuP,KAAAjT,YAAAzB,QACAoF,EAAAsP,KAAA+R,gBACAphB,EAAAqP,KAAA0R,cACA28B,EAAA,GACAnoD,EAAA,EAAmBA,EAAA4nD,IAAoB5nD,EAAA,CACvC,IAAA6Z,EAAgDuJ,EAAApjB,GAEhDooD,EAA2C,CAC3Ct8C,QACAu8C,UAAA,EACA58B,OAAA5R,EAAA4R,OACAP,cAAA/nB,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IACAC,OAAAtR,EAAAsR,QAAkCA,EAAA,GAoBlC,GAjBAtR,EAAAtP,SACA69C,EAAApd,aAAAzgC,EACA69C,EAAAtd,aAAAjxB,EAAAtP,OACAA,EAAA69C,EAAAtd,mBAGA3nC,IAAA0W,EAAA8P,MACAy+B,EAAAnd,iBAAAzgC,EACA49C,EAAArd,iBAAAjxB,KAAA6R,oBACA7R,KAAA6sC,eAAA9sC,EAAA8P,KAAA7P,KAAAitC,SAAA,GACAv8C,EAAA49C,EAAArd,kBACOlxB,EAAArP,aACP49C,EAAAnd,iBAAAzgC,EACA49C,EAAArd,iBAAAlxB,EAAArP,WACAA,EAAA49C,EAAArd,uBAGA5nC,IAAA0W,EAAApP,SAAA,CACA29C,EAAAE,eAAA79C,EACA,IAAAogB,EAAoBxqB,OAAAuc,EAAA,EAAAvc,CAAMwZ,EAAApP,WAAAd,KAAAyN,GAAA,EAAAzN,KAAAyN,IAAAzN,KAAAyN,GAC1BgxC,EAAAG,eAAA99C,EAAAogB,EACApgB,EAAA29C,EAAAG,eAGAH,EAAAt+C,WAGA0+C,EAAAJ,GACAA,EAAAC,UAAA,EAGAv8C,GAAAs8C,EAAAl9B,SAEAi9B,EAAA/nD,KAAAgoD,GAEAtuC,KAAA4rC,YAAAtlD,KAAA+nD,GACAruC,KAAA2uC,QAAiBC,EAAA,EAAQ9kC,UAAA,GACzB9J,KAAA8rC,qBAQAJ,EAAAllD,UAAAqoD,aAAA,WACA,OAAA7uC,KAAA2rC,OAAuBiD,EAAA,EAAQ9kC,WAAA,GAQ/B4hC,EAAAllD,UAAAsoD,eAAA,WACA,OAAA9uC,KAAA2rC,OAAuBiD,EAAA,EAAQ7kC,aAAA,GAO/B2hC,EAAAllD,UAAAuoD,iBAAA,WACA/uC,KAAA2uC,QAAiBC,EAAA,EAAQ9kC,WAAA9J,KAAA2rC,OAAyBiD,EAAA,EAAQ9kC,YAC1D,QAAA5jB,EAAA,EAAAgI,EAAA8R,KAAA4rC,YAAAxlD,OAAiDF,EAAAgI,IAAQhI,EAAA,CACzD,IAAAmoD,EAAAruC,KAAA4rC,YAAA1lD,GACAmoD,EAAA,GAAAr+C,UACAk+C,EAAAG,EAAA,GAAAr+C,UAAA,GAGAgQ,KAAA4rC,YAAAxlD,OAAA,GAMAslD,EAAAllD,UAAAslD,kBAAA,WAKA,QAJAziD,IAAA2W,KAAA6rC,sBACAmD,qBAAAhvC,KAAA6rC,qBACA7rC,KAAA6rC,yBAAAxiD,GAEA2W,KAAA6uC,eAAA,CAKA,IAFA,IAAAT,EAAAD,KAAAC,MACAa,GAAA,EACA/oD,EAAA8Z,KAAA4rC,YAAAxlD,OAAA,EAA6CF,GAAA,IAAQA,EAAA,CAGrD,IAFA,IAAAmoD,EAAAruC,KAAA4rC,YAAA1lD,GACAgpD,GAAA,EACAjyC,EAAA,EAAAgiB,EAAAovB,EAAAjoD,OAAyC6W,EAAAgiB,IAAQhiB,EAAA,CACjD,IAAAqxC,EAAAD,EAAApxC,GACA,IAAAqxC,EAAAC,SAAA,CAGA,IAAAY,EAAAf,EAAAE,EAAAt8C,MACAo9C,EAAAd,EAAAl9B,SAAA,EAAA+9B,EAAAb,EAAAl9B,SAAA,EACAg+B,GAAA,GACAd,EAAAC,UAAA,EACAa,EAAA,GAEAF,GAAA,EAEA,IAAAG,EAAAf,EAAAj9B,OAAA+9B,GACA,GAAAd,EAAApd,aAAA,CACA,IAAA7/B,EAAAi9C,EAAApd,aAAA,GACAz/B,EAAA68C,EAAApd,aAAA,GAGA9iC,EAAAiD,EAAAg+C,GAFAf,EAAAtd,aAAA,GAEA3/B,GACAhD,EAAAoD,EAAA49C,GAFAf,EAAAtd,aAAA,GAEAv/B,GACAuO,KAAA5B,IAAmBmtC,EAAY,CAAAn9C,EAAAC,IAE/B,GAAAigD,EAAAnd,kBAAAmd,EAAArd,iBAAA,CACA,IAAAvgC,EAAA,IAAA2+C,EACAf,EAAArd,iBACAqd,EAAAnd,iBAAAke,GAAAf,EAAArd,iBAAAqd,EAAAnd,kBACAmd,EAAA38B,QACA3R,KAAA5B,IAAqBmtC,EACrBvrC,KAAAoS,oBAAA1hB,EAAA49C,EAAA38B,SAEA3R,KAAA5B,IAAmBmtC,EAAY76C,GAE/B,QAAArH,IAAAilD,EAAAE,qBAAAnlD,IAAAilD,EAAAG,eAAA,CACA,IAAA99C,EAAA,IAAA0+C,EACY9oD,OAAAuc,EAAA,EAAAvc,CAAM+nD,EAAAG,eAAA5+C,KAAAyN,GAAA,EAAAzN,KAAAyN,IAAAzN,KAAAyN,GAClBgxC,EAAAE,eAAAa,GAAAf,EAAAG,eAAAH,EAAAE,gBACAF,EAAA38B,QACA3R,KAAA5B,IAAqBmtC,EACrBvrC,KAAAsvC,sBAAA3+C,EAAA29C,EAAA38B,SAEA3R,KAAA5B,IAAmBmtC,EAAY56C,GAG/B,GADAs+C,GAAA,GACAX,EAAAC,SACA,OAGA,GAAAW,EAAA,CACAlvC,KAAA4rC,YAAA1lD,GAAA,KACA8Z,KAAA2uC,QAAqBC,EAAA,EAAQ9kC,WAAA,GAC7B,IAAA9Z,EAAAq+C,EAAA,GAAAr+C,SACAA,GACAk+C,EAAAl+C,GAAA,IAKAgQ,KAAA4rC,YAAA5rC,KAAA4rC,YAAA2D,OAAAC,SACAP,QAAA5lD,IAAA2W,KAAA6rC,sBACA7rC,KAAA6rC,oBAAA4D,sBAAAzvC,KAAA8rC,sBASAJ,EAAAllD,UAAA8oD,sBAAA,SAAA3+C,EAAAghB,GACA,IAAAlhB,EACAwgB,EAAAjR,KAAAjT,YAMA,YALA1D,IAAA4nB,IACAxgB,EAAA,CAAAwgB,EAAA,GAAAU,EAAA,GAAAV,EAAA,GAAAU,EAAA,IACMprB,OAAAiI,EAAA,EAAAjI,CAAgBkK,EAAAE,EAAAqP,KAAA0R,eAChBnrB,OAAAiI,EAAA,EAAAjI,CAAakK,EAAAkhB,IAEnBlhB,GAQAi7C,EAAAllD,UAAA4rB,oBAAA,SAAA1hB,EAAAihB,GACA,IAAAlhB,EACAwgB,EAAAjR,KAAAjT,YACA+kB,EAAA9R,KAAA+R,qBACA1oB,IAAA4nB,QAAA5nB,IAAAyoB,IAGArhB,EAAA,CAFAkhB,EAAA,GAAAjhB,GAAAihB,EAAA,GAAAV,EAAA,IAAAa,EACAH,EAAA,GAAAjhB,GAAAihB,EAAA,GAAAV,EAAA,IAAAa,IAGA,OAAArhB,GAOAi7C,EAAAllD,UAAAkpD,qBAAA,WACA,IAAA9+C,EAAA,UACA++C,EAAA,2BAAgDppD,OAAA+zB,EAAA,EAAA/zB,CAAMyZ,MAAA,KACtD6X,EAAAhwB,SAAA+nD,cAAAD,GACA,GAAA93B,EAAA,CACA,IAAAg4B,EAAAC,iBAAAj4B,GACAjnB,EAAA,GAAA07B,SAAAujB,EAAAh4C,MAAA,IACAjH,EAAA,GAAA07B,SAAAujB,EAAAr3C,OAAA,IAEA,OAAA5H,GASA86C,EAAAllD,UAAA0qB,gBAAA,SAAAzgB,GACA,OAAAuP,KAAAwtC,aAAA/8C,WAWAi7C,EAAAllD,UAAAqrB,oBAAA,SAAAnhB,EAAAq/C,EAAAn+B,GACA,IAAAb,EAAAg/B,GAAA,EACApoC,EAAAiK,GAAA,EACA,OAAA5R,KAAAwtC,aAAA98C,aAAAqgB,EAAApJ,IAUA+jC,EAAAllD,UAAAgrB,kBAAA,SAAA7gB,EAAAo/C,GACA,IAAAh/B,EAAAg/B,GAAA,EACA,OAAA/vC,KAAAwtC,aAAA78C,WAAAogB,IASA26B,EAAAllD,UAAAuG,UAAA,WACA,OACgEiT,KAAA/V,IAAcshD,IAO9EG,EAAAllD,UAAAwpD,eAAA,WACA,OAAAhwC,KAAAwtC,cAOA9B,EAAAllD,UAAAypD,SAAA,SAAAC,GACA,YAAA7mD,IAAA6mD,GACAA,EAAA,GAAAlwC,KAAA2rC,OAAA,GACAuE,EAAA,GAAAlwC,KAAA2rC,OAAA,GACAuE,GAEAlwC,KAAA2rC,OAAArgD,SAcAogD,EAAAllD,UAAAk1C,gBAAA,SAAAje,GACA,IAAA7sB,EAAA6sB,GAAAzd,KAAA0vC,uBACAj/C,EAAkEuP,KAAAjT,YAC9DxG,OAAA4pD,EAAA,EAAA5pD,CAAMkK,EAAA,GACV,IAAAC,EAAwCsP,KAAA+R,gBACpCxrB,OAAA4pD,EAAA,EAAA5pD,MAAM8C,IAAAqH,EAAA,GACV,IAAAC,EAAsCqP,KAAA0R,cAGtC,OAFInrB,OAAA4pD,EAAA,EAAA5pD,MAAM8C,IAAAsH,EAAA,GAECpK,OAAAqgB,EAAA,EAAArgB,CAAiBkK,EAAAC,EAAAC,EAAAC,IAQ5B86C,EAAAllD,UAAA2rB,iBAAA,WACA,OAAAnS,KAAA6sC,gBAQAnB,EAAAllD,UAAA0rB,iBAAA,WACA,OAAAlS,KAAA8sC,gBAQApB,EAAAllD,UAAA2uB,WAAA,WACA,OAA6BnV,KAAAowC,qBAAApwC,KAAA8sC,iBAQ7BpB,EAAAllD,UAAA6pD,WAAA,SAAAxgC,GACA7P,KAAA+rC,cAAA/rC,KAAA0tC,mBAAA,CAAgDtkB,QAAAvZ,MAQhD67B,EAAAllD,UAAA0uB,WAAA,WACA,OAA6BlV,KAAAowC,qBAAApwC,KAAA6sC,iBAQ7BnB,EAAAllD,UAAA8pD,WAAA,SAAAzgC,GACA7P,KAAA+rC,cAAA/rC,KAAA0tC,mBAAA,CAAgDvkB,QAAAtZ,MAQhD67B,EAAAllD,UAAA47C,cAAA,WACA,OAAApiC,KAAA4hC,aASA8J,EAAAllD,UAAAurB,cAAA,WACA,OAAuC/R,KAAA/V,IAAcshD,IASrDG,EAAAllD,UAAAyrB,eAAA,WACA,OAAAjS,KAAAgtC,cAWAtB,EAAAllD,UAAAs1C,uBAAA,SAAA7tC,EAAAwvB,GACA,IAAA7sB,EAAA6sB,GAAAzd,KAAA0vC,uBACAa,EAAsBhqD,OAAAqgB,EAAA,EAAArgB,CAAQ0H,GAAA2C,EAAA,GAC9B4/C,EAAsBjqD,OAAAqgB,EAAA,EAAArgB,CAAS0H,GAAA2C,EAAA,GAC/B,OAAAf,KAAAE,IAAAwgD,EAAAC,IASA9E,EAAAllD,UAAAiqD,8BAAA,SAAAC,GACA,IAAAvE,EAAAuE,GAAA,EACAxuB,EAAAliB,KAAA6sC,eACA5qB,EAAAjiB,KAAA8sC,eACA/8C,EAAAF,KAAA4T,IAAAye,EAAAD,GAAApyB,KAAA4T,IAAA0oC,GACA,gBAKA9hD,GAEA,OADA63B,EAAAryB,KAAA2jB,IAAA24B,EAAA9hD,EAAA0F,KAWA27C,EAAAllD,UAAAkrB,YAAA,WACA,OAA6B1R,KAAA/V,IAAcshD,IAS3CG,EAAAllD,UAAAmqD,8BAAA,SAAAD,GACA,IAAAvE,EAAAuE,GAAA,EACAxuB,EAAAliB,KAAA6sC,eACA5qB,EAAAjiB,KAAA8sC,eACA/8C,EAAAF,KAAA4T,IAAAye,EAAAD,GAAApyB,KAAA4T,IAAA0oC,GACA,gBAKAz7C,GAEA,OADAb,KAAA4T,IAAAye,EAAAxxB,GAAAb,KAAA4T,IAAA0oC,GAAAp8C,IASA27C,EAAAllD,UAAA66B,SAAA,SAAAoK,GACA,IAAAh7B,EAAiEuP,KAAAjT,YACjEkY,EAAAjF,KAAAoiC,gBACA1xC,EAAuCsP,KAAA+R,gBACvC6+B,EAAAlgD,EAAA+6B,EACA96B,EAAAqP,KAAA0R,cACA,OAEAjhB,OAAA,CACAZ,KAAAo6B,MAAAx5B,EAAA,GAAAmgD,KACA/gD,KAAAo6B,MAAAx5B,EAAA,GAAAmgD,MAEA3rC,gBAAA5b,IAAA4b,IAAA,KACAvU,aACAC,WACAkf,KAAA7P,KAAA4tC,YAYAlC,EAAAllD,UAAAonD,QAAA,WACA,IAAA/9B,EACAnf,EAAAsP,KAAA+R,gBAIA,YAHA1oB,IAAAqH,IACAmf,EAAA7P,KAAAowC,qBAAA1/C,IAEAmf,GASA67B,EAAAllD,UAAA4pD,qBAAA,SAAA1/C,GACA,IACAX,EAAAm8C,EADAz8C,EAAAuQ,KAAAitC,UAAA,EAEA,GAAAjtC,KAAAgtC,aAAA,CACA,IAAA6D,EAAoBtqD,OAAAgyB,EAAA,EAAAhyB,CAAiByZ,KAAAgtC,aAAAt8C,EAAA,GACrCjB,EAAAohD,EACA9gD,EAAAiQ,KAAAgtC,aAAA6D,GAEA3E,EADA2E,GAAA7wC,KAAAgtC,aAAA5mD,OAAA,EACA,EAEA2J,EAAAiQ,KAAAgtC,aAAA6D,EAAA,QAGA9gD,EAAAiQ,KAAA6sC,eACAX,EAAAlsC,KAAA+sC,YAEA,OAAAt9C,EAAAI,KAAA4T,IAAA1T,EAAAW,GAAAb,KAAA4T,IAAAyoC,IASAR,EAAAllD,UAAAsqD,qBAAA,SAAAjhC,GACA,OAA6B7P,KAAA6R,oBAC7B7R,KAAA6sC,eAAAh9B,EAAA7P,KAAAitC,SAAA,IAaAvB,EAAAllD,UAAAuqD,IAAA,SAAAC,EAAAn7B,GACA,IAMAo7B,EANAlxC,EAAA8V,GAAA,GACAjlB,EAAAmP,EAAAnP,KACAA,IACAA,EAAAoP,KAAA0vC,wBAIInpD,OAAA4pD,EAAA,EAAA5pD,CAAM6W,MAAA2K,QAAAipC,IAAwD,qBAAA71B,sBAClE,IACA/d,MAAA2K,QAAAipC,IACMzqD,OAAA4pD,EAAA,EAAA5pD,EAAQA,OAAAqgB,EAAA,EAAArgB,CAAOyqD,GACrB,IACAC,EAAiB1qD,OAAAy+B,EAAA,EAAAz+B,CAAiByqD,IAC7BA,EAAA31B,YAAyCoJ,EAAA,EAAYzoB,QAC1Dg1C,IAAA7vC,aACA8vC,EAAiB1qD,OAAAy+B,EAAA,EAAAz+B,CAAiByqD,IAClC33C,OAAA2G,KAAA0R,cAA0CnrB,OAAAqgB,EAAA,EAAArgB,CAASyqD,KAEnDC,EAAAD,EAGA,IAIA/uB,EAJArpB,OAAAvP,IAAA0W,EAAAnH,QAAAmH,EAAAnH,QAAA,UACAiZ,OAAAxoB,IAAA0W,EAAA8R,qBACA9R,EAAA8R,oBACAg/B,OAAAxnD,IAAA0W,EAAA8wC,SAAA9wC,EAAA8wC,QAGA5uB,OADA54B,IAAA0W,EAAAkiB,cACAliB,EAAAkiB,mBACK54B,IAAA0W,EAAAqpB,QACLppB,KAAA6R,oBACA7R,KAAA6sC,eAAA9sC,EAAAqpB,QAAAppB,KAAAitC,SAAA,GAEA,EAaA,IAXA,IAAAiE,EAAAD,EAAA30B,qBAGA3rB,EAAAqP,KAAA0R,cACAgI,EAAA7pB,KAAAiB,KAAAH,GACAgpB,EAAA9pB,KAAAmB,KAAAL,GACAwgD,EAAA7hD,IACA8hD,EAAA9hD,IACA+hD,GAAA/hD,IACAgiD,GAAAhiD,IACAK,EAAAshD,EAAAt0B,YACAz2B,EAAA,EAAAgI,EAAAgjD,EAAA9qD,OAAuCF,EAAAgI,EAAQhI,GAAAyJ,EAAA,CAC/C,IAAA4hD,EAAAL,EAAAhrD,GAAAwzB,EAAAw3B,EAAAhrD,EAAA,GAAAyzB,EACA63B,EAAAN,EAAAhrD,GAAAyzB,EAAAu3B,EAAAhrD,EAAA,GAAAwzB,EACAy3B,EAAAthD,KAAAC,IAAAqhD,EAAAI,GACAH,EAAAvhD,KAAAC,IAAAshD,EAAAI,GACAH,EAAAxhD,KAAAE,IAAAshD,EAAAE,GACAD,EAAAzhD,KAAAE,IAAAuhD,EAAAE,GAIA,IAAA9gD,EAAAsP,KAAA87B,uBACA,CAAAqV,EAAAC,EAAAC,EAAAC,GACA,CAAA1gD,EAAA,GAAAgI,EAAA,GAAAA,EAAA,GAAAhI,EAAA,GAAAgI,EAAA,GAAAA,EAAA,KAGA,GAFAlI,EAAA+gD,MAAA/gD,GAAAuxB,EACApyB,KAAAE,IAAAW,EAAAuxB,GACApQ,EAAA,CACA,IAAA6/B,EAAA1xC,KAAA6R,oBAAAnhB,EAAA,MACAmgD,GAAAa,EAAAhhD,IACAghD,EAAA1xC,KAAA6R,oBACA6/B,GAAA,MAEAhhD,EAAAghD,EAIA/3B,KACA,IAAAg4B,GAAAR,EAAAE,GAAA,EACAO,GAAAR,EAAAE,GAAA,EAKA7gD,EAAA,EAJAkhD,IAAA/4C,EAAA,GAAAA,EAAA,MAAAlI,GAEAgpB,GADAk4B,IAAAh5C,EAAA,GAAAA,EAAA,MAAAlI,GACAipB,EACAi4B,EAAAl4B,EAAAi4B,EAAAh4B,GAEA3pB,EAAA+P,EAAA/P,SAAA+P,EAAA/P,SAAyDotC,EAAA,OAEzD/zC,IAAA0W,EAAAqR,SACApR,KAAAmR,QAAA,CACAzgB,aACAD,SACA2gB,SAAArR,EAAAqR,SACAC,OAAAtR,EAAAsR,QACOrhB,IAEPgQ,KAAAqS,cAAA3hB,GACAsP,KAAAsR,UAAA7gB,GACAy9C,EAAAl+C,GAAA,KAWA07C,EAAAllD,UAAAqrD,SAAA,SAAArjD,EAAAoC,EAAAiI,GAEA,IAAAlI,EAAAqP,KAAA0R,cACAgI,EAAA7pB,KAAAiB,KAAAH,GACAgpB,EAAA9pB,KAAAmB,KAAAL,GACA4gD,EAAA/iD,EAAA,GAAAkrB,EAAAlrB,EAAA,GAAAmrB,EACA63B,EAAAhjD,EAAA,GAAAkrB,EAAAlrB,EAAA,GAAAmrB,EACAjpB,EAAAsP,KAAA+R,gBAMA+/B,GALAP,IAAA3gD,EAAA,KAAAiI,EAAA,IAAAnI,GAKAgpB,GAJA83B,IAAA34C,EAAA,GAAAjI,EAAA,MAAAF,IAGAipB,MAEAo4B,EAAAP,EAAA93B,EAAA63B,EAAA53B,EAEA3Z,KAAAsR,UAAA,CAAAwgC,EAAAC,KAMArG,EAAAllD,UAAAunD,MAAA,WACA,QAAA/tC,KAAAjT,kBAAA1D,IAAA2W,KAAA+R,iBASA25B,EAAAllD,UAAA6S,OAAA,SAAA1I,EAAA4gB,GACA,QAAAloB,IAAAkoB,EAAA,CACA,IAAA9gB,EAAAuP,KAAAsvC,sBAAA3+C,EAAA4gB,GACAvR,KAAAsR,UAAA7gB,GAEAuP,KAAAiuC,YAAAt9C,IASA+6C,EAAAllD,UAAA8qB,UAAA,SAAA7gB,GACAuP,KAAA5B,IAAamtC,EAAY96C,GACzBuP,KAAA6uC,gBACA7uC,KAAA+uC,oBASArD,EAAAllD,UAAAmoD,QAAA,SAAAqD,EAAAjhC,GAGA,OAFA/Q,KAAA2rC,OAAAqG,IAAAjhC,EACA/Q,KAAAmd,UACAnd,KAAA2rC,OAAAqG,IASAtG,EAAAllD,UAAA6rB,cAAA,SAAA3hB,GACAsP,KAAA5B,IAAamtC,EAAY76C,GACzBsP,KAAA6uC,gBACA7uC,KAAA+uC,oBAUArD,EAAAllD,UAAAynD,YAAA,SAAAt9C,GACAqP,KAAA5B,IAAamtC,EAAY56C,GACzBqP,KAAA6uC,gBACA7uC,KAAA+uC,oBASArD,EAAAllD,UAAAwnD,QAAA,SAAAn+B,GACA7P,KAAAqS,cAAArS,KAAA8wC,qBAAAjhC,KAGA67B,EA57BQ,CA67BN5vB,EAAA,GAOF,SAAAoyB,EAAAl+C,EAAAiiD,GACA3oD,WAAA,WACA0G,EAAAiiD,IACG,GAgII,SAAAvD,EAAAJ,GACP,QAAAA,EAAApd,cAAAod,EAAAtd,eACSzqC,OAAAiI,EAAA,EAAAjI,CAAgB+nD,EAAApd,aAAAod,EAAAtd,iBAIzBsd,EAAAnd,mBAAAmd,EAAArd,kBAGAqd,EAAAE,iBAAAF,EAAAG,gBAMejjD,EAAA,kCElzCAA,EAAA,GACfilB,OAAA,wCCRA,IAAAyhC,EAAAlrD,EAAA,IAAAqlB,EAAArlB,EAAA,IAAAmrD,EAAAnrD,EAAA,IAAAorD,EAAAprD,EAAA,IAAAqrD,EAAArrD,EAAA,GAAAsrD,EAAAtrD,EAAA,GAAAurD,EAAAvrD,EAAA,IAAAwrD,EAAAxrD,EAAA,IAiBAyrD,EAAA,QAmCAC,EAAA,SAAA3yC,GAmBA,IAAAmsC,EACA,GAdAlsC,KAAAmpB,aAAA9/B,IAAA0W,EAAAopB,QAAAppB,EAAAopB,QAAA,EAMAnpB,KAAAgtC,aAAAjtC,EAAAiS,YACEzrB,OAAA8lB,EAAA,EAAA9lB,CAAOA,OAAA6rD,EAAA,EAAA7rD,CAAQyZ,KAAAgtC,aAAA,SAAAxvC,EAAAC,GACjB,OAAAA,EAAAD,IACG,QAKHuC,EAAA4yC,QACA,QAAAzsD,EAAA,EAAAgI,EAAA8R,KAAAgtC,aAAA5mD,OAAA,EAAsDF,EAAAgI,IAAQhI,EAC9D,GAAAgmD,GAGA,GAAAlsC,KAAAgtC,aAAA9mD,GAAA8Z,KAAAgtC,aAAA9mD,EAAA,KAAAgmD,EAAA,CACAA,OAAA7iD,EACA,YAJA6iD,EAAAlsC,KAAAgtC,aAAA9mD,GAAA8Z,KAAAgtC,aAAA9mD,EAAA,GAeA8Z,KAAA+sC,YAAAb,EAOAlsC,KAAAopB,QAAAppB,KAAAgtC,aAAA5mD,OAAA,EAMA4Z,KAAA4yC,aAAAvpD,IAAA0W,EAAAwoB,OAAAxoB,EAAAwoB,OAAA,KAMAvoB,KAAA6yC,SAAA,UACAxpD,IAAA0W,EAAA4yC,UACA3yC,KAAA6yC,SAAA9yC,EAAA4yC,QACIpsD,OAAA8lB,EAAA,EAAA9lB,CAAMyZ,KAAA6yC,SAAAzsD,QAAA4Z,KAAAgtC,aAAA5mD,OACV,KAGA,IAAA6H,EAAA8R,EAAA9R,YAEA5E,IAAA4E,GACA+R,KAAA4yC,SAAA5yC,KAAA6yC,WACA7yC,KAAA4yC,QAAmBrsD,OAAA8rD,EAAA,EAAA9rD,CAAU0H,IAG3B1H,OAAA8lB,EAAA,EAAA9lB,EACFyZ,KAAA4yC,SAAA5yC,KAAA6yC,UAAA7yC,KAAA4yC,UAAA5yC,KAAA6yC,SACA,IAMA7yC,KAAA8yC,WAAA,UACAzpD,IAAA0W,EAAAgzC,YACA/yC,KAAA8yC,WAAA/yC,EAAAgzC,UACIxsD,OAAA8lB,EAAA,EAAA9lB,CAAMyZ,KAAA8yC,WAAA1sD,QAAA4Z,KAAAgtC,aAAA5mD,OACV,KAOA4Z,KAAAgzC,eAAA3pD,IAAA0W,EAAAyoB,SACAzoB,EAAAyoB,SACAxoB,KAAA8yC,WAAwC,KAAjBZ,EAAA,EACrB3rD,OAAA8lB,EAAA,EAAA9lB,EACFyZ,KAAAgzC,WAAAhzC,KAAA8yC,YACA9yC,KAAAgzC,YAAAhzC,KAAA8yC,WACA,IAMA9yC,KAAAI,aAAA/W,IAAA4E,IAAA,KAOA+R,KAAAizC,gBAAA,KAMAjzC,KAAAkzC,SAAA,WAEA7pD,IAAA0W,EAAAozC,MACAnzC,KAAAizC,gBAAAlzC,EAAAozC,MAAAtiC,IAAA,SAAAjgB,EAAAujB,GAIA,OAHA,IAA0Bg+B,EAAA,EAC1BtiD,KAAAC,IAAA,EAAAc,EAAA,IAAAf,KAAAE,IAAAa,EAAA,SACAf,KAAAC,IAAA,EAAAc,EAAA,IAAAf,KAAAE,IAAAa,EAAA,WAEKoP,MACF/R,GACH+R,KAAAozC,qBAAAnlD,IAaAykD,EAAAlsD,UAAA6sD,iBAAA,SAAAplD,EAAA4hB,EAAA7f,GAEA,IADA,IAAAolB,EAAApV,KAAAqV,0BAAApnB,EAAA4hB,GACA3pB,EAAAkvB,EAAAzmB,KAAAT,EAAAknB,EAAAvmB,KAAmD3I,GAAAgI,IAAShI,EAC5D,QAAA+W,EAAAmY,EAAAxmB,KAAAqwB,EAAA7J,EAAAtmB,KAAqDmO,GAAAgiB,IAAShiB,EAC9DjN,EAAA,CAAA6f,EAAA3pB,EAAA+W,KAcAy1C,EAAAlsD,UAAA8sD,gCAAA,SAAA/+B,EAAAvkB,EAAAC,EAAAsjD,EAAAplD,GACA,IAAAinB,EAAAhnB,EAAAC,EACAmlD,EAAA,KACAr/B,EAAAI,EAAA,KAOA,IANA,IAAAvU,KAAA+sC,aACA3+C,EAAAmmB,EAAA,GACAlmB,EAAAkmB,EAAA,IAEAi/B,EAAAxzC,KAAAomC,mBAAA7xB,EAAApmB,GAEAgmB,GAAAnU,KAAAmpB,SAAA,CAQA,GAPA,IAAAnpB,KAAA+sC,aACA3+C,EAAAyB,KAAAy3B,MAAAl5B,EAAA,GACAC,EAAAwB,KAAAy3B,MAAAj5B,EAAA,GACA+mB,EAAkB7uB,OAAA4rD,EAAA,EAAA5rD,CAAuB6H,IAAAC,IAAAklD,IAEzCn+B,EAAApV,KAAAqV,0BAAAm+B,EAAAr/B,EAAAo/B,GAEAvjD,EAAAtJ,KAAAuJ,EAAAkkB,EAAAiB,GACA,WAEAjB,EAEA,UAOAu+B,EAAAlsD,UAAA2a,UAAA,WACA,OAAAnB,KAAAI,SAQAsyC,EAAAlsD,UAAA2uB,WAAA,WACA,OAAAnV,KAAAopB,SAQAspB,EAAAlsD,UAAA0uB,WAAA,WACA,OAAAlV,KAAAmpB,SASAupB,EAAAlsD,UAAAitD,UAAA,SAAAt/B,GACA,OAAAnU,KAAA4yC,QACA5yC,KAAA4yC,QAEA5yC,KAAA6yC,SAAA1+B,IAUAu+B,EAAAlsD,UAAAurB,cAAA,SAAAoC,GACA,OAAAnU,KAAAgtC,aAAA74B,IAQAu+B,EAAAlsD,UAAAyrB,eAAA,WACA,OAAAjS,KAAAgtC,cASA0F,EAAAlsD,UAAAktD,2BAAA,SAAAn/B,EAAAg/B,EAAAplD,GACA,GAAAomB,EAAA,GAAAvU,KAAAopB,QAAA,CACA,OAAAppB,KAAA+sC,YAAA,CACA,IAAAp+C,EAAA,EAAA4lB,EAAA,GACA3lB,EAAA,EAAA2lB,EAAA,GACA,OAAahuB,OAAA4rD,EAAA,EAAA5rD,CAAuBoI,IAAA,EAAAC,IAAA,EAAA2kD,GAEpC,IAAAC,EAAAxzC,KAAAomC,mBAAA7xB,EAAApmB,GACA,OAAA6R,KAAAqV,0BACAm+B,EAAAj/B,EAAA,KAAAg/B,GAEA,aAUAb,EAAAlsD,UAAAmtD,mBAAA,SAAAx/B,EAAAiB,EAAAjnB,GACA,IAAAo6B,EAAAvoB,KAAAyzC,UAAAt/B,GACAzjB,EAAAsP,KAAA+R,cAAAoC,GACAqU,EAAiBjiC,OAAAgsD,EAAA,EAAAhsD,CAAMyZ,KAAAqnC,YAAAlzB,GAAAnU,KAAAkzC,UACvBvkD,EAAA45B,EAAA,GAAAnT,EAAAzmB,KAAA65B,EAAA,GAAA93B,EACA7B,EAAA05B,EAAA,IAAAnT,EAAAvmB,KAAA,GAAA25B,EAAA,GAAA93B,EACA9B,EAAA25B,EAAA,GAAAnT,EAAAxmB,KAAA45B,EAAA,GAAA93B,EACA5B,EAAAy5B,EAAA,IAAAnT,EAAAtmB,KAAA,GAAA05B,EAAA,GAAA93B,EACA,OAASnK,OAAA8rD,EAAA,EAAA9rD,CAAcoI,EAAAC,EAAAC,EAAAC,EAAAX,IAUvBukD,EAAAlsD,UAAA6uB,0BAAA,SAAApnB,EAAAkmB,EAAAo/B,GACA,IAAAh/B,EAAAk+B,EACAzyC,KAAA4zC,uBAAA3lD,EAAA,GAAAA,EAAA,GAAAkmB,GAAA,EAAAI,GACA,IAAA5lB,EAAA4lB,EAAA,GACA3lB,EAAA2lB,EAAA,GAEA,OADAvU,KAAA4zC,uBAAA3lD,EAAA,GAAAA,EAAA,GAAAkmB,GAAA,EAAAI,GACShuB,OAAA4rD,EAAA,EAAA5rD,CAAuBoI,EAAA4lB,EAAA,GAAA3lB,EAAA2lB,EAAA,GAAAg/B,IAOhCb,EAAAlsD,UAAAmiC,mBAAA,SAAApU,GACA,IAAAgU,EAAAvoB,KAAAyzC,UAAAl/B,EAAA,IACA7jB,EAAAsP,KAAA+R,cAAAwC,EAAA,IACAiU,EAAiBjiC,OAAAgsD,EAAA,EAAAhsD,CAAMyZ,KAAAqnC,YAAA9yB,EAAA,IAAAvU,KAAAkzC,UACvB,OACA3qB,EAAA,IAAAhU,EAAA,OAAAiU,EAAA,GAAA93B,EACA63B,EAAA,IAAAhU,EAAA,OAAAiU,EAAA,GAAA93B,IAYAgiD,EAAAlsD,UAAA4/C,mBAAA,SAAA7xB,EAAApmB,GACA,IAAAo6B,EAAAvoB,KAAAyzC,UAAAl/B,EAAA,IACA7jB,EAAAsP,KAAA+R,cAAAwC,EAAA,IACAiU,EAAiBjiC,OAAAgsD,EAAA,EAAAhsD,CAAMyZ,KAAAqnC,YAAA9yB,EAAA,IAAAvU,KAAAkzC,UACvBvkD,EAAA45B,EAAA,GAAAhU,EAAA,GAAAiU,EAAA,GAAA93B,EACA9B,EAAA25B,EAAA,GAAAhU,EAAA,GAAAiU,EAAA,GAAA93B,EACA7B,EAAAF,EAAA65B,EAAA,GAAA93B,EACA5B,EAAAF,EAAA45B,EAAA,GAAA93B,EACA,OAASnK,OAAA8rD,EAAA,EAAA9rD,CAAcoI,EAAAC,EAAAC,EAAAC,EAAAX,IAcvBukD,EAAAlsD,UAAAqtD,kCAAA,SAAArlD,EAAAkC,EAAA0jB,GACA,OAAApU,KAAA8zC,gCACAtlD,EAAA,GAAAA,EAAA,GAAAkC,GAAA,EAAA0jB,IAgBAs+B,EAAAlsD,UAAAstD,gCAAA,SAAA1lD,EAAAC,EAAAqC,EAAAqjD,EAAA3/B,GACA,IAAAD,EAAAnU,KAAA8mC,kBAAAp2C,GACAmJ,EAAAnJ,EAAAsP,KAAA+R,cAAAoC,GACAoU,EAAAvoB,KAAAyzC,UAAAt/B,GACAqU,EAAiBjiC,OAAAgsD,EAAA,EAAAhsD,CAAMyZ,KAAAqnC,YAAAlzB,GAAAnU,KAAAkzC,UAEvBc,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAArkD,KAAAy3B,OAAAl5B,EAAAm6B,EAAA,IAAA73B,EAAAsjD,GACAG,EAAAtkD,KAAAy3B,OAAAj5B,EAAAk6B,EAAA,IAAA73B,EAAAujD,GACAG,EAAAv6C,EAAAq6C,EAAA1rB,EAAA,GACA6rB,EAAAx6C,EAAAs6C,EAAA3rB,EAAA,GAUA,OARAurB,GACAK,EAAAvkD,KAAAk5B,KAAAqrB,GAAA,EACAC,EAAAxkD,KAAAk5B,KAAAsrB,GAAA,IAEAD,EAAAvkD,KAAAy3B,MAAA8sB,GACAC,EAAAxkD,KAAAy3B,MAAA+sB,IAGS9tD,OAAAisD,EAAA,EAAAjsD,CAAuB4tB,EAAAigC,EAAAC,EAAAjgC,IAkBhCs+B,EAAAlsD,UAAAotD,uBAAA,SAAAxlD,EAAAC,EAAA8lB,EAAA4/B,EAAA3/B,GACA,IAAAmU,EAAAvoB,KAAAyzC,UAAAt/B,GACAzjB,EAAAsP,KAAA+R,cAAAoC,GACAqU,EAAiBjiC,OAAAgsD,EAAA,EAAAhsD,CAAMyZ,KAAAqnC,YAAAlzB,GAAAnU,KAAAkzC,UAEvBc,EAAAD,EAAA,KACAE,EAAAF,EAAA,KACAG,EAAArkD,KAAAy3B,OAAAl5B,EAAAm6B,EAAA,IAAA73B,EAAAsjD,GACAG,EAAAtkD,KAAAy3B,OAAAj5B,EAAAk6B,EAAA,IAAA73B,EAAAujD,GACAG,EAAAF,EAAA1rB,EAAA,GACA6rB,EAAAF,EAAA3rB,EAAA,GAUA,OARAurB,GACAK,EAAAvkD,KAAAk5B,KAAAqrB,GAAA,EACAC,EAAAxkD,KAAAk5B,KAAAsrB,GAAA,IAEAD,EAAAvkD,KAAAy3B,MAAA8sB,GACAC,EAAAxkD,KAAAy3B,MAAA+sB,IAGS9tD,OAAAisD,EAAA,EAAAjsD,CAAuB4tB,EAAAigC,EAAAC,EAAAjgC,IAWhCs+B,EAAAlsD,UAAAwiC,yBAAA,SAAAx6B,EAAA2lB,EAAAC,GACA,OAAApU,KAAA4zC,uBACAplD,EAAA,GAAAA,EAAA,GAAA2lB,GAAA,EAAAC,IAOAs+B,EAAAlsD,UAAA8tD,uBAAA,SAAA//B,GACA,OAAAvU,KAAAgtC,aAAAz4B,EAAA,KAWAm+B,EAAAlsD,UAAA6gD,YAAA,SAAAlzB,GACA,OAAAnU,KAAAgzC,UACAhzC,KAAAgzC,UAEAhzC,KAAA8yC,WAAA3+B,IAQAu+B,EAAAlsD,UAAA8uB,iBAAA,SAAAnB,GACA,OAAAnU,KAAAizC,gBAGAjzC,KAAAizC,gBAAA9+B,GAFA,MAcAu+B,EAAAlsD,UAAAsgD,kBAAA,SAAAp2C,EAAAkhB,GACA,IAAAuC,EAAU5tB,OAAA6rD,EAAA,EAAA7rD,CAAiByZ,KAAAgtC,aAAAt8C,EAAAkhB,GAAA,GAC3B,OAASrrB,OAAA+rD,EAAA,EAAA/rD,CAAK4tB,EAAAnU,KAAAmpB,QAAAnpB,KAAAopB,UAOdspB,EAAAlsD,UAAA4sD,qBAAA,SAAAnlD,GAGA,IAFA,IAAA7H,EAAA4Z,KAAAgtC,aAAA5mD,OACAmuD,EAAA,IAAAn3C,MAAAhX,GACA+tB,EAAAnU,KAAAmpB,QAA4BhV,EAAA/tB,IAAY+tB,EACxCogC,EAAApgC,GAAAnU,KAAAqV,0BAAApnB,EAAAkmB,GAEAnU,KAAAizC,gBAAAsB,GAIe/oD,EAAA,mCCniBfxE,EAAA2C,EAAA6B,EAAA,sBAAAgpD,IAAAxtD,EAAA2C,EAAA6B,EAAA,sBAAAipD,IAAA,IAAAC,EAAA1tD,EAAA,IAAA2tC,EAAA3tC,EAAA,IAoBO,SAAAwtD,EAAAhlD,EAAAC,EACPqvB,EAAAnvB,EAAAglD,EAAAC,EAAAx9B,GAMA,IALA,IAAAlxB,EAAAgI,EAAAE,EAAAkD,EAAAC,EAAAG,EAAAC,EACAtD,EAAAsmD,EAAAC,EAAA,GAEAC,EAAA,GAEA3qD,EAAA,EAAA4qD,EAAAh2B,EAAA14B,OAAmC8D,EAAA4qD,IAAQ5qD,EAAA,CAC3C,IAAAwF,EAAAovB,EAAA50B,GAGA,IAFAoH,EAAA9B,EAAAE,EAAAC,GACA+B,EAAAlC,EAAAE,EAAAC,EAAA,GACAzJ,EAAAuJ,EAAoBvJ,EAAAwJ,EAASxJ,GAAAyJ,EAC7B4B,EAAA/B,EAAAtJ,GACAyL,EAAAnC,EAAAtJ,EAAA,IACAmI,GAAAqD,GAAAC,GAAAtD,GAAAqD,GAAArD,MAAAsD,KACAvD,GAAAC,EAAAqD,IAAAC,EAAAD,IAAAH,EAAAD,KACAujD,EAAAvuD,KAAA8H,IAEAkD,EAAAC,EACAG,EAAAC,EAKA,IAAAojD,EAAAn6B,IACAo6B,GAAA1lD,IAGA,IAFAulD,EAAArsC,KAAqBksC,EAAA,GACrBpjD,EAAAujD,EAAA,GACA3uD,EAAA,EAAAgI,EAAA2mD,EAAAzuD,OAAwCF,EAAAgI,IAAQhI,EAAA,CAChDqL,EAAAsjD,EAAA3uD,GACA,IAAA+uD,EAAAplD,KAAAiN,IAAAvL,EAAAD,GACA2jD,EAAAD,IACA5mD,GAAAkD,EAAAC,GAAA,EACUhL,OAAAouC,EAAA,EAAApuC,CAAqBiJ,EAAAC,EAAAqvB,EAAAnvB,EAAAvB,EAAAC,KAC/B0mD,EAAA3mD,EACA4mD,EAAAC,IAGA3jD,EAAAC,EAOA,OALAkgD,MAAAsD,KAGAA,EAAAJ,EAAAC,IAEAx9B,GACAA,EAAA9wB,KAAAyuD,EAAA1mD,EAAA2mD,GACA59B,GAEA,CAAA29B,EAAA1mD,EAAA2mD,GAcO,SAAAP,EAAAjlD,EAAAC,EAAA0vB,EAAAxvB,EAAAglD,GAEP,IADA,IAAAO,EAAA,GACAhvD,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAoCF,EAAAgI,IAAQhI,EAAA,CAC5C,IAAA44B,EAAAK,EAAAj5B,GACAgvD,EAAAV,EAAAhlD,EACAC,EAAAqvB,EAAAnvB,EAAAglD,EAAA,EAAAzuD,EAAAgvD,GACAzlD,EAAAqvB,IAAA14B,OAAA,GAEA,OAAA8uD,iCCvEO,SAAArvC,EAAArW,EAAAC,EAAAC,EAAAC,EAAAK,EAAAC,GAIP,IAHA,IAEAklD,EAFArgB,EAAA,CAAAtlC,EAAAC,GAAAD,EAAAC,EAAA,IACAslC,EAAA,GAEQtlC,EAAAE,EAAAD,EAAyBD,GAAAE,EAAA,CAIjC,GAHAolC,EAAA,GAAAvlC,EAAAC,EAAAE,GACAolC,EAAA,GAAAvlC,EAAAC,EAAAE,EAAA,GACAwlD,EAAAnlD,EAAAtJ,KAAAuJ,EAAA6kC,EAAAC,GAEA,OAAAogB,EAEArgB,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAEA,SAlCA/tC,EAAA2C,EAAA6B,EAAA,sBAAAqa,kCCcera,EAAA,GACfwtB,MAAA,QACAG,OAAA,wCCJO,SAAAi8B,EAAA5lD,EAAAC,EAAAC,EAAAC,GAIP,IAHA,IAAA2B,EAAA9B,EAAAC,GACAiC,EAAAlC,EAAAC,EAAA,GACArJ,EAAA,EACAF,EAAAuJ,EAAAE,EAA+BzJ,EAAAwJ,EAASxJ,GAAAyJ,EAAA,CACxC,IAAA4B,EAAA/B,EAAAtJ,GACAyL,EAAAnC,EAAAtJ,EAAA,GACAE,GAAAyJ,KAAA4zB,MAAAlyB,EAAAD,IAAAC,EAAAD,IAAAK,EAAAD,IAAAC,EAAAD,IACAJ,EAAAC,EACAG,EAAAC,EAEA,OAAAvL,EAvBAY,EAAA2C,EAAA6B,EAAA,sBAAA4pD,kCCAA,IAAA7yB,EAAAv7B,EAAA,GAAA28B,EAAA38B,EAAA,GAAAy6C,EAAAz6C,EAAA,IA2CA6/C,EAAA,SAAAtrB,EAAAwV,EAAAgB,EAAAuU,EAAA+O,GAMAr1C,KAAAs1C,YAAA/5B,EAMAvb,KAAAu1C,YAAAxkB,EAGA,IAAAykB,EAAA,GACAC,EAAqBlvD,OAAAk7C,EAAA,EAAAl7C,CAAYyZ,KAAAu1C,YAAAv1C,KAAAs1C,aAOjCt1C,KAAA01C,cAAA,SAAAhsD,GACA,IAAAiB,EAAAjB,EAAA,OAAAA,EAAA,GAIA,OAHA8rD,EAAA7qD,KACA6qD,EAAA7qD,GAAA8qD,EAAA/rD,IAEA8rD,EAAA7qD,IAOAqV,KAAA21C,iBAAArP,EAMAtmC,KAAA41C,uBAAAP,IAMAr1C,KAAA61C,WAAA,GAOA71C,KAAA81C,iBAAA,EAMA91C,KAAA+1C,kBAAA/1C,KAAAs1C,YAAAr0C,cACAqlC,KACAtmC,KAAAs1C,YAAAn0C,aACO5a,OAAAg8B,EAAA,EAAAh8B,CAAQ+/C,IAAqB//C,OAAAg8B,EAAA,EAAAh8B,CAAQyZ,KAAAs1C,YAAAn0C,aAM5CnB,KAAAg2C,kBAAAh2C,KAAAs1C,YAAAn0C,YACI5a,OAAAg8B,EAAA,EAAAh8B,CAAQyZ,KAAAs1C,YAAAn0C,aAAA,KAMZnB,KAAAi2C,kBAAAj2C,KAAAu1C,YAAAp0C,YACI5a,OAAAg8B,EAAA,EAAAh8B,CAAQyZ,KAAAu1C,YAAAp0C,aAAA,KAEZ,IAAA+0C,EAA2B3vD,OAAAg8B,EAAA,EAAAh8B,CAAUwrC,GACrCokB,EAA4B5vD,OAAAg8B,EAAA,EAAAh8B,CAAWwrC,GACvCqkB,EAA+B7vD,OAAAg8B,EAAA,EAAAh8B,CAAcwrC,GAC7CskB,EAA8B9vD,OAAAg8B,EAAA,EAAAh8B,CAAawrC,GAC3CukB,EAAAt2C,KAAA01C,cAAAQ,GACAK,EAAAv2C,KAAA01C,cAAAS,GACAK,EAAAx2C,KAAA01C,cAAAU,GACAK,EAAAz2C,KAAA01C,cAAAW,GAQA,GANAr2C,KAAA02C,SACAR,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EA9GA,IAiHAz2C,KAAA81C,gBAAA,CACA,IAAAa,EAAArnD,IACA0Q,KAAA61C,WAAAhwC,QAAA,SAAAktB,EAAA7sC,EAAAuhB,GACAkvC,EAAA9mD,KAAAC,IAAA6mD,EACA5jB,EAAAruB,OAAA,MAAAquB,EAAAruB,OAAA,MAAAquB,EAAAruB,OAAA,SAKA1E,KAAA61C,WAAAhwC,QAAA,SAAAktB,GACA,GAAAljC,KAAAE,IAAAgjC,EAAAruB,OAAA,MAAAquB,EAAAruB,OAAA,MACAquB,EAAAruB,OAAA,OAAAiyC,EAAA32C,KAAAg2C,kBAAA,GACA,IAAAY,EAAA,EAAA7jB,EAAAruB,OAAA,MAAAquB,EAAAruB,OAAA,OACA,CAAAquB,EAAAruB,OAAA,MAAAquB,EAAAruB,OAAA,OACA,CAAAquB,EAAAruB,OAAA,MAAAquB,EAAAruB,OAAA,QACAkyC,EAAA,MAAAD,EAAA32C,KAAAg2C,kBAAA,IACAY,EAAA,OAAA52C,KAAAg2C,mBAEAY,EAAA,MAAAD,EAAA32C,KAAAg2C,kBAAA,IACAY,EAAA,OAAA52C,KAAAg2C,mBAEAY,EAAA,MAAAD,EAAA32C,KAAAg2C,kBAAA,IACAY,EAAA,OAAA52C,KAAAg2C,mBAMA,IAAArnD,EAAAkB,KAAAC,IACA8mD,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA/mD,KAAAE,IACA6mD,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAjoD,EAAAqR,KAAAg2C,kBAAA,IACAjjB,EAAAruB,OAAAkyC,KAGKhsD,KAAAoV,OAGLw1C,EAAA,IAaA3O,EAAArgD,UAAAqwD,aAAA,SAAAr5C,EAAAC,EAAA/T,EAAAotD,EAAAC,EAAAC,GACAh3C,KAAA61C,WAAAvvD,KAAA,CACAoe,OAAA,CAAAoyC,EAAAC,EAAAC,GACA/tD,OAAA,CAAAuU,EAAAC,EAAA/T,MAoBAm9C,EAAArgD,UAAAkwD,SAAA,SAAAl5C,EAAAC,EAAA/T,EAAAC,EAAAmtD,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAyB5wD,OAAAg8B,EAAA,EAAAh8B,CAAc,CAAAuwD,EAAAC,EAAAC,EAAAC,IACvCG,EAAAp3C,KAAAg2C,kBACIzvD,OAAAg8B,EAAA,EAAAh8B,CAAQ4wD,GAAAn3C,KAAAg2C,kBAAA,KACZqB,EAA2Cr3C,KAAA,kBAI3Cs3C,EAAAt3C,KAAAs1C,YAAAr0C,YACAm2C,EAAA,IAAAA,EAAA,EAEAG,GAAA,EAEA,GAAAL,EAAA,GACA,GAAAl3C,KAAAu1C,YAAA9zC,YAAAzB,KAAAi2C,kBAAA,CACA,IAAAuB,EAA6BjxD,OAAAg8B,EAAA,EAAAh8B,CAAc,CAAAiX,EAAAC,EAAA/T,EAAAC,IAE3C4tD,EAD4BhxD,OAAAg8B,EAAA,EAAAh8B,CAAQixD,GAAAx3C,KAAAi2C,kBAlMpC,KAoMAsB,GAEAD,GAAAt3C,KAAAs1C,YAAA7zC,YAAA21C,IACAG,EAAAH,EAvMA,KAwMAG,GAIA,GAAAA,IAAAv3C,KAAA21C,kBACSpvD,OAAAg8B,EAAA,EAAAh8B,CAAU4wD,EAAAn3C,KAAA21C,kBADnB,CAOA,KAAA4B,GACA/lB,SAAAslB,EAAA,KAAAtlB,SAAAslB,EAAA,KACAtlB,SAAAulB,EAAA,KAAAvlB,SAAAulB,EAAA,KACAvlB,SAAAwlB,EAAA,KAAAxlB,SAAAwlB,EAAA,KACAxlB,SAAAylB,EAAA,KAAAzlB,SAAAylB,EAAA,MACA,KAAAC,EAAA,GAGA,OAFAK,GAAA,EAOA,GAAAL,EAAA,GACA,IAAAK,EAAA,CACA,IAGAjpD,EAHAmC,EAAA,EAAA+M,EAAA,GAAA9T,EAAA,OAAA8T,EAAA,GAAA9T,EAAA,OACA+tD,EAAAz3C,KAAA01C,cAAAjlD,GAGA,GAAA6mD,EAIAhpD,GAFa/H,OAAAo9B,EAAA,EAAAp9B,CAAMuwD,EAAA,GAAAO,GACN9wD,OAAAo9B,EAAA,EAAAp9B,CAAMywD,EAAA,GAAAK,IAAA,EAEP9wD,OAAAo9B,EAAA,EAAAp9B,CAAMkxD,EAAA,GAAAJ,QAElB/oD,GAAAwoD,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEA,IAAAlpD,GAAAuoD,EAAA,GAAAE,EAAA,MAAAS,EAAA,GAEAF,EADAjpD,IAAAC,IACAyR,KAAA41C,uBAEA,GAAA2B,EAAA,CACA,GAAA1nD,KAAAiN,IAAAU,EAAA,GAAA9T,EAAA,KAAAmG,KAAAiN,IAAAU,EAAA,GAAA9T,EAAA,KAEA,IAAAguD,EAAA,EAAAj6C,EAAA,GAAA/T,EAAA,OAAA+T,EAAA,GAAA/T,EAAA,OACAiuD,EAAA33C,KAAA01C,cAAAgC,GACAE,EAAA,EAAAjuD,EAAA,GAAA6T,EAAA,OAAA7T,EAAA,GAAA6T,EAAA,OACAq6C,EAAA73C,KAAA01C,cAAAkC,GAEA53C,KAAA02C,SACAl5C,EAAAC,EAAAi6C,EAAAE,EAAAd,EAAAC,EAAAY,EAAAE,EAAAX,EAAA,GACAl3C,KAAA02C,SACAkB,EAAAF,EAAAhuD,EAAAC,EAAAkuD,EAAAF,EAAAX,EAAAC,EAAAC,EAAA,OACO,CAEP,IAAAY,EAAA,EAAAt6C,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAs6C,EAAA/3C,KAAA01C,cAAAoC,GACAE,EAAA,EAAAtuD,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAsuD,EAAAj4C,KAAA01C,cAAAsC,GAEAh4C,KAAA02C,SACAl5C,EAAAs6C,EAAAE,EAAAruD,EAAAmtD,EAAAiB,EAAAE,EAAAhB,EAAAC,EAAA,GACAl3C,KAAA02C,SACAoB,EAAAr6C,EAAA/T,EAAAsuD,EAAAD,EAAAhB,EAAAC,EAAAiB,EAAAf,EAAA,GAEA,QAIA,GAAAI,EAAA,CACA,IAAAt3C,KAAA+1C,kBACA,OAEA/1C,KAAA81C,iBAAA,EAGA91C,KAAA62C,aAAAr5C,EAAA9T,EAAAC,EAAAmtD,EAAAE,EAAAC,GACAj3C,KAAA62C,aAAAr5C,EAAAC,EAAA/T,EAAAotD,EAAAC,EAAAC,KAQAnQ,EAAArgD,UAAAugD,sBAAA,WACA,IAAA94C,EAAe1H,OAAAg8B,EAAA,EAAAh8B,GASf,OAPAyZ,KAAA61C,WAAAhwC,QAAA,SAAAktB,EAAA7sC,EAAAuhB,GACA,IAAApf,EAAA0qC,EAAAruB,OACIne,OAAAg8B,EAAA,EAAAh8B,CAAgB0H,EAAA5F,EAAA,IAChB9B,OAAAg8B,EAAA,EAAAh8B,CAAgB0H,EAAA5F,EAAA,IAChB9B,OAAAg8B,EAAA,EAAAh8B,CAAgB0H,EAAA5F,EAAA,MAGpB4F,GAMA44C,EAAArgD,UAAAssC,aAAA,WACA,OAAA9yB,KAAA61C,YAGerqD,EAAA,+CC5Uf0sD,EAAA,SAAAC,EAAAC,EAAAC,GAMAr4C,KAAAs4C,OAAAH,EAMAn4C,KAAAu4C,aAAAH,EAMAp4C,KAAAw4C,OAAAH,EAMAr4C,KAAAy4C,QAAA,GAMAz4C,KAAA04C,OAAA,EAMA14C,KAAA24C,iBAAA,GAMAT,EAAA1xD,UAAAqhB,MAAA,WACA7H,KAAAy4C,QAAAryD,OAAA,EACA4Z,KAAA04C,OAAA,EACA14C,KAAA24C,iBAAA,GAOAT,EAAA1xD,UAAAoyD,OAAA,SAAAxqD,EAAAC,GACA2R,KAAAy4C,QAAAnyD,KAAA8H,EAAAC,EAAA8/C,KAAAC,QAMA8J,EAAA1xD,UAAAkJ,IAAA,WACA,GAAAsQ,KAAAy4C,QAAAryD,OAAA,EAGA,SAEA,IAAAiyD,EAAAlK,KAAAC,MAAApuC,KAAAw4C,OACAK,EAAA74C,KAAAy4C,QAAAryD,OAAA,EACA,GAAA4Z,KAAAy4C,QAAAI,EAAA,GAAAR,EAGA,SAKA,IADA,IAAAS,EAAAD,EAAA,EACAC,EAAA,GAAA94C,KAAAy4C,QAAAK,EAAA,GAAAT,GACAS,GAAA,EAGA,IAAA1nC,EAAApR,KAAAy4C,QAAAI,EAAA,GAAA74C,KAAAy4C,QAAAK,EAAA,GAIA,GAAA1nC,EAAA,OACA,SAGA,IAAA9iB,EAAA0R,KAAAy4C,QAAAI,GAAA74C,KAAAy4C,QAAAK,GACAvqD,EAAAyR,KAAAy4C,QAAAI,EAAA,GAAA74C,KAAAy4C,QAAAK,EAAA,GAGA,OAFA94C,KAAA04C,OAAA7oD,KAAAyqC,MAAA/rC,EAAAD,GACA0R,KAAA24C,iBAAA9oD,KAAA4zB,KAAAn1B,IAAAC,KAAA6iB,EACApR,KAAA24C,iBAAA34C,KAAAu4C,cAMAL,EAAA1xD,UAAAuzC,YAAA,WACA,OAAA/5B,KAAAu4C,aAAAv4C,KAAA24C,kBAAA34C,KAAAs4C,QAMAJ,EAAA1xD,UAAAuyD,SAAA,WACA,OAAA/4C,KAAA04C,QAGe,IAAAM,EAAA,kBC9Df,SAASC,EAAWzsC,GACpB,IAAA8J,GAAA,EACA,GAAA9J,EAAAzjB,MAA8BmwD,EAAA,EAAmB7+C,SAAA,CACjD,IAAAqmC,EAA6Cl0B,EAAA,cAC7CqE,EAAArE,EAAAqE,IACAc,EAAAnF,EAAAhe,WACAuiB,EAAA2vB,EAAA7zB,UAAA7M,KAAAm5C,OAAAn5C,KAAAm5C,OACAroC,EAAAD,EAAA0qB,UACIh1C,OAAA6yD,EAAA,EAAA7yD,CAAWuqB,EAAAC,EAAAY,EAAA3R,KAAAo7B,WACf5uB,EAAA8G,iBACAgD,GAAA,EAEA,OAAAA,EAGe,IAAA+iC,EApDf,SAAAjpC,GACA,SAAAkpC,EAAAzjC,GACAzF,EAAA1pB,KAAAsZ,KAAA,CACAqQ,YAAmB4oC,IAGnB,IAAAl5C,EAAA8V,GAAA,GAMA7V,KAAAm5C,OAAAp5C,EAAAgR,MAAAhR,EAAAgR,MAAA,EAMA/Q,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAQA,OAJAhB,IAAAkpC,EAAAv2C,UAAAqN,GACAkpC,EAAA9yD,UAAAD,OAAAmE,OAAA0lB,KAAA5pB,WACA8yD,EAAA9yD,UAAAwc,YAAAs2C,EAEAA,EA1BA,CA2BEF,EAAA,mDC+HaG,EApJJ,SAAA3jC,GACX,SAAA4jC,EAAA3jC,GAEAD,EAAAlvB,KAAAsZ,KAAA,CACAkW,SAAgBknB,EAAA,IAGhB,IAAAr9B,EAAA8V,GAAA,GAMA7V,KAAAy5C,SAAA15C,EAAA25C,QAKA15C,KAAA25C,aAAA,KAKA35C,KAAA45C,mBAKA55C,KAAA65C,UAAA,EAMA75C,KAAAq9B,WAAAt9B,EAAAk7B,UAAAl7B,EAAAk7B,UAA8DA,EAAA,EAM9Dj7B,KAAA85C,YAAA,EAyGA,OArGAlkC,IAAA4jC,EAAAz2C,UAAA6S,GACA4jC,EAAAhzD,UAAAD,OAAAmE,OAAAkrB,KAAApvB,WACAgzD,EAAAhzD,UAAAwc,YAAAw2C,EAKAA,EAAAhzD,UAAAuvB,gBAAA,SAAAvJ,GACAxM,KAAA65C,WACA75C,KAAA65C,UAAA,EACA75C,KAAA0Q,SAAA6qB,UAAAoT,QAAsCC,EAAA,EAAQ7kC,YAAA,IAE9C,IAAAsM,EAAArW,KAAAqW,eACAZ,EAAmBlvB,OAAAm3C,EAAA,EAAAn3C,CAAoB8vB,GACvC,GAAAA,EAAAjwB,QAAA4Z,KAAA45C,oBAIA,GAHA55C,KAAAy5C,UACAz5C,KAAAy5C,SAAAb,OAAAnjC,EAAA,GAAAA,EAAA,IAEAzV,KAAA25C,aAAA,CACA,IAAA7nD,EAAAkO,KAAA25C,aAAA,GAAAlkC,EAAA,GACA1jB,EAAA0jB,EAAA,GAAAzV,KAAA25C,aAAA,GAEA7oC,EADAtE,EAAAqE,IACA0qB,UACA9qC,EAAA,CAAAqB,EAAAC,GACQxL,OAAAiI,EAAA,EAAAjI,CAAekK,EAAAqgB,EAAAiB,iBACfxrB,OAAAiI,EAAA,EAAAjI,CAAgBkK,EAAAqgB,EAAAY,eAChBnrB,OAAAiI,EAAA,EAAAjI,CAAakK,EAAAqgB,EAAA/jB,aACrB0D,EAAAqgB,EAAAI,gBAAAzgB,GACAqgB,EAAAQ,UAAA7gB,SAEKuP,KAAAy5C,UAGLz5C,KAAAy5C,SAAA5xC,QAEA7H,KAAA25C,aAAAlkC,EACAzV,KAAA45C,mBAAAvjC,EAAAjwB,QAMAozD,EAAAhzD,UAAAyvB,cAAA,SAAAzJ,GACA,IAAAqE,EAAArE,EAAAqE,IACAC,EAAAD,EAAA0qB,UACA,OAAAv7B,KAAAqW,eAAAjwB,OAAA,CACA,IAAA4Z,KAAA85C,YAAA95C,KAAAy5C,UAAAz5C,KAAAy5C,SAAA/pD,MAAA,CACA,IAAAoiC,EAAA9xB,KAAAy5C,SAAA1f,cACAt6B,EAAAO,KAAAy5C,SAAAV,WACAtoD,EAAuEqgB,EAAA/jB,YACvEgtD,EAAAlpC,EAAA+qB,uBAAAnrC,GACA4mB,EAAAxG,EAAA+rB,uBAAA,CACAmd,EAAA,GAAAjoB,EAAAjiC,KAAAiB,IAAA2O,GACAs6C,EAAA,GAAAjoB,EAAAjiC,KAAAmB,IAAAyO,KAEAqR,EAAAK,QAAA,CACA1gB,OAAAqgB,EAAAI,gBAAAmG,GACAjG,SAAA,IACAC,OAAkBA,EAAA,IAOlB,OAJArR,KAAA65C,WACA75C,KAAA65C,UAAA,EACA/oC,EAAA69B,QAAqBC,EAAA,EAAQ7kC,aAAA,KAE7B,EAQA,OANA/J,KAAAy5C,UAGAz5C,KAAAy5C,SAAA5xC,QAEA7H,KAAA25C,aAAA,MACA,GAOAH,EAAAhzD,UAAAsvB,gBAAA,SAAAtJ,GACA,GAAAxM,KAAAqW,eAAAjwB,OAAA,GAAA4Z,KAAAq9B,WAAA7wB,GAAA,CACA,IACAsE,EADAtE,EAAAqE,IACA0qB,UAYA,OAXAv7B,KAAA25C,aAAA,KAEA7oC,EAAA+9B,gBACA/9B,EAAAQ,UAAA9E,EAAAoV,WAAAo4B,UAAAvpD,QAEAuP,KAAAy5C,UACAz5C,KAAAy5C,SAAA5xC,QAIA7H,KAAA85C,WAAA95C,KAAAqW,eAAAjwB,OAAA,GACA,EAEA,UAIAozD,EAjJW,CAkJT9b,EAAA,WC5Cauc,EAjGD,SAAArkC,GACd,SAAAskC,EAAArkC,GAEA,IAAA9V,EAAA8V,GAAA,GAEAD,EAAAlvB,KAAAsZ,KAAA,CACAkW,SAAgBknB,EAAA,IAOhBp9B,KAAAq9B,WAAAt9B,EAAAk7B,UAAAl7B,EAAAk7B,UAA8DA,EAAA,EAM9Dj7B,KAAAm6C,gBAAA9wD,EAMA2W,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAqEA,OAjEAwE,IAAAskC,EAAAn3C,UAAA6S,GACAskC,EAAA1zD,UAAAD,OAAAmE,OAAAkrB,KAAApvB,WACA0zD,EAAA1zD,UAAAwc,YAAAk3C,EAKAA,EAAA1zD,UAAAuvB,gBAAA,SAAAvJ,GACA,GAASjmB,OAAA00C,EAAA,EAAA10C,CAASimB,GAAlB,CAIA,IAAAqE,EAAArE,EAAAqE,IACAC,EAAAD,EAAA0qB,UACA,GAAAzqB,EAAAk/B,iBAAAr/C,WAA2C28C,EAAA,EAA3C,CAGA,IAAA18C,EAAAigB,EAAA+e,UACAngC,EAAA+c,EAAAixB,MACApW,EACAx3B,KAAAyqC,MAAA1pC,EAAA,KAAAnB,EAAA,GAAAA,EAAA,GAAAmB,EAAA,MACA,QAAAvH,IAAA2W,KAAAm6C,WAAA,CACA,IAAAppC,EAAAsW,EAAArnB,KAAAm6C,WACAxpD,EAAAmgB,EAAAY,cACMnrB,OAAA6yD,EAAA,EAAA7yD,CAAwBuqB,EAAAngB,EAAAogB,GAE9B/Q,KAAAm6C,WAAA9yB,KAOA6yB,EAAA1zD,UAAAyvB,cAAA,SAAAzJ,GACA,IAASjmB,OAAA00C,EAAA,EAAA10C,CAASimB,GAClB,SAGA,IACAsE,EADAtE,EAAAqE,IACA0qB,UACAzqB,EAAA69B,QAAiBC,EAAA,EAAQ7kC,aAAA,GACzB,IAAApZ,EAAAmgB,EAAAY,cAEA,OADInrB,OAAA6yD,EAAA,EAAA7yD,CAAMuqB,EAAAngB,OAAAtH,EAAA2W,KAAAo7B,YACV,GAOA8e,EAAA1zD,UAAAsvB,gBAAA,SAAAtJ,GACA,QAASjmB,OAAA00C,EAAA,EAAA10C,CAASimB,QAIVjmB,OAAA00C,EAAA,EAAA10C,CAAiBimB,KAAAxM,KAAAq9B,WAAA7wB,MACzBA,EAAAqE,IACA0qB,UAAAoT,QAA4BC,EAAA,EAAQ7kC,YAAA,GACpC/J,KAAAm6C,gBAAA9wD,GACA,KAMA6wD,EA9Fc,CA+FZxc,EAAA,kBCrHa0c,EAAA,CACfnrD,KAAA,GACAorD,GAAA,GACAnrD,MAAA,GACAorD,KAAA,ICiFA,SAASC,EAAW/tC,GACpB,IAAA8J,GAAA,EACA,GAAA9J,EAAAzjB,MAA8Bg6C,EAAA,EAASroC,QAAA,CACvC,IACA8/C,EAD4ChuC,EAAA,cAC5CguC,QACA,GAAAx6C,KAAAq9B,WAAA7wB,KACAguC,GAAoBJ,EAAOE,MAC3BE,GAAmBJ,EAAOnrD,MAC1BurD,GAAmBJ,EAAOlrD,OAC1BsrD,GAAmBJ,EAAOC,IAAA,CAC1B,IACAvpC,EADAtE,EAAAqE,IACA0qB,UACAkf,EAAA3pC,EAAAiB,gBAAA/R,KAAA06C,YACA5oD,EAAA,EAAAC,EAAA,EACAyoD,GAAqBJ,EAAOE,KAC5BvoD,GAAA0oD,EACOD,GAAqBJ,EAAOnrD,KACnC6C,GAAA2oD,EACOD,GAAqBJ,EAAOlrD,MACnC4C,EAAA2oD,EAEA1oD,EAAA0oD,EAEA,IAAA1pC,EAAA,CAAAjf,EAAAC,GACMxL,OAAAiI,EAAA,EAAAjI,CAAgBwqB,EAAAD,EAAAY,eAChBnrB,OAAA6yD,EAAA,EAAA7yD,CAAGuqB,EAAAC,EAAA/Q,KAAAo7B,WACT5uB,EAAA8G,iBACAgD,GAAA,GAGA,OAAAA,EAGe,IAAAqkC,EA1FA,SAAAvqC,GACf,SAAAwqC,EAAA/kC,GAEAzF,EAAA1pB,KAAAsZ,KAAA,CACAqQ,YAAmBkqC,IAGnB,IAAAx6C,EAAA8V,GAAA,GAOA7V,KAAA66C,kBAAA,SAAAruC,GACA,OAAajmB,OAAA00C,EAAA,EAAA10C,CAAcimB,IACnBjmB,OAAA00C,EAAA,EAAA10C,CAAiBimB,IAOzBxM,KAAAq9B,gBAAAh0C,IAAA0W,EAAAk7B,UACAl7B,EAAAk7B,UAAAj7B,KAAA66C,kBAMA76C,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAMApR,KAAA06C,iBAAArxD,IAAA0W,EAAA+6C,WACA/6C,EAAA+6C,WAAA,IAQA,OAJA1qC,IAAAwqC,EAAA73C,UAAAqN,GACAwqC,EAAAp0D,UAAAD,OAAAmE,OAAA0lB,KAAA5pB,WACAo0D,EAAAp0D,UAAAwc,YAAA43C,EAEAA,EA7Ce,CA8CbxB,EAAA,GCLF,SAAS2B,EAAWvuC,GACpB,IAAA8J,GAAA,EACA,GAAA9J,EAAAzjB,MAA8Bg6C,EAAA,EAASroC,SACvC8R,EAAAzjB,MAA8Bg6C,EAAA,EAASpoC,SAAA,CACvC,IACAia,EAD4CpI,EAAA,cAC5CoI,SACA,GAAA5U,KAAAq9B,WAAA7wB,KACAoI,GAAA,IAAAuX,WAAA,IAAAvX,GAAA,IAAAuX,WAAA,KACA,IAAAtb,EAAArE,EAAAqE,IACAE,EAAA6D,GAAA,IAAAuX,WAAA,GAAAnsB,KAAAm5C,QAAAn5C,KAAAm5C,OACAroC,EAAAD,EAAA0qB,UACMh1C,OAAA6yD,EAAA,EAAA7yD,CAAWuqB,EAAAC,OAAA1nB,EAAA2W,KAAAo7B,WACjB5uB,EAAA8G,iBACAgD,GAAA,GAGA,OAAAA,EAGe,IAAA0kC,EAhEC,SAAA5qC,GAChB,SAAA6qC,EAAAplC,GAEAzF,EAAA1pB,KAAAsZ,KAAA,CACAqQ,YAAmB0qC,IAGnB,IAAAh7C,EAAA8V,GAAA,GAMA7V,KAAAq9B,WAAAt9B,EAAAk7B,UAAAl7B,EAAAk7B,UAA8DA,EAAA,EAM9Dj7B,KAAAm5C,OAAAp5C,EAAAgR,MAAAhR,EAAAgR,MAAA,EAMA/Q,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAQA,OAJAhB,IAAA6qC,EAAAl4C,UAAAqN,GACA6qC,EAAAz0D,UAAAD,OAAAmE,OAAA0lB,KAAA5pB,WACAy0D,EAAAz0D,UAAAwc,YAAAi4C,EAEAA,EAjCgB,CAkCd7B,EAAA,kBC5CK8B,EACP,WADOA,EAEP,QAkSeC,EAxQG,SAAA/qC,GAClB,SAAAgrC,EAAAvlC,GAEA,IAAA9V,EAAA8V,GAAA,GAEAzF,EAAA1pB,KAA8EsZ,KAAA,GAM9EA,KAAAm5C,OAAA,EAMAn5C,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAMApR,KAAAq7C,cAAAhyD,IAAA0W,EAAA7X,QAAA6X,EAAA7X,QAAA,GAMA8X,KAAAs7C,gBAAAjyD,IAAA0W,EAAAw7C,WAAAx7C,EAAAw7C,UAMAv7C,KAAAw7C,qBAAAz7C,EAAA8R,sBAAA,EAMA7R,KAAAq9B,WAAAt9B,EAAAk7B,UAAAl7B,EAAAk7B,UAA8DA,EAAA,EAM9Dj7B,KAAAy7C,YAAA,KAMAz7C,KAAA07C,gBAAAryD,EAMA2W,KAAA27C,WAMA37C,KAAA47C,WAAAvyD,EAOA2W,KAAA67C,kBAAA,IAKA77C,KAAA87C,mBAOA97C,KAAA+7C,sBAAA,IAOA/7C,KAAAg8C,oBAAA,IA0KA,OAtKA5rC,IAAAgrC,EAAAr4C,UAAAqN,GACAgrC,EAAA50D,UAAAD,OAAAmE,OAAA0lB,KAAA5pB,WACA40D,EAAA50D,UAAAwc,YAAAo4C,EAKAA,EAAA50D,UAAAy1D,0BAAA,WACAj8C,KAAA87C,wBAAAzyD,EACA2W,KAAA0Q,SAAA6qB,UACAoT,QAAiBC,EAAA,EAAQ7kC,aAAA,IAQzBqxC,EAAA50D,UAAA6pB,YAAA,SAAA7D,GACA,IAAAxM,KAAAq9B,WAAA7wB,GACA,SAEA,IAAAzjB,EAAAyjB,EAAAzjB,KACA,GAAAA,IAAiBg6C,EAAA,EAASxnC,OAAAxS,IAAmBg6C,EAAA,EAAS9nC,WACtD,SAGAuR,EAAA8G,iBAEA,IASAvC,EATAF,EAAArE,EAAAqE,IACAqrC,EAA2C1vC,EAAA,cAyB3C,GAvBAxM,KAAAs7C,aACAt7C,KAAAy7C,YAAAjvC,EAAAhe,YAMAge,EAAAzjB,MAAgCg6C,EAAA,EAASxnC,OACzCwV,EAAAmrC,EAAAnqD,OACU0d,EAAA,GACVysC,EAAAC,YAAAC,WAAAC,kBACAtrC,GAAiBtB,EAAA,GAEjBysC,EAAAC,YAAAC,WAAAE,iBACAvrC,GAAA,KAEKvE,EAAAzjB,MAAkCg6C,EAAA,EAAS9nC,aAChD8V,GAAAmrC,EAAAK,YACU9sC,EAAA,IACVsB,GAAA,IAIA,IAAAA,EACA,SAGA,IAAAq9B,EAAAD,KAAAC,MAYA,QAVA/kD,IAAA2W,KAAA07C,aACA17C,KAAA07C,WAAAtN,KAGApuC,KAAA47C,OAAAxN,EAAApuC,KAAA07C,WAAA17C,KAAA67C,qBACA77C,KAAA47C,MAAA/rD,KAAAiN,IAAAiU,GAAA,EACAmqC,EACAA,GAGAl7C,KAAA47C,QAAAV,EAAA,CACA,IAAApqC,EAAAD,EAAA0qB,UACAv7B,KAAA87C,mBACAlzD,aAAAoX,KAAA87C,oBAEAhrC,EAAA69B,QAAqBC,EAAA,EAAQ7kC,YAAA,GAE7B/J,KAAA87C,mBAAAxyD,WAAA0W,KAAAi8C,0BAAArxD,KAAAoV,WAAA67C,mBACA,IAAAnrD,EAAAogB,EAAAiB,gBAAAliB,KAAA2jB,IAAA,EAAAzC,EAAA/Q,KAAA+7C,uBACA95B,EAAAnR,EAAAoB,mBACAgQ,EAAApR,EAAAqB,mBACAqqC,EAAA,EAQA,GAPA9rD,EAAAuxB,GACAvxB,EAAAb,KAAAE,IAAAW,EAAAuxB,EAAAjiB,KAAAg8C,qBACAQ,EAAA,GACO9rD,EAAAwxB,IACPxxB,EAAAb,KAAAC,IAAAY,EAAAwxB,EAAAliB,KAAAg8C,qBACAQ,GAAA,GAEAx8C,KAAAy7C,YAAA,CACA,IAAAhrD,EAAAqgB,EAAAsB,oBAAA1hB,EAAAsP,KAAAy7C,aACA3qC,EAAAQ,UAAAR,EAAAI,gBAAAzgB,IA6BA,OA3BAqgB,EAAAuB,cAAA3hB,GAEA,IAAA8rD,GAAAx8C,KAAAw7C,sBACA1qC,EAAAK,QAAA,CACAzgB,WAAAogB,EAAAe,oBAAAnhB,EAAAqgB,EAAA,QACAM,OAAkBA,EAAA,EAClBM,OAAA3R,KAAAy7C,YACArqC,SAAApR,KAAAo7B,YAIAohB,EAAA,EACA1rC,EAAAK,QAAA,CACAzgB,WAAAuxB,EACA5Q,OAAkBA,EAAA,EAClBM,OAAA3R,KAAAy7C,YACArqC,SAAA,MAEOorC,EAAA,GACP1rC,EAAAK,QAAA,CACAzgB,WAAAwxB,EACA7Q,OAAkBA,EAAA,EAClBM,OAAA3R,KAAAy7C,YACArqC,SAAA,MAGApR,KAAA07C,WAAAtN,GACA,EAGApuC,KAAAm5C,QAAApoC,EAEA,IAAA0rC,EAAA5sD,KAAAE,IAAAiQ,KAAAq7C,UAAAjN,EAAApuC,KAAA07C,YAAA,GAKA,OAHA9yD,aAAAoX,KAAA27C,YACA37C,KAAA27C,WAAAryD,WAAA0W,KAAA08C,iBAAA9xD,KAAAoV,KAAA6Q,GAAA4rC,IAEA,GAOArB,EAAA50D,UAAAk2D,iBAAA,SAAA7rC,GACA,IAAAC,EAAAD,EAAA0qB,UACAzqB,EAAA+9B,gBACA/9B,EAAAi+B,mBAEA,IACAh+B,EAAgBxqB,OAAAuc,EAAA,EAAAvc,CAAKyZ,KAAAm5C,QAjRrB,KAkRI5yD,OAAA6yD,EAAA,EAAA7yD,CAAWuqB,GAAAC,EAAA/Q,KAAAy7C,YAAAz7C,KAAAo7B,WACfp7B,KAAA47C,WAAAvyD,EACA2W,KAAAm5C,OAAA,EACAn5C,KAAAy7C,YAAA,KACAz7C,KAAA07C,gBAAAryD,EACA2W,KAAA27C,gBAAAtyD,GASA+xD,EAAA50D,UAAAm2D,eAAA,SAAApB,GACAv7C,KAAAs7C,WAAAC,EACAA,IACAv7C,KAAAy7C,YAAA,OAIAL,EArQkB,CAsQhBhC,EAAA,GCjJawD,EA/IA,SAAAhnC,GACf,SAAAinC,EAAAhnC,GAEA,IAAA9V,EAAA8V,GAAA,GAEAinC,EAAmE,EAEnEA,EAAA5mC,WACA4mC,EAAA5mC,SAAgCknB,EAAA,GAGhCxnB,EAAAlvB,KAAAsZ,KAAA88C,GAMA98C,KAAA+8C,QAAA,KAMA/8C,KAAAm6C,gBAAA9wD,EAMA2W,KAAAg9C,WAAA,EAMAh9C,KAAAi9C,eAAA,EAMAj9C,KAAAk9C,gBAAA7zD,IAAA0W,EAAAo9C,UAAAp9C,EAAAo9C,UAAA,GAMAn9C,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IA6FA,OAzFAwE,IAAAinC,EAAA95C,UAAA6S,GACAinC,EAAAr2D,UAAAD,OAAAmE,OAAAkrB,KAAApvB,WACAq2D,EAAAr2D,UAAAwc,YAAA65C,EAKAA,EAAAr2D,UAAAuvB,gBAAA,SAAAvJ,GACA,IAAA4wC,EAAA,EAEAC,EAAAr9C,KAAAqW,eAAA,GACAinC,EAAAt9C,KAAAqW,eAAA,GAGA5W,EAAA5P,KAAAyqC,MACAgjB,EAAAtmC,QAAAqmC,EAAArmC,QACAsmC,EAAAvmC,QAAAsmC,EAAAtmC,SAEA,QAAA1tB,IAAA2W,KAAAm6C,WAAA,CACA,IAAAppC,EAAAtR,EAAAO,KAAAm6C,WACAn6C,KAAAi9C,gBAAAlsC,GACA/Q,KAAAg9C,WACAntD,KAAAiN,IAAAkD,KAAAi9C,gBAAAj9C,KAAAk9C,aACAl9C,KAAAg9C,WAAA,GAEAI,EAAArsC,EAEA/Q,KAAAm6C,WAAA16C,EAEA,IAAAoR,EAAArE,EAAAqE,IACAC,EAAAD,EAAA0qB,UACA,GAAAzqB,EAAAk/B,iBAAAr/C,WAA2C28C,EAAA,EAA3C,CAOA,IAAAiQ,EAAA1sC,EAAA2sC,cAAAC,wBACAhoC,EAAmBlvB,OAAAm3C,EAAA,EAAAn3C,CAAoByZ,KAAAqW,gBAMvC,GALAZ,EAAA,IAAA8nC,EAAAzkD,KACA2c,EAAA,IAAA8nC,EAAA/gB,IACAx8B,KAAA+8C,QAAAlsC,EAAA+rB,uBAAAnnB,GAGAzV,KAAAg9C,UAAA,CACA,IAAArsD,EAAAmgB,EAAAY,cACAb,EAAAkR,SACMx7B,OAAA6yD,EAAA,EAAA7yD,CAAwBuqB,EAAAngB,EAAAysD,EAAAp9C,KAAA+8C,YAO9BF,EAAAr2D,UAAAyvB,cAAA,SAAAzJ,GACA,GAAAxM,KAAAqW,eAAAjwB,OAAA,GACA,IACA0qB,EADAtE,EAAAqE,IACA0qB,UAEA,GADAzqB,EAAA69B,QAAmBC,EAAA,EAAQ7kC,aAAA,GAC3B/J,KAAAg9C,UAAA,CACA,IAAArsD,EAAAmgB,EAAAY,cACQnrB,OAAA6yD,EAAA,EAAA7yD,CAAMuqB,EAAAngB,EAAAqP,KAAA+8C,QAAA/8C,KAAAo7B,WAEd,SAEA,UAOAyhB,EAAAr2D,UAAAsvB,gBAAA,SAAAtJ,GACA,GAAAxM,KAAAqW,eAAAjwB,QAAA,GACA,IAAAyqB,EAAArE,EAAAqE,IAQA,OAPA7Q,KAAA+8C,QAAA,KACA/8C,KAAAm6C,gBAAA9wD,EACA2W,KAAAg9C,WAAA,EACAh9C,KAAAi9C,eAAA,EACAj9C,KAAAmW,wBACAtF,EAAA0qB,UAAAoT,QAA8BC,EAAA,EAAQ7kC,YAAA,IAEtC,EAEA,UAIA8yC,EA5Ie,CA6Ibnf,EAAA,GCEaggB,EAhJF,SAAA9nC,GACb,SAAA+nC,EAAA9nC,GAEA,IAAA9V,EAAA8V,GAAA,GAEAinC,EAAmE,EAEnEA,EAAA5mC,WACA4mC,EAAA5mC,SAAgCknB,EAAA,GAGhCxnB,EAAAlvB,KAAAsZ,KAAA88C,GAMA98C,KAAAw7C,qBAAAz7C,EAAA8R,sBAAA,EAMA7R,KAAA+8C,QAAA,KAMA/8C,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAMApR,KAAA49C,mBAAAv0D,EAMA2W,KAAA69C,gBAAA,EAoGA,OAhGAjoC,IAAA+nC,EAAA56C,UAAA6S,GACA+nC,EAAAn3D,UAAAD,OAAAmE,OAAAkrB,KAAApvB,WACAm3D,EAAAn3D,UAAAwc,YAAA26C,EAKAA,EAAAn3D,UAAAuvB,gBAAA,SAAAvJ,GACA,IAAAsxC,EAAA,EAEAT,EAAAr9C,KAAAqW,eAAA,GACAinC,EAAAt9C,KAAAqW,eAAA,GACA/nB,EAAA+uD,EAAAtmC,QAAAumC,EAAAvmC,QACAxoB,EAAA8uD,EAAArmC,QAAAsmC,EAAAtmC,QAGA8a,EAAAjiC,KAAA4zB,KAAAn1B,IAAAC,UAEAlF,IAAA2W,KAAA49C,gBACAE,EAAA99C,KAAA49C,cAAA9rB,GAEA9xB,KAAA49C,cAAA9rB,EAGA,IAAAjhB,EAAArE,EAAAqE,IACAC,EAAAD,EAAA0qB,UACA7qC,EAAAogB,EAAAiB,gBACAmQ,EAAApR,EAAAqB,mBACA8P,EAAAnR,EAAAoB,mBACA6rC,EAAArtD,EAAAotD,EACAC,EAAA77B,GACA47B,EAAA57B,EAAAxxB,EACAqtD,EAAA77B,GACK67B,EAAA97B,IACL67B,EAAA77B,EAAAvxB,EACAqtD,EAAA97B,GAGA,GAAA67B,IACA99C,KAAA69C,gBAAAC,GAIA,IAAAP,EAAA1sC,EAAA2sC,cAAAC,wBACAhoC,EAAmBlvB,OAAAm3C,EAAA,EAAAn3C,CAAoByZ,KAAAqW,gBACvCZ,EAAA,IAAA8nC,EAAAzkD,KACA2c,EAAA,IAAA8nC,EAAA/gB,IACAx8B,KAAA+8C,QAAAlsC,EAAA+rB,uBAAAnnB,GAGA5E,EAAAkR,SACIx7B,OAAA6yD,EAAA,EAAA7yD,CAAsBuqB,EAAAitC,EAAA/9C,KAAA+8C,UAM1BY,EAAAn3D,UAAAyvB,cAAA,SAAAzJ,GACA,GAAAxM,KAAAqW,eAAAjwB,OAAA,GACA,IACA0qB,EADAtE,EAAAqE,IACA0qB,UACAzqB,EAAA69B,QAAmBC,EAAA,EAAQ7kC,aAAA,GAC3B,IAAArZ,EAAAogB,EAAAiB,gBACA,GAAA/R,KAAAw7C,sBACA9qD,EAAAogB,EAAAoB,oBACAxhB,EAAAogB,EAAAqB,mBAAA,CAIA,IAAAxK,EAAA3H,KAAA69C,gBAAA,EACQt3D,OAAA6yD,EAAA,EAAA7yD,CAAIuqB,EAAApgB,EAAAsP,KAAA+8C,QAAA/8C,KAAAo7B,UAAAzzB,GAEZ,SAEA,UAOAg2C,EAAAn3D,UAAAsvB,gBAAA,SAAAtJ,GACA,GAAAxM,KAAAqW,eAAAjwB,QAAA,GACA,IAAAyqB,EAAArE,EAAAqE,IAOA,OANA7Q,KAAA+8C,QAAA,KACA/8C,KAAA49C,mBAAAv0D,EACA2W,KAAA69C,gBAAA,EACA79C,KAAAmW,wBACAtF,EAAA0qB,UAAAoT,QAA8BC,EAAA,EAAQ7kC,YAAA,IAEtC,EAEA,UAIA4zC,EA7Ia,CA8IXjgB,EAAA,GC7EK,SAAAsgB,EAAAnoC,GAEP,IAAA9V,EAAA8V,GAAA,GAEAooC,EAAA,IAAyBnmC,EAAA,EAEzB4hC,EAAA,IAAoBV,GAAO,cAkE3B,YAhEA3vD,IAAA0W,EAAAm+C,oBACAn+C,EAAAm+C,qBAEAD,EAAA33D,KAAA,IAA0B2zD,SAG1B5wD,IAAA0W,EAAAo+C,iBACAp+C,EAAAo+C,kBAEAF,EAAA33D,KAAA,IAA0B+yD,EAAe,CACzCtoC,MAAAhR,EAAAq+C,UACAhtC,SAAArR,EAAAs+C,sBAIAh1D,IAAA0W,EAAAu+C,SAAAv+C,EAAAu+C,UAEAL,EAAA33D,KAAA,IAA0BizD,EAAO,CACjCte,UAAAl7B,EAAAw+C,YAAuCtjB,EAAA,OAAK5xC,EAC5CqwD,mBAIArwD,IAAA0W,EAAAy+C,aAAAz+C,EAAAy+C,cAGAP,EAAA33D,KAAA,IAA0Bs2D,SAG1BvzD,IAAA0W,EAAA0+C,WAAA1+C,EAAA0+C,YAEAR,EAAA33D,KAAA,IAA0Bo3D,EAAS,CACnC7rC,oBAAA9R,EAAA8R,oBACAT,SAAArR,EAAAs+C,sBAIAh1D,IAAA0W,EAAA2+C,UAAA3+C,EAAA2+C,YAEAT,EAAA33D,KAAA,IAA0Bq0D,GAC1BsD,EAAA33D,KAAA,IAA0B00D,EAAY,CACtCjqC,MAAAhR,EAAAq+C,UACAhtC,SAAArR,EAAAs+C,uBAIAh1D,IAAA0W,EAAA4+C,gBACA5+C,EAAA4+C,iBAEAV,EAAA33D,KAAA,IAA0B60D,EAAc,CACxClgB,UAAAl7B,EAAAw+C,YAAuCtjB,EAAA,OAAK5xC,EAC5CwoB,oBAAA9R,EAAA8R,oBACAT,SAAArR,EAAAs+C,sBAIAh1D,IAAA0W,EAAA6+C,eACA7+C,EAAA6+C,gBAEAX,EAAA33D,KAAA,IAA0By0C,EAAA,EAAQ,CAClC3pB,SAAArR,EAAAs+C,gBAIAJ,EAhKAj3D,EAAA2C,EAAA6B,EAAA,sBAAAwyD,kCCAAh3D,EAAA2C,EAAA6B,EAAA,sBAAAqzD,IAAA,IAAAC,EAAA93D,EAAA,IAcO63D,EAAA,2FAkCPE,EAAA,SAAApsC,GACA,SAAAosC,EAAAlpC,GAEA,IAEAmrB,EAFAjhC,EAAA8V,GAAA,GAIAmrB,OADA33C,IAAA0W,EAAAihC,aACAjhC,EAAAihC,aAEA,CAAA6d,GAGA,IAAA5d,OAAA53C,IAAA0W,EAAAkhC,YACAlhC,EAAAkhC,YAAA,YAEAnV,OAAAziC,IAAA0W,EAAA+rB,IACA/rB,EAAA+rB,IAAA,uDAEAnZ,EAAAjsB,KAAAsZ,KAAA,CACAghC,eACAld,UAAA/jB,EAAA+jB,UACAmd,cACAC,YAAA73C,IAAA0W,EAAAmhC,QAAAnhC,EAAAmhC,OACA9X,aAAA//B,IAAA0W,EAAAqpB,QAAArpB,EAAAqpB,QAAA,GACA+X,2BAAAphC,EAAAohC,2BACAC,iBAAArhC,EAAAqhC,iBACAtV,MACArE,MAAA1nB,EAAA0nB,MACA+Z,yBAAA,IASA,OAJA7uB,IAAAosC,EAAAh8C,UAAA4P,GACAosC,EAAAv4D,UAAAD,OAAAmE,OAAAioB,KAAAnsB,WACAu4D,EAAAv4D,UAAAwc,YAAA+7C,EAEAA,EArCA,CAsCED,EAAA,GAEatzD,EAAA,4GChFAu3C,EAAA,CACf54B,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iCCwBAs0C,EAAA,CACA,GACA,cACA,QACA,MACA,SASA,SAAAC,EAAAxxB,GACAztB,KAAA2tB,WAAAF,EAAA7W,UAAAC,YAAA4W,EACA,IAAArmC,EAAA4Y,KAAAk/C,cAAAzxB,GACAztB,KAAAyqB,WAAAoD,KAAAzmC,EAAAqmC,GASA,SAAA0xB,EAAA1xB,GACA,IAAArmC,EAAA4Y,KAAAk/C,cAAAzxB,GACAztB,KAAAyqB,WAAAsD,KAAA3mC,EAAAqmC,GASA,SAAA2xB,EAAA3xB,GACA,IAAArmC,EAAA4Y,KAAAk/C,cAAAzxB,GACAztB,KAAAyqB,WAAAwD,GAAA7mC,EAAAqmC,GACAztB,KAAAq/C,QAAA5xB,EAAA7W,WASA,SAAA0oC,EAAA7xB,GACA,IAAArmC,EAAA4Y,KAAAk/C,cAAAzxB,GACAztB,KAAAyqB,WAAA6D,SAAAlnC,EAAAqmC,GASA,SAAA8xB,EAAA9xB,GACA,IAAArmC,EAAA4Y,KAAAk/C,cAAAzxB,GACAztB,KAAAyqB,WAAA2D,UAAAhnC,EAAAqmC,GASA,SAAA+xB,EAAA/xB,GACA,IAAArmC,EAAA4Y,KAAAk/C,cAAAzxB,GACAztB,KAAAyqB,WAAAmD,OAAAxmC,EAAAqmC,GACAztB,KAAAq/C,QAAA5xB,EAAA7W,WASA,SAAA6oC,EAAAhyB,GACA,IAAArmC,EAAA4Y,KAAAyqB,WAAAi1B,UAAA,qBAAAjyB,KACAztB,KAAAyqB,WAAAnc,cAAAlnB,GASA,SAAAu4D,EAAAlyB,GACA,IAAArmC,EAAA4Y,KAAAyqB,WAAAi1B,UAAA,oBAAAjyB,KACAztB,KAAAyqB,WAAAnc,cAAAlnB,GAGA,IAuDew4D,EAvDf,SAAAp1B,GACA,SAAAq1B,EAAAp1B,GACA,IAAAC,EAAA,CACAo1B,cAAAb,EACAc,cAAAZ,EACAa,YAAAZ,EACAa,aAAAX,EACAY,cAAAX,EACAY,gBAAAX,EACAY,oBAAAT,EACAU,qBAAAZ,GAEAj1B,EAAA9jC,KAAAsZ,KAAAyqB,EAAAC,GAMA1qB,KAAA2tB,WAAAlD,EAAAkD,WAkCA,OA/BAnD,IAAAq1B,EAAA98C,UAAAynB,GACAq1B,EAAAr5D,UAAAD,OAAAmE,OAAA8/B,KAAAhkC,WACAq5D,EAAAr5D,UAAAwc,YAAA68C,EAUAA,EAAAr5D,UAAA04D,cAAA,SAAAzxB,GAEA,IAAArmC,EAAAqmC,EAMA,MALA,iBAAAA,EAAAtgB,eACA/lB,EAAA4Y,KAAAyqB,WAAAiE,WAAAjB,MACAtgB,YAAA6xC,EAAAvxB,EAAAtgB,cAGA/lB,GAOAy4D,EAAAr5D,UAAA64D,QAAA,SAAAzoC,UACA5W,KAAA2tB,WAAA/W,EAAAC,aAGAgpC,EApDA,CAqDES,EAAA,GCtJF,SAAAC,EAAA9yB,GACAztB,KAAAyqB,WAAA+1B,gBAAA/yB,GASA,SAAAgzB,EAAAhzB,GACAztB,KAAAyqB,WAAA+1B,gBAAA/yB,GASA,SAAAizB,EAAAjzB,GACAztB,KAAAyqB,WAAA+1B,gBAAA/yB,GASA,SAAAkzB,EAAAlzB,GACAztB,KAAAyqB,WAAA+1B,gBAAA/yB,GASA,SAAAmzB,EAAAnzB,GACAztB,KAAAyqB,WAAA+1B,gBAAA/yB,GASA,SAAAozB,EAAApzB,GACAztB,KAAAyqB,WAAA+1B,gBAAA/yB,GASA,SAAAqzB,EAAArzB,GACAztB,KAAAyqB,WAAA+1B,gBAAA/yB,GASA,SAAAszB,EAAAtzB,GACAztB,KAAAyqB,WAAA+1B,gBAAA/yB,GAGA,IAsBeuzB,EAtBf,SAAAx2B,GACA,SAAAy2B,EAAAx2B,GACA,IAAAC,EAAA,CACAw2B,YAAAX,EACAY,YAAAV,EACAW,UAAAV,EACAW,WAAAV,EACAW,YAAAV,EACAW,cAAAV,EACAW,kBAAAT,EACAU,mBAAAX,GAEAt2B,EAAA9jC,KAAAsZ,KAAAyqB,EAAAC,GAOA,OAJAF,IAAAy2B,EAAAl+C,UAAAynB,GACAy2B,EAAAz6D,UAAAD,OAAAmE,OAAA8/B,KAAAhkC,WACAy6D,EAAAz6D,UAAAwc,YAAAi+C,EAEAA,EAnBA,CAoBEX,EAAA,WC/FFoB,GAAA,EAGAC,EAAA,SAAAC,GACA,SAAAD,EAAA54D,EAAA0jB,EAAAo1C,GACAD,EAAAl7D,KAAAsZ,KAAAjX,GAMAiX,KAAAyM,gBAEA,IAAAq1C,EAAAD,GAAA,GAKA7hD,KAAA+hD,QA+IA,SAAAD,GAsBA,IAAAC,EACA,GAAAD,EAAAC,SAAAL,EACAK,EAAAD,EAAAC,aAEA,OAAAD,EAAAE,OACA,OAAAD,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,OAAAA,EAAA,EAA0B,MAC1B,QAAAA,EAAA,EAGA,OAAAA,EAhLAE,CAAAH,GAKA9hD,KAAAkiD,SAoLA,SAAAJ,EAAAC,GAGA,IAAAG,EAAA,EAEAA,EADAJ,EAAAI,SACAJ,EAAAI,SAEAH,EAAA,KAEA,OAAAG,EA7LAC,CAAAL,EAAA9hD,KAAA+hD,SAOA/hD,KAAAoiD,QAAA,YAAAN,KAAA,QAKA9hD,KAAAqiD,WAAA,eAAAP,KAAA,WAKA9hD,KAAA8Q,KAAA,SAAAgxC,IAAA,UAKA9hD,KAAAsiD,OAAA,WAAAR,IAAA,YAKA9hD,KAAAuiD,QAAA,YAAAT,IAAA,UAKA9hD,KAAAwiD,QAAA,YAAAV,IAAA,UAKA9hD,KAAA+W,QAAA,YAAA+qC,IAAA,UAKA9hD,KAAAgX,QAAA,YAAA8qC,IAAA,UAKA9hD,KAAA4M,QAAA,YAAAk1C,KAAA,QAKA9hD,KAAA0M,OAAA,WAAAo1C,KAAA,OAKA9hD,KAAA6M,SAAA,aAAAi1C,KAAA,SAKA9hD,KAAA2M,QAAA,YAAAm1C,KAAA,QAKA9hD,KAAAgN,OAAA,WAAA80C,IAAA,SAKA9hD,KAAAyiD,cAAA,kBAAAX,EACAA,EAAA,mBAQA9hD,KAAA4W,UAAA,cAAAkrC,IAAA,YAKA9hD,KAAAnI,MAAA,UAAAiqD,IAAA,QAKA9hD,KAAAxH,OAAA,WAAAspD,IAAA,SAKA9hD,KAAA0iD,MAAA,UAAAZ,IAAA,QAKA9hD,KAAA2iD,MAAA,UAAAb,IAAA,QAKA9hD,KAAAmN,YAAA,gBAAA20C,IAAA,eAKA9hD,KAAA4iD,YAAA,gBAAAd,IAAA,cAKA9hD,KAAA4uB,UAAA,cAAAkzB,KAAA,UAGAr1C,EAAA6G,iBACAtT,KAAAsT,eAAA,WACA7G,EAAA6G,mBASA,OAJAsuC,IAAAD,EAAA5+C,UAAA6+C,GACAD,EAAAn7D,UAAAD,OAAAmE,OAAAk3D,KAAAp7D,WACAm7D,EAAAn7D,UAAAwc,YAAA2+C,EAEAA,EAtJA,CAuJEh0C,EAAA,IAiEF,WACA,IACA,IAAAk1C,EAAA,IAAAC,WAAA,SAAsCf,QAAA,IACtCL,EAAA,IAAAmB,EAAAd,QACG,MAAA36D,KAJH,GASe,IAAA27D,EAAA,UCrNf,SAAAC,EAAAv1B,GACAztB,KAAAijD,eAAAx1B,GACAztB,KAAAkjD,iBAAAz1B,EAAA01B,eAAA,IACAnjD,KAAAojD,iBAAA31B,GACAztB,KAAAqjD,cACArjD,KAAAsjD,gBAAA71B,EAAAztB,KAAAujD,WASA,SAAAC,EAAA/1B,GACAztB,KAAAsjD,gBAAA71B,EAAAztB,KAAAyjD,cAUA,SAAAC,EAAAj2B,GACAztB,KAAAojD,iBAAA31B,GACAztB,KAAAsjD,gBAAA71B,EAAAztB,KAAA2jD,QAUA,SAAAC,EAAAn2B,GACAztB,KAAAsjD,gBAAA71B,EAAAztB,KAAA6jD,YAIA,IAsUeC,EAtUA,SAAAt5B,GACf,SAAAu5B,EAAAt5B,EAAAu5B,GACA,IAAAt5B,EAAA,CACAs4B,aACAQ,YACAE,WACAE,eAEAp5B,EAAA9jC,KAAAsZ,KAAAyqB,EAAAC,GAMA1qB,KAAA2tB,WAAAlD,EAAAkD,WAMA3tB,KAAAgkD,cAMAhkD,KAAAikD,mBAAA56D,EAMA2W,KAAAqjD,YAAA,EAMArjD,KAAAkkD,SAQAlkD,KAAAmkD,cAAA,KAqRA,OAlRA35B,IAAAu5B,EAAAhhD,UAAAynB,GACAu5B,EAAAv9D,UAAAD,OAAAmE,OAAA8/B,KAAAhkC,WACAu9D,EAAAv9D,UAAAwc,YAAA+gD,EAOAA,EAAAv9D,UAAA49D,gBAAA,SAAAC,GACA,OAAArkD,KAAAikD,gBAAAI,EAAAC,YAQAP,EAAAv9D,UAAA08D,iBAAA,SAAAmB,GACA,IAAAE,EAAAh+D,OAAA2N,KAAA8L,KAAA2tB,YAAAvnC,QACA,IAAAm+D,GAAA,IAAAA,GAAuCh2B,EAAA,EAAU1X,aAAA7W,KAAA2tB,cACjD3tB,KAAAikD,cAAAI,EAAAC,WACAtkD,KAAAwkD,2BAQAT,EAAAv9D,UAAAi+D,sBAAA,SAAAC,GACAA,EAAA91B,YACA5uB,KAAAikD,mBAAA56D,EACA2W,KAAA2kD,qBAOAZ,EAAAv9D,UAAAm+D,iBAAA,WACA3kD,KAAAkkD,SAAA56D,WACA0W,KAAA4kD,wBAAAh6D,KAAAoV,MAnJA,MA0JA+jD,EAAAv9D,UAAAo+D,wBAAA,WACA5kD,KAAAqjD,YAAA,EACArjD,KAAAkkD,cAAA76D,GAMA06D,EAAAv9D,UAAAg+D,uBAAA,gBACAn7D,IAAA2W,KAAAkkD,UACAt7D,aAAAoX,KAAAkkD,WAUAH,EAAAv9D,UAAAq+D,gBAAA,SAAAnkB,EAAA2jB,GACA,IAAAj9D,EAAA4Y,KAAAyqB,WAAAiE,WAAAgS,EAAA2jB,GAyBA,OArBAj9D,EAAAwvB,UAAAytC,EAAAC,WAAA,EAGAl9D,EAAAg7D,SAAA,EACAh7D,EAAAi7D,YAAA,EACAj7D,EAAAk7D,OAAAtiD,KAAAqjD,YACAj8D,EAAA4lB,OAAA,EACA5lB,EAAA26D,QAAA,EACA36D,EAAAyQ,MAAAwsD,EAAAS,SAAA,EACA19D,EAAAoR,OAAA6rD,EAAAU,SAAA,EACA39D,EAAA86D,SAAAmC,EAAAW,OAAA,GACA59D,EAAAwnC,UAAA5uB,KAAAokD,gBAAAC,GACAj9D,EAAA+lB,YA1LA,QA8LA/lB,EAAA2vB,QAAAstC,EAAAttC,QACA3vB,EAAA4vB,QAAAqtC,EAAArtC,QACA5vB,EAAAm7D,QAAA8B,EAAA9B,QACAn7D,EAAAo7D,QAAA6B,EAAA7B,QAEAp7D,GAQA28D,EAAAv9D,UAAA88D,gBAAA,SAAA71B,EAAAw3B,GACA,IAAAC,EAAA9nD,MAAA5W,UAAA8E,MAAA5E,KAAA+mC,EAAA01B,gBACAoB,EAAAW,EAAA9+D,OACA,SAAAktB,IACAma,EAAAna,iBAEA,QAAAptB,EAAA,EAAmBA,EAAAq+D,IAAWr+D,EAAA,CAC9B,IAAAi/D,EAAAnlD,KAAA6kD,gBAAAp3B,EAAAy3B,EAAAh/D,IAEAi/D,EAAA7xC,iBACA2xC,EAAAv+D,KAAAsZ,KAAAytB,EAAA03B,KAUApB,EAAAv9D,UAAA4+D,WAAA,SAAAC,EAAAC,GAEA,IADA,IAAAn+D,EAAAk+D,EAAAj/D,OACAF,EAAA,EAAmBA,EAAAiB,EAAOjB,IAAA,CAE1B,GADAm/D,EAAAn/D,GACAo+D,aAAAgB,EACA,SAGA,UAcAvB,EAAAv9D,UAAAy8D,eAAA,SAAAx1B,GACA,IAAA43B,EAAA53B,EAAAy3B,QAGAhxD,EAAA3N,OAAA2N,KAAA8L,KAAA2tB,YACA42B,EAAArwD,EAAA9N,OACA,GAAAm+D,GAAAc,EAAAj/D,OAAA,CAEA,IADA,IAAAuD,EAAA,GACAzD,EAAA,EAAqBA,EAAAq+D,IAAWr+D,EAAA,CAChC,IAAAyE,EAAA8pB,OAAAvgB,EAAAhO,IACAmE,EAAA2V,KAAA2tB,WAAAhjC,GAIAA,GAAmB4jC,EAAA,GAAUvuB,KAAAolD,WAAAC,EAAA16D,EAAA,IAC7BhB,EAAArD,KAAA+D,EAAAixC,KAGA,QAAAnY,EAAA,EAAuBA,EAAAx5B,EAAAvD,SAAgB+8B,EACvCnjB,KAAA6jD,WAAAp2B,EAAA9jC,EAAAw5B,MAUA4gC,EAAAv9D,UAAA+8D,UAAA,SAAA7iB,EAAAgkB,GACA1kD,KAAA2tB,WAAA+2B,EAAA9tC,WAAA,CACA3tB,OAAAy7D,EAAAz7D,OACAqyC,IAAAopB,EACAa,UAAAb,EAAAz7D,QAEA+W,KAAAyqB,WAAA+6B,KAAAd,EAAAhkB,GACA1gC,KAAAyqB,WAAAg7B,MAAAf,EAAAhkB,GACA1gC,KAAAyqB,WAAAoD,KAAA62B,EAAAhkB,IAQAqjB,EAAAv9D,UAAAi9D,aAAA,SAAA/iB,EAAAgkB,GACA,IAAAj8D,EAAAi8D,EACAS,EAAAnlD,KAAA2tB,WAAAllC,EAAAmuB,WAEA,GAAAuuC,EAAA,CAGA,IAAAO,EAAAP,EAAA7pB,IACAiqB,EAAAJ,EAAAI,UACAvlD,KAAAyqB,WAAAsD,KAAAtlC,EAAAi4C,GACAglB,GAAAH,IAAA98D,EAAAQ,SACAy8D,EAAAjD,cAAAh6D,EAAAQ,OACwB,EAAAw5D,cAAA8C,EAExBG,EAAAz8D,OAAAs8D,EACA98D,EAAAQ,QACA+W,KAAAyqB,WAAA6D,SAAAo3B,EAAAhlB,GACA1gC,KAAAyqB,WAAA2D,UAAA3lC,EAAAi4C,KAG0B,EAAAz3C,OAAAs8D,EACA,EAAA9C,cAAA,KAC1BziD,KAAA6jD,WAAAnjB,EAAAj4C,KAGA08D,EAAA7pB,IAAA7yC,EACA08D,EAAAI,UAAA98D,EAAAQ,SAQA86D,EAAAv9D,UAAAm9D,OAAA,SAAAjjB,EAAAgkB,GACA1kD,KAAAyqB,WAAAwD,GAAAy2B,EAAAhkB,GACA1gC,KAAAyqB,WAAA6Q,IAAAopB,EAAAhkB,GACA1gC,KAAAyqB,WAAAk7B,MAAAjB,EAAAhkB,GACA1gC,KAAA4lD,gBAAAlB,IAQAX,EAAAv9D,UAAAq9D,WAAA,SAAAnjB,EAAAgkB,GACA1kD,KAAAyqB,WAAAmD,OAAA82B,EAAAhkB,GACA1gC,KAAAyqB,WAAA6Q,IAAAopB,EAAAhkB,GACA1gC,KAAAyqB,WAAAk7B,MAAAjB,EAAAhkB,GACA1gC,KAAA4lD,gBAAAlB,IAOAX,EAAAv9D,UAAAo/D,gBAAA,SAAAlB,UACA1kD,KAAA2tB,WAAA+2B,EAAA9tC,WACA5W,KAAAykD,sBAAAC,IASAX,EAAAv9D,UAAA48D,iBAAA,SAAA31B,GACA,IAAAgB,EAAAzuB,KAAAgkD,YAAAx1B,YACAlkC,EAAAmjC,EAAA01B,eAAA,GAEA,GAAAnjD,KAAAokD,gBAAA95D,GAAA,CAEA,IAAAu7D,EAAA,CAAAv7D,EAAAysB,QAAAzsB,EAAA0sB,SACAyX,EAAAnoC,KAAAu/D,GAEAv8D,WAAA,WAEQ/C,OAAAgyB,EAAA,EAAAhyB,CAAMkoC,EAAAo3B,IACP7lD,KAAAmkD,iBAIPJ,EAnUe,CAoUbzD,EAAA,GCrXFwF,EAAA,CAEA,eACA,kBACA,cACA,gBACA,cACA,cACA,cACA,cACA,eACA,cACA,gBACA,eACA,aACA,uBAEA,cAEA,gBACA,YACA,aACA,eACA,YACA,YACA,mBACA,kBACA,iBAEA,YACA,gBACA,uBACA,aAkVeC,EA9UQ,SAAAhoB,GACvB,SAAAioB,EAAAnuC,GACAkmB,EAAAr3C,KAAAsZ,MAOAA,KAAAk8B,SAAArkB,EAMA7X,KAAA2tB,WAAA,GAMA3tB,KAAAimD,UAAA,GAMAjmD,KAAAkmD,iBAAA,GAEAlmD,KAAAmmD,kBA8SA,OA3SApoB,IAAAioB,EAAAjjD,UAAAg7B,GACAioB,EAAAx/D,UAAAD,OAAAmE,OAAAqzC,KAAAv3C,WACAw/D,EAAAx/D,UAAAwc,YAAAgjD,EAMAA,EAAAx/D,UAAA2/D,gBAAA,WACA,GAAQ12C,EAAA,EACRzP,KAAAomD,eAAA,aAAwCpF,EAAYhhD,YAC/C,GAAUyP,EAAA,EACfzP,KAAAomD,eAAA,SAAoCxG,EAAQ5/C,WACvC,CACL,IAAAgkD,EAAA,IAA4Bz1B,EAAA,EAAWvuB,MACvCA,KAAAomD,eAAA,QAAApC,GAEUv0C,EAAA,GACVzP,KAAAomD,eAAA,YAAyCtC,EAAW9jD,KAAAgkD,IAKpDhkD,KAAAqmD,aASAL,EAAAx/D,UAAA4/D,eAAA,SAAAx8D,EAAA8a,GACA,IAAAnZ,EAAAmZ,EACA4hD,EAAA/6D,EAAAq/B,YAEA07B,IACAA,EAAAzgD,QAAA,SAAAze,GACA,IAAAm/D,EAAAh7D,EAAAs/B,mBAAAzjC,GAEAm/D,IACAvmD,KAAAimD,UAAA7+D,GAAAm/D,EAAA37D,KAAAW,KAEOX,KAAAoV,OACPA,KAAAkmD,iBAAA5/D,KAAAiF,KAQAy6D,EAAAx/D,UAAA6/D,UAAA,WAEA,IADA,IAAAl/D,EAAA6Y,KAAAkmD,iBAAA9/D,OACAF,EAAA,EAAmBA,EAAAiB,EAAOjB,IAAA,CAC1B,IAAAsgE,EAAAxmD,KAAAkmD,iBAAAhgE,GACA8Z,KAAAymD,WAAAD,EAAA57B,eAQAo7B,EAAAx/D,UAAAkgE,YAAA,WAEA,IADA,IAAAv/D,EAAA6Y,KAAAkmD,iBAAA9/D,OACAF,EAAA,EAAmBA,EAAAiB,EAAOjB,IAAA,CAC1B,IAAAsgE,EAAAxmD,KAAAkmD,iBAAAhgE,GACA8Z,KAAA2mD,cAAAH,EAAA57B,eASAo7B,EAAAx/D,UAAAogE,cAAA,SAAAn5B,GACA,IAAA1kC,EAAA0kC,EAAA1kC,KACAw9D,EAAAvmD,KAAAimD,UAAAl9D,GACAw9D,GACAA,EAAA94B,IASAu4B,EAAAx/D,UAAAigE,WAAA,SAAA9hB,GACAA,EAAA9+B,QAAA,SAAAghD,GACMtgE,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAk8B,SAAA2qB,EAAA7mD,KAAA4mD,cAAA5mD,OACPpV,KAAAoV,QAQLgmD,EAAAx/D,UAAAmgE,cAAA,SAAAhiB,GACAA,EAAA9+B,QAAA,SAAAze,GACMb,OAAAugE,EAAA,EAAAvgE,CAAQyZ,KAAAk8B,SAAA90C,EAAA4Y,KAAA4mD,cAAA5mD,OACTpV,KAAAoV,QAYLgmD,EAAAx/D,UAAAkoC,WAAA,SAAAjmC,EAAAglC,GAEA,IADA,IAAAs5B,EAAA,GACA7gE,EAAA,EAAAgI,EAAA43D,EAAA1/D,OAA4CF,EAAAgI,EAAQhI,IAAA,CACpD,IAAAoC,EAAAw9D,EAAA5/D,GAAA,GACA6gE,EAAAz+D,GAAAG,EAAAH,IAAAmlC,EAAAnlC,IAAAw9D,EAAA5/D,GAAA,GAGA,OAAA6gE,GAWAf,EAAAx/D,UAAAqnC,KAAA,SAAAhoC,EAAA4C,GACAuX,KAAAgnD,UAAmBjkB,EAAgB34B,YAAAvkB,EAAA4C,IAQnCu9D,EAAAx/D,UAAAunC,KAAA,SAAAloC,EAAA4C,GACAuX,KAAAgnD,UAAmBjkB,EAAgB54B,YAAAtkB,EAAA4C,IAQnCu9D,EAAAx/D,UAAAynC,GAAA,SAAApoC,EAAA4C,GACAuX,KAAAgnD,UAAmBjkB,EAAgB14B,UAAAxkB,EAAA4C,IAQnCu9D,EAAAx/D,UAAAi/D,MAAA,SAAA5/D,EAAA4C,GACA5C,EAAAu8D,SAAA,EACApiD,KAAAgnD,UAAmBjkB,EAAgBv4B,aAAA3kB,EAAA4C,IAQnCu9D,EAAAx/D,UAAAm/D,MAAA,SAAA9/D,EAAA4C,GACA5C,EAAAu8D,SAAA,EACApiD,KAAAgnD,UAAmBjkB,EAAgBt4B,aAAA5kB,EAAA4C,IAQnCu9D,EAAAx/D,UAAAg/D,KAAA,SAAA3/D,EAAA4C,GACA5C,EAAAu8D,SAAA,EACApiD,KAAAgnD,UAAmBjkB,EAAgBz4B,YAAAzkB,EAAA4C,IAQnCu9D,EAAAx/D,UAAA80C,IAAA,SAAAz1C,EAAA4C,GACA5C,EAAAu8D,SAAA,EACApiD,KAAAgnD,UAAmBjkB,EAAgBx4B,WAAA1kB,EAAA4C,IAQnCu9D,EAAAx/D,UAAAonC,OAAA,SAAA/nC,EAAA4C,GACAuX,KAAAgnD,UAAmBjkB,EAAgBr4B,cAAA7kB,EAAA4C,IAQnCu9D,EAAAx/D,UAAA8nC,SAAA,SAAAzoC,EAAA4C,GACAuX,KAAAs7B,IAAAz1C,EAAA4C,GACAuX,KAAAinD,UAAAphE,EAAAoD,OAAApD,EAAA48D,gBACAziD,KAAA2lD,MAAA9/D,EAAA4C,IASAu9D,EAAAx/D,UAAA4nC,UAAA,SAAAvoC,EAAA4C,GACAuX,KAAAwlD,KAAA3/D,EAAA4C,GACAuX,KAAAinD,UAAAphE,EAAAoD,OAAApD,EAAA48D,gBACAziD,KAAAylD,MAAA5/D,EAAA4C,IAWAu9D,EAAAx/D,UAAAygE,UAAA,SAAAC,EAAAC,GACA,SAAAD,IAAAC,IAGAD,EAAA1hC,SAAA2hC,IAaAnB,EAAAx/D,UAAAk5D,UAAA,SAAA0H,EAAAvhE,EAAA4C,GACA,WAAes6D,EAAYqE,EAAA3+D,EAAA5C,IAS3BmgE,EAAAx/D,UAAAwgE,UAAA,SAAAI,EAAAvhE,EAAA4C,GACA,IAAArB,EAAA4Y,KAAA0/C,UAAA0H,EAAAvhE,EAAA4C,GACAuX,KAAAsO,cAAAlnB,IAQA4+D,EAAAx/D,UAAAg6D,gBAAA,SAAA/3D,GACA,IAAArB,EAAA4Y,KAAA0/C,UAAAj3D,EAAAM,KAAAN,KACAuX,KAAAsO,cAAAlnB,IAUA4+D,EAAAx/D,UAAA6gE,eAAA,SAAAh5C,EAAA5lB,GAGA,OAFAuX,KAAA0/C,UACArxC,EAAiB9nB,OAAAgoC,EAAA,EAAAhoC,CAAiBkC,EAAAuX,MAAAvX,IAOlCu9D,EAAAx/D,UAAAg4B,gBAAA,WACAxe,KAAA0mD,cACA3oB,EAAAv3C,UAAAg4B,gBAAA93B,KAAAsZ,OAGAgmD,EA3UuB,CA4UrB/nC,EAAA,GC5FaqpC,EA1TW,SAAAvpB,GAC1B,SAAAwpB,EAAA12C,EAAA22C,GAEAzpB,EAAAr3C,KAAAsZ,MAOAA,KAAAsQ,KAAAO,EAMA7Q,KAAAynD,gBAMAznD,KAAA0nD,WAAA,EAMA1nD,KAAA2nD,kBAAA,GAMA3nD,KAAA4nD,eAAAJ,EACAA,EAAsB/3C,EAAA,EAAqBA,EAAA,EAQ3CzP,KAAA6nD,MAAA,KAEA,IAAAhwC,EAAA7X,KAAAsQ,KAAAktC,cAMAx9C,KAAA8nD,gBAAA,EAMA9nD,KAAA+nD,gBAAA,GASA/nD,KAAAgoD,qBAAA,IAAoCjC,EAAmBluC,GASvD7X,KAAAioD,6BAAA,KAMAjoD,KAAAkoD,wBAAmC3hE,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAgoD,qBACnCjlB,EAAgB34B,YACtBpK,KAAAmoD,mBAAAnoD,MAMAA,KAAAooD,oBAA+B7hE,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAgoD,qBAC/BjlB,EAAgB54B,YACtBnK,KAAAqoD,YAAAroD,MA2NA,OAvNA+9B,IAAAwpB,EAAAxkD,UAAAg7B,GACAwpB,EAAA/gE,UAAAD,OAAAmE,OAAAqzC,KAAAv3C,WACA+gE,EAAA/gE,UAAAwc,YAAAukD,EAOAA,EAAA/gE,UAAA8hE,cAAA,SAAAp7C,GACA,IAAAq7C,EAAA,IAAuBn+B,EAAA,EACjB8uB,EAAA,EAAmB9+C,MAAA4F,KAAAsQ,KAAApD,GACzBlN,KAAAsO,cAAAi6C,QACAl/D,IAAA2W,KAAAynD,iBAEA7+D,aAAAoX,KAAAynD,iBACAznD,KAAAynD,qBAAAp+D,EACAk/D,EAAA,IAAqBn+B,EAAA,EACb8uB,EAAA,EAAmB7+C,SAAA2F,KAAAsQ,KAAApD,GAC3BlN,KAAAsO,cAAAi6C,IAGAvoD,KAAAynD,gBAAAn+D,WAAA,WACA0W,KAAAynD,qBAAAp+D,EACA,IAAAk/D,EAAA,IAA2Bn+B,EAAA,EACjB8uB,EAAA,EAAmBjvC,YAAAjK,KAAAsQ,KAAApD,GAC7BlN,KAAAsO,cAAAi6C,IACO39D,KAAAoV,MAAA,MAWPunD,EAAA/gE,UAAAgiE,sBAAA,SAAAt7C,GACA,IAAAzkB,EAAAykB,EAEAzkB,EAAAM,MAAsBmwD,EAAA,EAAmB7uC,WACzC5hB,EAAAM,MAAsBmwD,EAAA,EAAmBxuC,qBACzC1K,KAAA+nD,gBAAAt/D,EAAAmuB,WACKnuB,EAAAM,MAAwBmwD,EAAA,EAAmB9uC,cAChDpK,KAAA+nD,gBAAAt/D,EAAAmuB,YAAA,GAEA5W,KAAA8nD,gBAAAvhE,OAAA2N,KAAA8L,KAAA+nD,iBAAA3hE,QAQAmhE,EAAA/gE,UAAAiiE,iBAAA,SAAAv7C,GACAlN,KAAAwoD,sBAAAt7C,GACA,IAAAq7C,EAAA,IAAuBn+B,EAAA,EACjB8uB,EAAA,EAAmB7uC,UAAArK,KAAAsQ,KAAApD,GACzBlN,KAAAsO,cAAAi6C,GAQAA,EAAAl1C,oBAAArT,KAAA0nD,YAAA1nD,KAAA0oD,qBAAAx7C,IACAlN,KAAAsoD,cAAAtoD,KAAA6nD,OAGA,IAAA7nD,KAAA8nD,kBACA9nD,KAAA2nD,kBAAA9hD,QAAqCihD,EAAA,GACrC9mD,KAAA2nD,kBAAAvhE,OAAA,EACA4Z,KAAA0nD,WAAA,EACA1nD,KAAA6nD,MAAA,KACA7nD,KAAAioD,6BAAAn4B,UACA9vB,KAAAioD,6BAAA,OAUAV,EAAA/gE,UAAAkiE,qBAAA,SAAAx7C,GACA,WAAAA,EAAAF,QAQAu6C,EAAA/gE,UAAA2hE,mBAAA,SAAAj7C,GACAlN,KAAAwoD,sBAAAt7C,GACA,IAAAq7C,EAAA,IAAuBn+B,EAAA,EACjB8uB,EAAA,EAAmB9uC,YAAApK,KAAAsQ,KAAApD,GACzBlN,KAAAsO,cAAAi6C,GAEAvoD,KAAA6nD,MAAA36C,EAEA,IAAAlN,KAAA2nD,kBAAAvhE,SAKA4Z,KAAAioD,6BACA,IAAclC,EAAmBl+D,UAEjCmY,KAAA2nD,kBAAArhE,KACQC,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAioD,6BACJ/O,EAAA,EAAmB/uC,YAC7BnK,KAAA2oD,mBAAA3oD,MACQzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAioD,6BACJ/O,EAAA,EAAmB7uC,UAC7BrK,KAAAyoD,iBAAAzoD,MAcQzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAgoD,qBACJ9O,EAAA,EAAmBxuC,cAC7B1K,KAAAyoD,iBAAAzoD,SAUAunD,EAAA/gE,UAAAmiE,mBAAA,SAAAz7C,GAIA,GAAAlN,KAAA4oD,UAAA17C,GAAA,CACAlN,KAAA0nD,WAAA,EACA,IAAAa,EAAA,IAAyBn+B,EAAA,EACjB8uB,EAAA,EAAmBhvC,YAAAlK,KAAAsQ,KAAApD,EAC3BlN,KAAA0nD,WACA1nD,KAAAsO,cAAAi6C,GAOAr7C,EAAAoG,kBAUAi0C,EAAA/gE,UAAA6hE,YAAA,SAAAn7C,GACA,IAAA0zB,KAAA5gC,KAAA6nD,QAAA7nD,KAAA4oD,UAAA17C,IACAlN,KAAAsO,cAAA,IAA2B8b,EAAA,EAC3Bld,EAAAnkB,KAAAiX,KAAAsQ,KAAApD,EAAA0zB,KASA2mB,EAAA/gE,UAAAoiE,UAAA,SAAA17C,GACA,OAAAlN,KAAA0nD,WACA73D,KAAAiN,IAAAoQ,EAAA6J,QAAA/W,KAAA6nD,MAAA9wC,SAAA/W,KAAA4nD,gBACA/3D,KAAAiN,IAAAoQ,EAAA8J,QAAAhX,KAAA6nD,MAAA7wC,SAAAhX,KAAA4nD,gBAMAL,EAAA/gE,UAAAg4B,gBAAA,WACAxe,KAAAooD,sBACM7hE,OAAAugE,EAAA,EAAAvgE,CAAayZ,KAAAooD,qBACnBpoD,KAAAooD,oBAAA,MAEApoD,KAAAkoD,0BACM3hE,OAAAugE,EAAA,EAAAvgE,CAAayZ,KAAAkoD,yBACnBloD,KAAAkoD,wBAAA,MAGAloD,KAAA2nD,kBAAA9hD,QAAmCihD,EAAA,GACnC9mD,KAAA2nD,kBAAAvhE,OAAA,EAEA4Z,KAAAioD,+BACAjoD,KAAAioD,6BAAAn4B,UACA9vB,KAAAioD,6BAAA,MAEAjoD,KAAAgoD,uBACAhoD,KAAAgoD,qBAAAl4B,UACA9vB,KAAAgoD,qBAAA,MAEAjqB,EAAAv3C,UAAAg4B,gBAAA93B,KAAAsZ,OAGAunD,EAtT0B,CAuTxBtpC,EAAA,mBC3Ta4qC,EAAA,CACfC,WAAA,aACAC,KAAA,OACAC,OAAA,SACAC,KAAA,iECcIC,GAAa,SAAAC,EAAAC,GAMjBppD,KAAAqpD,kBAAAF,EAMAnpD,KAAAspD,aAAAF,EAMAppD,KAAAupD,UAAA,GAMAvpD,KAAAwpD,YAAA,GAMAxpD,KAAAypD,gBAAA,IAOAP,GAAa1iE,UAAAwR,MAAA,WACbgI,KAAAupD,UAAAnjE,OAAA,EACA4Z,KAAAwpD,YAAApjE,OAAA,EACEG,OAAAwO,GAAA,EAAAxO,CAAKyZ,KAAAypD,kBAQPP,GAAa1iE,UAAAkjE,QAAA,WACb,IAAAC,EAAA3pD,KAAAupD,UACAK,EAAA5pD,KAAAwpD,YACA3xC,EAAA8xC,EAAA,GACA,GAAAA,EAAAvjE,QACAujE,EAAAvjE,OAAA,EACAwjE,EAAAxjE,OAAA,IAEAujE,EAAA,GAAAA,EAAArxC,MACAsxC,EAAA,GAAAA,EAAAtxC,MACAtY,KAAA6pD,QAAA,IAEA,IAAAC,EAAA9pD,KAAAspD,aAAAzxC,GAEA,cADA7X,KAAAypD,gBAAAK,GACAjyC,GASAqxC,GAAa1iE,UAAAujE,QAAA,SAAAlyC,GACXtxB,OAAA4pD,GAAA,EAAA5pD,GAAMyZ,KAAAspD,aAAAzxC,KAAA7X,KAAAypD,iBACR,IACA,IAAAO,EAAAhqD,KAAAqpD,kBAAAxxC,GACA,OAAAmyC,GA1FO16D,MA2FP0Q,KAAAupD,UAAAjjE,KAAAuxB,GACA7X,KAAAwpD,YAAAljE,KAAA0jE,GACAhqD,KAAAypD,gBAAAzpD,KAAAspD,aAAAzxC,KAAA,EACA7X,KAAAiqD,UAAA,EAAAjqD,KAAAupD,UAAAnjE,OAAA,IACA,IASA8iE,GAAa1iE,UAAAk5C,SAAA,WACb,OAAA1/B,KAAAupD,UAAAnjE,QAUA8iE,GAAa1iE,UAAA0jE,mBAAA,SAAA3hD,GACb,SAAAA,EAAA,GAUA2gD,GAAa1iE,UAAA2jE,oBAAA,SAAA5hD,GACb,SAAAA,EAAA,GAUA2gD,GAAa1iE,UAAA4jE,gBAAA,SAAA7hD,GACb,OAAAA,EAAA,MAQA2gD,GAAa1iE,UAAA6jE,SAAA,WACb,IAAAnkE,EACA,IAAAA,GAAA8Z,KAAAupD,UAAAnjE,QAAA,KAA4CF,GAAA,EAAQA,IACpD8Z,KAAA6pD,QAAA3jE,IAQAgjE,GAAa1iE,UAAAgH,QAAA,WACb,WAAAwS,KAAAupD,UAAAnjE,QAQA8iE,GAAa1iE,UAAA8jE,YAAA,SAAA3/D,GACb,OAAAA,KAAAqV,KAAAypD,iBAQAP,GAAa1iE,UAAA+jE,SAAA,SAAA1yC,GACb,OAAA7X,KAAAsqD,YAAAtqD,KAAAspD,aAAAzxC,KAQAqxC,GAAa1iE,UAAAqjE,QAAA,SAAAthD,GAQb,IAPA,IAAAohD,EAAA3pD,KAAAupD,UACAK,EAAA5pD,KAAAwpD,YACAjF,EAAAoF,EAAAvjE,OACAyxB,EAAA8xC,EAAAphD,GACAyhD,EAAAJ,EAAArhD,GACAiiD,EAAAjiD,EAEAA,EAAAg8C,GAAA,IACA,IAAAkG,EAAAzqD,KAAAkqD,mBAAA3hD,GACAmiD,EAAA1qD,KAAAmqD,oBAAA5hD,GAEAoiD,EAAAD,EAAAnG,GACAqF,EAAAc,GAAAd,EAAAa,GACAC,EAAAD,EAEAd,EAAAphD,GAAAohD,EAAAgB,GACAf,EAAArhD,GAAAqhD,EAAAe,GACApiD,EAAAoiD,EAGAhB,EAAAphD,GAAAsP,EACA+xC,EAAArhD,GAAAyhD,EACAhqD,KAAAiqD,UAAAO,EAAAjiD,IASA2gD,GAAa1iE,UAAAyjE,UAAA,SAAAO,EAAAjiD,GAMb,IALA,IAAAohD,EAAA3pD,KAAAupD,UACAK,EAAA5pD,KAAAwpD,YACA3xC,EAAA8xC,EAAAphD,GACAyhD,EAAAJ,EAAArhD,GAEAA,EAAAiiD,GAAA,CACA,IAAAI,EAAA5qD,KAAAoqD,gBAAA7hD,GACA,KAAAqhD,EAAAgB,GAAAZ,GAKA,MAJAL,EAAAphD,GAAAohD,EAAAiB,GACAhB,EAAArhD,GAAAqhD,EAAAgB,GACAriD,EAAAqiD,EAKAjB,EAAAphD,GAAAsP,EACA+xC,EAAArhD,GAAAyhD,GAOAd,GAAa1iE,UAAAqkE,aAAA,WACb,IAKAhzC,EAAA3xB,EAAA8jE,EALAb,EAAAnpD,KAAAqpD,kBACAM,EAAA3pD,KAAAupD,UACAK,EAAA5pD,KAAAwpD,YACAjhD,EAAA,EACA1d,EAAA8+D,EAAAvjE,OAEA,IAAAF,EAAA,EAAaA,EAAA2E,IAAO3E,GAEpB8jE,EAAAb,EADAtxC,EAAA8xC,EAAAzjE,MAxPOoJ,WA2PP0Q,KAAAypD,gBAAAzpD,KAAAspD,aAAAzxC,KAEA+xC,EAAArhD,GAAAyhD,EACAL,EAAAphD,KAAAsP,GAGA8xC,EAAAvjE,OAAAmiB,EACAqhD,EAAAxjE,OAAAmiB,EACAvI,KAAAqqD,YAIe,ICjJAS,GAlHF,SAAAC,GACb,SAAAC,EAAAC,EAAAC,GAEAH,EAAArkE,KAKAsZ,KAAA,SAAA6X,GACA,OAAAozC,EAAAt4D,MAAA,KAAAklB,IAMA,SAAAA,GACA,OAAuDA,EAAA,GAAAvD,WAOvDtU,KAAAmrD,oBAAAD,EAMAlrD,KAAAorD,cAAA,EAMAprD,KAAAqrD,kBAAA,GA2EA,OAvEAN,IAAAC,EAAAjoD,UAAAgoD,GACAC,EAAAxkE,UAAAD,OAAAmE,OAAAqgE,KAAAvkE,WACAwkE,EAAAxkE,UAAAwc,YAAAgoD,EAKAA,EAAAxkE,UAAAujE,QAAA,SAAAlyC,GACA,IAAAyzC,EAAAP,EAAAvkE,UAAAujE,QAAArjE,KAAAsZ,KAAA6X,GACA,GAAAyzC,EAAA,CACA,IAAAroB,EAAAprB,EAAA,GACMtxB,OAAAugE,EAAA,EAAAvgE,CAAM08C,EAAOsoB,GAAA,EAAStxD,OAAA+F,KAAAoqC,iBAAApqC,MAE5B,OAAAsrD,GAMAN,EAAAxkE,UAAAglE,gBAAA,WACA,OAAAxrD,KAAAorD,eAOAJ,EAAAxkE,UAAA4jD,iBAAA,SAAA3hD,GACA,IAAAw6C,EAAsDx6C,EAAA,OACtD81C,EAAA0E,EAAA5hB,WACA,GAAAkd,IAAkB2E,EAAA,EAAStlC,QAAA2gC,IAAqB2E,EAAA,EAASzoC,OACzD8jC,IAAkB2E,EAAA,EAASrlC,OAAA0gC,IAAoB2E,EAAA,EAASplC,MAAA,CAClDvX,OAAAugE,EAAA,EAAAvgE,CAAQ08C,EAAOsoB,GAAA,EAAStxD,OAAA+F,KAAAoqC,iBAAApqC,MAC9B,IAAAyrD,EAAAxoB,EAAA3uB,SACAm3C,KAAAzrD,KAAAqrD,2BACArrD,KAAAqrD,kBAAAI,KACAzrD,KAAAorD,eAEAprD,KAAAmrD,wBAQAH,EAAAxkE,UAAAklE,cAAA,SAAAC,EAAAC,GAIA,IAHA,IAEArtB,EAAA0E,EAAAwoB,EAFAI,EAAA,EACAC,GAAA,EAEA9rD,KAAAorD,cAAAO,GAAAE,EAAAD,GACA5rD,KAAA0/B,WAAA,GAEA+rB,GADAxoB,EAAoDjjC,KAAA0pD,UAAA,IACpDp1C,UACAiqB,EAAA0E,EAAA5hB,cACoB6hB,EAAA,EAASplC,MAC7BguD,GAAA,EACOvtB,IAAoB2E,EAAA,EAASxlC,MAAA+tD,KAAAzrD,KAAAqrD,oBACpCrrD,KAAAqrD,kBAAAI,IAAA,IACAzrD,KAAAorD,gBACAS,EACA5oB,EAAAjM,QAGA,IAAA60B,GAAAC,GAGA9rD,KAAAmrD,uBAIAH,EA9Ga,CDmQE,kEE1OftzC,GAAA,CACAq0C,OAAA,UAyMeC,GA7LD,SAAAzrC,GACd,SAAA0rC,EAAAp2C,GAEA,IAAA9V,EAAA8V,GAAA,GACA2K,EAA8Cj6B,OAAAwO,GAAA,EAAL,CAAW,GAAGgL,UACvDygB,EAAA0rC,OAEA,IAAAA,EAAAnsD,EAAAmsD,OAEA3rC,EAAA75B,KAAAsZ,KAAAwgB,GAMAxgB,KAAAmsD,oBAAA,GAMAnsD,KAAAosD,cAAA,GAEI7lE,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KACJzZ,OAAAu1B,EAAA,EAAAv1B,CAAkBmxB,GAAAq0C,QACxB/rD,KAAAqsD,qBAAArsD,MAEAksD,EACA9uD,MAAA2K,QAAAmkD,GACAA,EAAA,IAAqBp0C,EAAA,EAAUo0C,EAAA5gE,QAAA,CAAkB2sB,QAAA,IAEzC1xB,OAAA4pD,GAAA,EAAA5pD,CAA2B,qBAAAiyB,SACnC,IAGA0zC,EAAA,IAAmBp0C,EAAA,OAAUzuB,EAAA,CAAa4uB,QAAA,IAG1CjY,KAAAssD,UAAAJ,GAmJA,OA/IA3rC,IAAA0rC,EAAAlpD,UAAAwd,GACA0rC,EAAAzlE,UAAAD,OAAAmE,OAAA61B,KAAA/5B,WACAylE,EAAAzlE,UAAAwc,YAAAipD,EAKAA,EAAAzlE,UAAA+lE,mBAAA,WACAvsD,KAAAmd,WAMA8uC,EAAAzlE,UAAA6lE,qBAAA,WACArsD,KAAAmsD,oBAAAtmD,QAAqCihD,EAAA,GACrC9mD,KAAAmsD,oBAAA/lE,OAAA,EAEA,IAAA8lE,EAAAlsD,KAAAwsD,YAMA,QAAA71C,KALA3W,KAAAmsD,oBAAA7lE,KACMC,OAAAugE,EAAA,EAAAvgE,CAAM2lE,EAASO,EAAA,EAAmBl3C,IAAAvV,KAAA0sD,iBAAA1sD,MAClCzZ,OAAAugE,EAAA,EAAAvgE,CAAM2lE,EAASO,EAAA,EAAmBj3C,OAAAxV,KAAA2sD,oBAAA3sD,OAGxCA,KAAAosD,cACApsD,KAAAosD,cAAAz1C,GAAA9Q,QAAqCihD,EAAA,GAEjCvgE,OAAAwO,GAAA,EAAAxO,CAAKyZ,KAAAosD,eAGT,IADA,IAAAQ,EAAAV,EAAA1zC,WACAtyB,EAAA,EAAAgI,EAAA0+D,EAAAxmE,OAA4CF,EAAAgI,EAAQhI,IAAA,CACpD,IAAAs4C,EAAAouB,EAAA1mE,GACA8Z,KAAAosD,cAAyB7lE,OAAA+zB,EAAA,EAAA/zB,CAAMi4C,IAAA,CACvBj4C,OAAAugE,EAAA,EAAAvgE,CAAMi4C,EAAQquB,EAAA,EAAet+C,eAAAvO,KAAAusD,mBAAAvsD,MAC7BzZ,OAAAugE,EAAA,EAAAvgE,CAAMi4C,EAAQ+sB,GAAA,EAAStxD,OAAA+F,KAAAusD,mBAAAvsD,OAI/BA,KAAAmd,WAOA8uC,EAAAzlE,UAAAkmE,iBAAA,SAAAI,GACA,IAAAtuB,EAAuDsuB,EAAA,QACvD9sD,KAAAosD,cAAuB7lE,OAAA+zB,EAAA,EAAA/zB,CAAMi4C,IAAA,CACvBj4C,OAAAugE,EAAA,EAAAvgE,CAAMi4C,EAAQquB,EAAA,EAAet+C,eAAAvO,KAAAusD,mBAAAvsD,MAC7BzZ,OAAAugE,EAAA,EAAAvgE,CAAMi4C,EAAQ+sB,GAAA,EAAStxD,OAAA+F,KAAAusD,mBAAAvsD,OAE7BA,KAAAmd,WAOA8uC,EAAAzlE,UAAAmmE,oBAAA,SAAAG,GACA,IAAAtuB,EAAuDsuB,EAAA,QACvDniE,EAAcpE,OAAA+zB,EAAA,EAAA/zB,CAAMi4C,GACpBx+B,KAAAosD,cAAAzhE,GAAAkb,QAAoCihD,EAAA,UACpC9mD,KAAAosD,cAAAzhE,GACAqV,KAAAmd,WAWA8uC,EAAAzlE,UAAAgmE,UAAA,WACA,OACkFxsD,KAAA/V,IAAAytB,GAAAq0C,SAYlFE,EAAAzlE,UAAA8lE,UAAA,SAAAJ,GACAlsD,KAAA5B,IAAAsZ,GAAAq0C,OAAAG,IAMAD,EAAAzlE,UAAAs6B,eAAA,SAAA/I,GACA,IAAAQ,OAAAlvB,IAAA0uB,IAAA,GAIA,OAHA/X,KAAAwsD,YAAA3mD,QAAA,SAAA24B,GACAA,EAAA1d,eAAAvI,KAEAA,GAMA0zC,EAAAzlE,UAAAu6B,oBAAA,SAAAC,GACA,IAAAC,OAAA53B,IAAA23B,IAAA,GAEA+rC,EAAA9rC,EAAA76B,OAEA4Z,KAAAwsD,YAAA3mD,QAAA,SAAA24B,GACAA,EAAAzd,oBAAAE,KAIA,IADA,IAAA+rC,EAAAhtD,KAAAkhB,gBACAh7B,EAAA6mE,EAAA7+D,EAAA+yB,EAAA76B,OAAyCF,EAAAgI,EAAQhI,IAAA,CACjD,IAAAs7B,EAAAP,EAAA/6B,GACAs7B,EAAAjoB,SAAAyzD,EAAAzzD,QACAioB,EAAAQ,QAAAR,EAAAQ,SAAAgrC,EAAAhrC,QACAR,EAAAU,cAAAryB,KAAAC,IACA0xB,EAAAU,cAAA8qC,EAAA9qC,eACAV,EAAAS,cAAApyB,KAAAE,IACAyxB,EAAAS,cAAA+qC,EAAA/qC,oBACA54B,IAAA2jE,EAAA/+D,cACA5E,IAAAm4B,EAAAvzB,OACAuzB,EAAAvzB,OAA8B1H,OAAAqgB,GAAA,EAAArgB,CAAei7B,EAAAvzB,OAAA++D,EAAA/+D,QAE7CuzB,EAAAvzB,OAAA++D,EAAA/+D,QAKA,OAAAgzB,GAMAgrC,EAAAzlE,UAAA46B,eAAA,WACA,OAAW6rC,GAAA,EAAW3vC,OAGtB2uC,EAzLc,CA0LZiB,GAAA,oBCiqCa,IAAAC,GAlwCC,SAAAt/C,GAChB,SAAAu/C,EAAArtD,GAEA8N,EAAAnnB,KAAAsZ,MAEA,IAAAqtD,EAurCA,SAAAttD,GAKA,IAAAutD,EAAA,UACAjkE,IAAA0W,EAAAutD,sBACAA,EAAA,iBAAAvtD,EAAAutD,oBACAzlE,SAAAolC,eAAAltB,EAAAutD,qBACAvtD,EAAAutD,qBAMA,IAWAC,EAWAtP,EAWAuP,EAjCA/jD,EAAA,GAEAgkD,EAAA1tD,EAAAmsD,QAAyD,mBAAAnsD,EAAA,OAAAysD,UAC/BzsD,EAAA,WAA2BisD,GAAU,CAAEE,OAA8BnsD,EAAA,SAC/F0J,EAASo/C,EAAWC,YAAA2E,EAEpBhkD,EAASo/C,EAAWG,QAAAjpD,EAAA9W,OAEpBwgB,EAASo/C,EAAWI,WAAA5/D,IAAA0W,EAAA+Q,KACpB/Q,EAAA+Q,KAAA,IAAuB46B,GAAA,OAGvBriD,IAAA0W,EAAAwtD,WACAnwD,MAAA2K,QAAAhI,EAAAwtD,UACAA,EAAA,IAAqBz1C,EAAA,EAAU/X,EAAAwtD,SAAAjiE,UAEzB/E,OAAA4pD,GAAA,EAAA5pD,CAA2B,mBAAAwZ,EAAA,SAAAyY,SACjC,IACA+0C,EAAuCxtD,EAAA,gBAKvC1W,IAAA0W,EAAAk+C,eACA7gD,MAAA2K,QAAAhI,EAAAk+C,cACAA,EAAA,IAAyBnmC,EAAA,EAAU/X,EAAAk+C,aAAA3yD,UAE7B/E,OAAA4pD,GAAA,EAAA5pD,CAA2B,mBAAAwZ,EAAA,aAAAyY,SACjC,IACAylC,EAA2Cl+C,EAAA,oBAK3C1W,IAAA0W,EAAAytD,SACApwD,MAAA2K,QAAAhI,EAAAytD,UACAA,EAAA,IAAqB11C,EAAA,EAAU/X,EAAAytD,SAAAliE,UAEzB/E,OAAA4pD,GAAA,EAAA5pD,CAA2B,mBAAAwZ,EAAA,SAAAyY,SACjC,IACAg1C,EAAAztD,EAAAytD,UAGAA,EAAA,IAAmB11C,EAAA,EAGnB,OACAy1C,WACAtP,eACAqP,sBACAE,WACA/jD,UAzvCAikD,CAAA3tD,GAMAC,KAAA2tD,sBAAAtkE,IAAA0W,EAAA6tD,gBAAA7tD,EAAA6tD,gBAAA,GAMA5tD,KAAA6tD,8BACAxkE,IAAA0W,EAAA+tD,yBACA/tD,EAAA+tD,wBAMA9tD,KAAA+tD,gCACA1kE,IAAA0W,EAAAiuD,2BACAjuD,EAAAiuD,0BAMAhuD,KAAAugC,iBAAAl3C,IAAA0W,EAAA0rB,WACA1rB,EAAA0rB,WAA2Bhc,EAAA,EAM3BzP,KAAAiuD,mBAKAjuD,KAAAkuD,gBAAA,WACAluD,KAAAiuD,wBAAA5kE,EACA2W,KAAAmuD,aAAAznE,KAAAsZ,KAAAmuC,KAAAC,QACKxjD,KAAAoV,MAMLA,KAAAouD,4BAAuC7nE,OAAAwzB,GAAA,EAAAxzB,GAMvCyZ,KAAAquD,4BAAuC9nE,OAAAwzB,GAAA,EAAAxzB,GAMvCyZ,KAAAsuD,YAAA,EAMAtuD,KAAAuuD,YAAA,KAOAvuD,KAAAwuD,gBAAA,KAMAxuD,KAAAyuD,yBAAA,KAMAzuD,KAAA0uD,uBAAA,KAMA1uD,KAAA2uD,gCAAA,KAMA3uD,KAAA4uD,UAAA/mE,SAAAG,cAAA,OACAgY,KAAA4uD,UAAA1zB,UAAA,eAAgDzrB,EAAA,EAAK,gBACrDzP,KAAA4uD,UAAAl2D,MAAAG,SAAA,WACAmH,KAAA4uD,UAAAl2D,MAAAm2D,SAAA,SACA7uD,KAAA4uD,UAAAl2D,MAAAb,MAAA,OACAmI,KAAA4uD,UAAAl2D,MAAAF,OAAA,OAEAwH,KAAA4uD,UAAAl2D,MAAAo2D,cAAA,OACA9uD,KAAA4uD,UAAAl2D,MAAAq2D,YAAA,OAMA/uD,KAAAgvD,kBAAAnnE,SAAAG,cAAA,OACAgY,KAAAgvD,kBAAA9zB,UAAA,sBACAl7B,KAAA4uD,UAAArlE,YAAAyW,KAAAgvD,mBAMAhvD,KAAAivD,2BAAApnE,SAAAG,cAAA,OACAgY,KAAAivD,2BAAA/zB,UAAA,gCAWA,IAVA,IAAAg0B,EAAA,CACM3D,GAAA,EAASnxD,MACTmxD,GAAA,EAASlxD,SACTkxD,GAAA,EAAS1wD,UACT0wD,GAAA,EAASnwD,WACTmwD,GAAA,EAASrwD,cACTg+C,EAAA,EAAmB9uC,YACnBmhD,GAAA,EAAStwD,WACTswD,GAAA,EAAShwD,OAEfrV,EAAA,EAAAgI,EAAAghE,EAAA9oE,OAA8CF,EAAAgI,IAAQhI,EAChDK,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAivD,2BAAAC,EAAAhpE,GAAoDynB,EAAA,GAShE,QAAAhjB,KAPAqV,KAAA4uD,UAAArlE,YAAAyW,KAAAivD,4BAMAjvD,KAAAmvD,wBAAA,IAAuC7H,EAAsBtnD,KAAAD,EAAAynD,eACzCtO,EAAA,EACd3yD,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAmvD,wBAA+BjW,EAAA,EAAmBvuD,GAC9DqV,KAAAovD,sBAAApvD,MAOAA,KAAAqvD,qBAAAhC,EAAAC,oBAMAttD,KAAAsvD,gBAAA,KAEI/oE,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAA4uD,UAAiBrD,GAAA,EAASpxD,YAAA6F,KAAAuvD,mBAAAvvD,MAChCzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAA4uD,UAAiBrD,GAAA,EAAShwD,MAAAyE,KAAAuvD,mBAAAvvD,MAChCzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAA4uD,UAAiBrD,GAAA,EAAStwD,WAAA+E,KAAAuvD,mBAAAvvD,MAMpCA,KAAAutD,SAAAF,EAAAE,UAAA,IAAoDz1C,EAAA,EAMpD9X,KAAAi+C,aAAAoP,EAAApP,cAAA,IAA4DnmC,EAAA,EAM5D9X,KAAAwvD,UAAAnC,EAAAG,SAOAxtD,KAAAyvD,gBAAA,GAMAzvD,KAAA0vD,UAAA1vD,KAAA2vD,iBAMA3vD,KAAA4vD,cAMA5vD,KAAA6vD,OAAA,KAMA7vD,KAAA8vD,qBAAA,GAMA9vD,KAAA+vD,WAAA,IAA0BjF,GAC1B9qD,KAAAgwD,gBAAAplE,KAAAoV,MACAA,KAAAiwD,kBAAArlE,KAAAoV,OAOAA,KAAAkwD,oBAAA,GAEI3pE,OAAAugE,EAAA,EAAAvgE,CACJyZ,KAAYzZ,OAAAu1B,EAAA,EAAAv1B,CAAmBsiE,EAAWC,YAC1C9oD,KAAAmwD,yBAAAnwD,MACIzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAOzZ,OAAAu1B,EAAA,EAAAv1B,CAAmBsiE,EAAWI,MAC/CjpD,KAAAowD,mBAAApwD,MACIzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAOzZ,OAAAu1B,EAAA,EAAAv1B,CAAmBsiE,EAAWE,MAC/C/oD,KAAAqwD,mBAAArwD,MACIzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAOzZ,OAAAu1B,EAAA,EAAAv1B,CAAmBsiE,EAAWG,QAC/ChpD,KAAAswD,qBAAAtwD,MAIAA,KAAAiO,cAAAo/C,EAAA5jD,QAEAzJ,KAAAutD,SAAA1nD,QAKA,SAAA0qD,GACAA,EAAA3/C,OAAA5Q,OACOpV,KAAAoV,OAEHzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAutD,SAAgBd,EAAA,EAAmBl3C,IAI7C,SAAA9sB,GACAA,EAAAovB,QAAAjH,OAAA5Q,OACOA,MAEHzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAutD,SAAgBd,EAAA,EAAmBj3C,OAI7C,SAAA/sB,GACAA,EAAAovB,QAAAjH,OAAA,OACO5Q,MAEPA,KAAAi+C,aAAAp4C,QAKA,SAAA2qD,GACAA,EAAA5/C,OAAA5Q,OACOpV,KAAAoV,OAEHzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAi+C,aAAoBwO,EAAA,EAAmBl3C,IAIjD,SAAA9sB,GACAA,EAAAovB,QAAAjH,OAAA5Q,OACOA,MAEHzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAi+C,aAAoBwO,EAAA,EAAmBj3C,OAIjD,SAAA/sB,GACAA,EAAAovB,QAAAjH,OAAA,OACO5Q,MAEPA,KAAAwvD,UAAA3pD,QAAA7F,KAAAywD,oBAAA7lE,KAAAoV,OAEIzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAwvD,UAAiB/C,EAAA,EAAmBl3C,IAI9C,SAAA9sB,GACAuX,KAAAywD,oBAA2EhoE,EAAA,UACpEuX,MAEHzZ,OAAAugE,EAAA,EAAAvgE,CAAMyZ,KAAAwvD,UAAiB/C,EAAA,EAAmBj3C,OAI9C,SAAA/sB,GACA,IACAkuB,EADgEluB,EAAA,QAChEioE,aACArnE,IAAAstB,UACA3W,KAAAyvD,gBAAA94C,EAAAE,YAEApuB,EAAAovB,QAAAjH,OAAA,OACO5Q,MAu3BP,OAn3BA6N,IAAAu/C,EAAArqD,UAAA8K,GACAu/C,EAAA5mE,UAAAD,OAAAmE,OAAAmjB,KAAArnB,WACA4mE,EAAA5mE,UAAAwc,YAAAoqD,EAMAA,EAAA5mE,UAAAmpE,eAAA,WACA,UAAAxmE,MAAA,oDAQAikE,EAAA5mE,UAAAmqE,WAAA,SAAAJ,GACAvwD,KAAA4wD,cAAAtqE,KAAAiqE,IAQAnD,EAAA5mE,UAAAqqE,eAAA,SAAAL,GACAxwD,KAAA8wD,kBAAAxqE,KAAAkqE,IAUApD,EAAA5mE,UAAAuqE,SAAA,SAAAvyB,GACAx+B,KAAAgxD,gBAAAxE,YACAlmE,KAAAk4C,IAQA4uB,EAAA5mE,UAAAyqE,WAAA,SAAAC,GACAlxD,KAAAmxD,cAAA7qE,KAAA4qE,IAQA9D,EAAA5mE,UAAAiqE,oBAAA,SAAAS,GACA,IAAAv6C,EAAAu6C,EAAAR,aACArnE,IAAAstB,IACA3W,KAAAyvD,gBAAA94C,EAAAE,YAAAq6C,GAEAA,EAAAtgD,OAAA5Q,OAOAotD,EAAA5mE,UAAAg4B,gBAAA,WACAxe,KAAAmvD,wBAAAr/B,UACIvpC,OAAAugE,EAAA,EAAAvgE,CAAQyZ,KAAA4uD,UAAiBrD,GAAA,EAASpxD,YAAA6F,KAAAuvD,mBAAAvvD,MAClCzZ,OAAAugE,EAAA,EAAAvgE,CAAQyZ,KAAA4uD,UAAiBrD,GAAA,EAAShwD,MAAAyE,KAAAuvD,mBAAAvvD,MAClCzZ,OAAAugE,EAAA,EAAAvgE,CAAQyZ,KAAA4uD,UAAiBrD,GAAA,EAAStwD,WAAA+E,KAAAuvD,mBAAAvvD,WACtC3W,IAAA2W,KAAA4vD,gBACA57D,oBAA0Bu3D,GAAA,EAASpwD,OAAA6E,KAAA4vD,eAAA,GACnC5vD,KAAA4vD,mBAAAvmE,GAEA2W,KAAAiuD,qBACAjf,qBAAAhvC,KAAAiuD,oBACAjuD,KAAAiuD,wBAAA5kE,GAEA2W,KAAA8sB,UAAA,MACAjf,EAAArnB,UAAAg4B,gBAAA93B,KAAAsZ,OAsBAotD,EAAA5mE,UAAA4qE,sBAAA,SAAA3zB,EAAAztC,EAAA6lB,GACA,GAAA7V,KAAAuuD,YAAA,CAGA,IAAA//D,EAAAwR,KAAA48B,uBAAAa,GAGA4zB,OAAAhoE,KAFAwsB,OAAAxsB,IAAAwsB,IACgC,IAChCw7C,aACAx7C,EAAAw7C,aAAArxD,KAAAuuD,YAAA9iC,WAAA,EACA6lC,OAAAjoE,IAAAwsB,EAAAy7C,YACAz7C,EAAAy7C,YAAgCl0B,GAAA,EAChC,OAAAp9B,KAAA0vD,UAAA6B,2BACA/iE,EAAAwR,KAAAuuD,YAAA8C,EAAArhE,EAAA,KACAshE,EAAA,QAWAlE,EAAA5mE,UAAAgrE,mBAAA,SAAA/zB,EAAA5nB,GACA,IAAA47C,EAAA,KAOA,OANAzxD,KAAAoxD,sBAAA3zB,EAAA,SAAAi0B,GACAD,IACAA,EAAA,IAEAA,EAAAnrE,KAAAorE,IACK77C,GACL47C,GAoBArE,EAAA5mE,UAAAmrE,oBAAA,SAAAl0B,EAAAztC,EAAA6lB,GACA,GAAA7V,KAAAuuD,YAAA,CAGA,IAAAxuD,EAAA8V,GAA2D,GAC3Dw7C,OAAAhoE,IAAA0W,EAAAsxD,aACAx7C,EAAAw7C,aAAArxD,KAAAuuD,YAAA9iC,WAAA,EACA6lC,EAAAvxD,EAAAuxD,aAA6Cl0B,GAAA,EAC7C,OAAAp9B,KAAA0vD,UAAAiC,oBACAl0B,EAAAz9B,KAAAuuD,YAAA8C,EAAArhE,EAAA,KAAAshE,EAAA,QAYAlE,EAAA5mE,UAAAorE,kBAAA,SAAAn0B,EAAA5nB,GACA,IAAA7V,KAAAuuD,YACA,SAEA,IAAA//D,EAAAwR,KAAA48B,uBAAAa,GAGA6zB,OAAAjoE,KAFAwsB,OAAAxsB,IAAAwsB,IACgC,IAChCy7C,YAAAz7C,EAAAy7C,YAAwFl0B,GAAA,EACxFi0B,OAAAhoE,IAAAwsB,EAAAw7C,aACAx7C,EAAAw7C,aAAArxD,KAAAuuD,YAAA9iC,WAAA,EACA,OAAAzrB,KAAA0vD,UAAAmC,uBACArjE,EAAAwR,KAAAuuD,YAAA8C,EAAAC,EAAA,OASAlE,EAAA5mE,UAAAsrE,mBAAA,SAAArpE,GACA,OAAAuX,KAAA48B,uBAAA58B,KAAA2gC,cAAAl4C,KASA2kE,EAAA5mE,UAAAm6C,cAAA,SAAAl4C,GACA,IAAA80D,EAAAv9C,KAAA4uD,UAAAnR,wBACAsU,EAAA,mBAAAtpE,EAC4B,EAAA06D,eAAA,GACA,EAE5B,OACA4O,EAAAh7C,QAAAwmC,EAAAzkD,KACAi5D,EAAA/6C,QAAAumC,EAAA/gB,MAaA4wB,EAAA5mE,UAAAwrE,UAAA,WACA,OAAmDhyD,KAAA/V,IAAc4+D,EAAWG,SAU5EoE,EAAA5mE,UAAAsmB,iBAAA,WACA,IAAA7jB,EAAA+W,KAAAgyD,YACA,YAAA3oE,IAAAJ,EACA,iBAAAA,EAAApB,SAAAolC,eAAAhkC,KAEA,MAWAmkE,EAAA5mE,UAAAo2C,uBAAA,SAAAa,GACA,IAAA7b,EAAA5hB,KAAAuuD,YACA,OAAA3sC,EAGar7B,OAAAwzB,GAAA,EAAAxzB,CAAcq7B,EAAAqwC,2BAAAx0B,EAAAnyC,SAF3B,MAYA8hE,EAAA5mE,UAAAoqE,YAAA,WACA,OAAA5wD,KAAAutD,UASAH,EAAA5mE,UAAA2qE,YAAA,WACA,OAAAnxD,KAAAwvD,WAWApC,EAAA5mE,UAAA0rE,eAAA,SAAAv7C,GACA,IAAAu6C,EAAAlxD,KAAAyvD,gBAAA94C,EAAAE,YACA,YAAAxtB,IAAA6nE,IAAA,MAWA9D,EAAA5mE,UAAAsqE,gBAAA,WACA,OAAA9wD,KAAAi+C,cASAmP,EAAA5mE,UAAAwqE,cAAA,WACA,OAC4BhxD,KAAA/V,IAAc4+D,EAAWC,aASrDsE,EAAA5mE,UAAAgmE,UAAA,WAEA,OADAxsD,KAAAgxD,gBAAAxE,aAWAY,EAAA5mE,UAAAo1C,uBAAA,SAAAptC,GACA,IAAAozB,EAAA5hB,KAAAuuD,YACA,OAAA3sC,EAGar7B,OAAAwzB,GAAA,EAAAxzB,CAAcq7B,EAAAuwC,2BAAA3jE,EAAAlD,MAAA,MAF3B,MAUA8hE,EAAA5mE,UAAA4rE,YAAA,WACA,OAAApyD,KAAA0vD,WASAtC,EAAA5mE,UAAAopC,QAAA,WACA,OACoD5vB,KAAA/V,IAAc4+D,EAAWE,OAW7EqE,EAAA5mE,UAAA+0C,QAAA,WACA,OACsBv7B,KAAA/V,IAAc4+D,EAAWI,OAS/CmE,EAAA5mE,UAAAg3D,YAAA,WACA,OAAAx9C,KAAA4uD,WAUAxB,EAAA5mE,UAAAi2C,oBAAA,WACA,OAAAz8B,KAAAgvD,mBAUA5B,EAAA5mE,UAAAumC,6BAAA,WACA,OAAA/sB,KAAAivD,4BAUA7B,EAAA5mE,UAAAwpE,gBAAA,SAAA/sB,EAAAovB,EAAAC,EAAAC,GAGA,IAAA3wC,EAAA5hB,KAAAuuD,YACA,KAAA3sC,GAAAywC,KAAAzwC,EAAA4wC,aACA,OH32BOljE,IG62BP,IAAAsyB,EAAA4wC,YAAAH,GAAApvB,EAAA3uB,UACA,OH92BOhlB,IGs3BP,IAAAwC,EAAAwgE,EAAA,GAAA1wC,EAAA9V,MAAA,GACA/Z,EAAAugE,EAAA,GAAA1wC,EAAA9V,MAAA,GACA,aAAAjc,KAAA4T,IAAA8uD,GACA1iE,KAAA4zB,KAAA3xB,IAAAC,KAAAwgE,GAOAnF,EAAA5mE,UAAA+oE,mBAAA,SAAA7uB,EAAAhiB,GACA,IAAA31B,EAAA21B,GAAAgiB,EAAA33C,KACAyjB,EAAA,IAA8B6d,EAAA,EAAethC,EAAAiX,KAAA0gC,GAC7C1gC,KAAAovD,sBAAA5iD,IAMA4gD,EAAA5mE,UAAA4oE,sBAAA,SAAA5iD,GACA,GAAAxM,KAAAuuD,YAAA,CAKAvuD,KAAA6vD,OAAArjD,EAAAhe,WACAge,EAAAoV,WAAA5hB,KAAAuuD,YACA,IAAAkE,EAAAzyD,KAAA8wD,kBAAAt4C,WACA,QAAAxY,KAAAsO,cAAA9B,GACA,QAAAtmB,EAAAusE,EAAArsE,OAAA,EAAgDF,GAAA,EAAQA,IAAA,CACxD,IAAAsqE,EAAAiC,EAAAvsE,GACA,GAAAsqE,EAAAhgD,YAIA,IADAggD,EAAAngD,YAAA7D,GAEA,SASA4gD,EAAA5mE,UAAAksE,iBAAA,WAEA,IAAA9wC,EAAA5hB,KAAAuuD,YAWAoE,EAAA3yD,KAAA+vD,WACA,IAAA4C,EAAAnlE,UAAA,CACA,IAAAm+D,EAAA3rD,KAAA2tD,iBACA/B,EAAAD,EACA,GAAA/pC,EAAA,CACA,IAAAgxC,EAAAhxC,EAAAixC,UACAD,EAAkBhkB,GAAA,EAAQ9kC,aAC1B6hD,EAAA3rD,KAAA6tD,yBAAA,IACAjC,EAAA,GAEAgH,EAAkBhkB,GAAA,EAAQ7kC,eAC1B4hD,EAAA3rD,KAAA+tD,2BAAA,IACAnC,EAAA,GAGA+G,EAAAnH,kBAAAG,IACAgH,EAAA9H,eACA8H,EAAAjH,cAAAC,EAAAC,KAGAhqC,IAAA5hB,KAAAye,YAAuCq0C,EAAA,EAAev5C,iBAAAqI,EAAAzQ,SACtDnR,KAAA+vD,WAAAvE,mBAscA,SAAAuH,EAAA7G,GACA,QAAAhmE,EAAA,EAAAgI,EAAAg+D,EAAA9lE,OAAqCF,EAAAgI,IAAQhI,EAAA,CAC7C,IAAAs4C,EAAA0tB,EAAAhmE,GACA,GAA4B,qBAAAsmE,UAC5B,OAAAuG,EAA8C,EAAAvG,YAAAh0C,YAE9C,IAAA9T,EAAiE,EACjEyc,YACA,GAAAzc,KAAAs9B,QACA,SAIA,SAndA+wB,CAAA/yD,KAAAwsD,YAAAh0C,aACAxY,KAAA0vD,UAAAsD,oBAAyCF,EAAA,EAAev5C,eAAAqI,GAIxD,IADA,IAAAqxC,EAAAjzD,KAAA8vD,qBACA5pE,EAAA,EAAAgI,EAAA+kE,EAAA7sE,OAAoDF,EAAAgI,IAAQhI,EAC5D+sE,EAAA/sE,GAAA8Z,KAAA4hB,GAEAqxC,EAAA7sE,OAAA,GAMAgnE,EAAA5mE,UAAA6pE,mBAAA,WACArwD,KAAA+hB,UAMAqrC,EAAA5mE,UAAA8pE,qBAAA,WAMA,IAAA4C,EAKA,GAJAlzD,KAAAgyD,cACAkB,EAAAlzD,KAAA8M,oBAGA9M,KAAAsvD,gBAAA,CACA,QAAAppE,EAAA,EAAAgI,EAAA8R,KAAAsvD,gBAAAlpE,OAAuDF,EAAAgI,IAAQhI,EACvDK,OAAAugE,EAAA,EAAAvgE,CAAayZ,KAAAsvD,gBAAAppE,IAErB8Z,KAAAsvD,gBAAA,KAGA,GAAA4D,EAOK,CACLA,EAAA3pE,YAAAyW,KAAA4uD,WAEA,IAAAtB,EAAAttD,KAAAqvD,qBACArvD,KAAAqvD,qBAAA6D,EACAlzD,KAAAsvD,gBAAA,CACQ/oE,OAAAugE,EAAA,EAAAvgE,CAAM+mE,EAAsB/B,GAAA,EAAS7wD,QAAAsF,KAAAuvD,mBAAAvvD,MACrCzZ,OAAAugE,EAAA,EAAAvgE,CAAM+mE,EAAsB/B,GAAA,EAAS5wD,SAAAqF,KAAAuvD,mBAAAvvD,OAG7CA,KAAA4vD,gBACA5vD,KAAA4vD,cAAA5vD,KAAAmzD,WAAAvoE,KAAAoV,MACA1L,iBAAyBi3D,GAAA,EAASpwD,OAAA6E,KAAA4vD,eAAA,SAlBlC5vD,KAAA0vD,UAAA0D,uBACM7sE,OAAAo9C,GAAA,EAAAp9C,CAAUyZ,KAAA4uD,gBAChBvlE,IAAA2W,KAAA4vD,gBACA57D,oBAA4Bu3D,GAAA,EAASpwD,OAAA6E,KAAA4vD,eAAA,GACrC5vD,KAAA4vD,mBAAAvmE,GAkBA2W,KAAAmzD,cAQA/F,EAAA5mE,UAAAypE,kBAAA,WACAjwD,KAAA+hB,UAMAqrC,EAAA5mE,UAAA6sE,2BAAA,WACArzD,KAAA+hB,UAMAqrC,EAAA5mE,UAAA4pE,mBAAA,WACApwD,KAAAyuD,2BACMloE,OAAAugE,EAAA,EAAAvgE,CAAayZ,KAAAyuD,0BACnBzuD,KAAAyuD,yBAAA,MAEAzuD,KAAA0uD,yBACMnoE,OAAAugE,EAAA,EAAAvgE,CAAayZ,KAAA0uD,wBACnB1uD,KAAA0uD,uBAAA,MAEA,IAAA59C,EAAA9Q,KAAAu7B,UACAzqB,IACA9Q,KAAA4uD,UAAAxmE,aAAA,YAA+C7B,OAAA+zB,EAAA,EAAA/zB,CAAMuqB,IACrD9Q,KAAAyuD,yBAAsCloE,OAAAugE,EAAA,EAAAvgE,CACtCuqB,EAAc+7C,EAAA,EAAet+C,eAC7BvO,KAAAqzD,2BAAArzD,MACAA,KAAA0uD,uBAAoCnoE,OAAAugE,EAAA,EAAAvgE,CACpCuqB,EAAcy6C,GAAA,EAAStxD,OACvB+F,KAAAqzD,2BAAArzD,OAEAA,KAAA+hB,UAMAqrC,EAAA5mE,UAAA2pE,yBAAA,WACAnwD,KAAA2uD,kCACA3uD,KAAA2uD,gCAAA9oD,QAAmDihD,EAAA,GACnD9mD,KAAA2uD,gCAAA,MAEA,IAAAlB,EAAAztD,KAAAgxD,gBACAvD,IACAztD,KAAA2uD,gCAAA,CACQpoE,OAAAugE,EAAA,EAAAvgE,CACRknE,EAAsBZ,EAAA,EAAet+C,eACrCvO,KAAA+hB,OAAA/hB,MACQzZ,OAAAugE,EAAA,EAAAvgE,CACRknE,EAAsBlC,GAAA,EAAStxD,OAC/B+F,KAAA+hB,OAAA/hB,QAGAA,KAAA+hB,UAMAqrC,EAAA5mE,UAAA8sE,WAAA,WACA,QAAAtzD,KAAAuuD,aAOAnB,EAAA5mE,UAAA+sE,WAAA,WACAvzD,KAAAiuD,oBACAjf,qBAAAhvC,KAAAiuD,oBAEAjuD,KAAAkuD,mBAOAd,EAAA5mE,UAAAu7B,OAAA,gBACA14B,IAAA2W,KAAAiuD,qBACAjuD,KAAAiuD,mBAAAxe,sBAAAzvC,KAAAkuD,mBAWAd,EAAA5mE,UAAAgtE,cAAA,SAAAjD,GACA,OAAAvwD,KAAA4wD,cAAA5oD,OAAAuoD,IAUAnD,EAAA5mE,UAAAitE,kBAAA,SAAAjD,GACA,OAAAxwD,KAAA8wD,kBAAA9oD,OAAAwoD,IAUApD,EAAA5mE,UAAAktE,YAAA,SAAAl1B,GAEA,OADAx+B,KAAAgxD,gBAAAxE,YACAxkD,OAAAw2B,IAUA4uB,EAAA5mE,UAAAmtE,cAAA,SAAAzC,GACA,OAAAlxD,KAAAmxD,cAAAnpD,OAAAkpD,IAOA9D,EAAA5mE,UAAA2nE,aAAA,SAAA7qB,GACA,IAAA0W,EAEAppD,EAAAoP,KAAA4vB,UACA9e,EAAA9Q,KAAAu7B,UACAttC,EAAiB1H,OAAAqgB,GAAA,EAAArgB,GACjBqtE,EAAA5zD,KAAAuuD,YAEA3sC,EAAA,KACA,QAAAv4B,IAAAuH,GAA8BrK,OAAAwiD,GAAA,EAAAxiD,CAAOqK,IAAAkgB,KAAAi9B,QAAA,CAIrC,IAHA,IAAA8kB,EAAA/hD,EAAAm/B,SAAAjwC,KAAAuuD,YAAAvuD,KAAAuuD,YAAAsE,eAAAxpE,GACAw4B,EAAA7hB,KAAAgxD,gBAAAjwC,sBACAe,EAAA,GACA57B,EAAA,EAAAgI,EAAA2zB,EAAAz7B,OAAmDF,EAAAgI,IAAQhI,EAC3D47B,EAAoBv7B,OAAA+zB,EAAA,EAAA/zB,CAAMs7B,EAAA37B,GAAAs4C,QAAA3c,EAAA37B,GAE1B8zD,EAAAlpC,EAAAuQ,SAAArhB,KAAAugC,aACA3e,EAAyC,CACzCzQ,SAAA,EACAghD,2BAAAnyD,KAAAouD,4BACAngE,SACA6d,MAAA9L,KAAA6vD,OAAA7vD,KAAA6vD,OAAA7V,EAAAvpD,OACA8X,MAAAvI,KAAAsuD,cACAxsC,cACAD,mBACA4J,WAAAzrB,KAAAugC,YACA0xB,2BAAAjyD,KAAAquD,4BACA4E,oBAAA,GACAriE,OACAijE,mBAAA7zD,KAAAkwD,oBACAyC,UAAA3yD,KAAA+vD,WACAzsB,OACAyB,UAAA,GACAiV,YACA6Y,YACAL,YAAA,IAYA,GARA5wC,IACAA,EAAA3zB,OAA0B1H,OAAAqgB,GAAA,EAAArgB,CAAiByzD,EAAAvpD,OAC3CupD,EAAAtpD,WAAAspD,EAAArpD,SAAAixB,EAAAhxB,KAAA3C,IAGA+R,KAAAuuD,YAAA3sC,EACA5hB,KAAA0vD,UAAAoE,YAAAlyC,GAEAA,EAAA,CAMA,GALAA,EAAAzQ,SACAnR,KAAA+hB,SAEA3kB,MAAA5W,UAAAF,KAAAqM,MAAAqN,KAAA8vD,qBAAAluC,EAAAqxC,qBAEAW,IACA5zD,KAAAwuD,kBACsBjoE,OAAAqgB,GAAA,EAAArgB,CAAOyZ,KAAAwuD,mBACRjoE,OAAAqgB,GAAA,EAAArgB,CAAMq7B,EAAA3zB,OAAA+R,KAAAwuD,oBAE3BxuD,KAAAsO,cACA,IAAgB2hB,EAAA,EAAS8jC,EAAA,EAAYhkC,UAAA/vB,KAAA4zD,IACrC5zD,KAAAwuD,gBAAiCjoE,OAAAqgB,GAAA,EAAArgB,CAAmByZ,KAAAwuD,kBAIpDxuD,KAAAwuD,kBACA5sC,EAAAixC,UAAgCjkB,GAAA,EAAQ9kC,aACxC8X,EAAAixC,UAAgCjkB,GAAA,EAAQ7kC,eAC7BxjB,OAAAqgB,GAAA,EAAArgB,CAAMq7B,EAAA3zB,OAAA+R,KAAAwuD,mBAGjBxuD,KAAAsO,cAAA,IAA+B2hB,EAAA,EAAS8jC,EAAA,EAAY/jC,QAAAhwB,KAAA4hB,IAC5Cr7B,OAAAqgB,GAAA,EAAArgB,CAAKq7B,EAAA3zB,OAAA+R,KAAAwuD,kBAIbxuD,KAAAsO,cAAA,IAA2B2hB,EAAA,EAAS8jC,EAAA,EAAY/mC,WAAAhtB,KAAA4hB,IAEhDt4B,WAAA0W,KAAA0yD,iBAAA9nE,KAAAoV,MAAA,IAUAotD,EAAA5mE,UAAAwtE,cAAA,SAAAvG,GACAztD,KAAA5B,IAAayqD,EAAWC,WAAA2E,IASxBL,EAAA5mE,UAAA45C,QAAA,SAAAxvC,GACAoP,KAAA5B,IAAayqD,EAAWE,KAAAn4D,IAUxBw8D,EAAA5mE,UAAAsmC,UAAA,SAAA7jC,GACA+W,KAAA5B,IAAayqD,EAAWG,OAAA//D,IASxBmkE,EAAA5mE,UAAAytE,QAAA,SAAAnjD,GACA9Q,KAAA5B,IAAayqD,EAAWI,KAAAn4C,IAMxBs8C,EAAA5mE,UAAA0tE,YAAA,SAAAxC,GACA1xD,KAAAkwD,oBAA6B3pE,OAAA+zB,EAAA,EAAA/zB,CAAMmrE,KAAA,EACnC1xD,KAAA+hB,UAQAqrC,EAAA5mE,UAAA2sE,WAAA,WACA,IAAAD,EAAAlzD,KAAA8M,mBAEA,GAAAomD,EAEK,CACL,IAAAiB,EAAArkB,iBAAAojB,GACAlzD,KAAAogC,QAAA,CACA8yB,EAAAkB,YACAC,WAAAF,EAAA,iBACAE,WAAAF,EAAA,aACAE,WAAAF,EAAA,cACAE,WAAAF,EAAA,kBACAjB,EAAAl6D,aACAq7D,WAAAF,EAAA,gBACAE,WAAAF,EAAA,YACAE,WAAAF,EAAA,eACAE,WAAAF,EAAA,0BAbAn0D,KAAAogC,aAAA/2C,IAqBA+jE,EAAA5mE,UAAA8tE,cAAA,SAAA5C,UACA1xD,KAAAkwD,oBAAoC3pE,OAAA+zB,EAAA,EAAA/zB,CAAMmrE,IAC1C1xD,KAAA+hB,UAGAqrC,EAprCgB,CAqrCdtxC,EAAA,oDCpuCay4C,GA7EA,SAAAj0B,GACf,SAAAk0B,EAAAvmE,EAAAyC,EAAA+6B,EAAAxgB,EAAAwpD,GAEA,IAAAl2B,OAAAl1C,IAAAorE,EAA2CC,GAAA,EAAUh3D,KAAQg3D,GAAA,EAAU92D,OAEvE0iC,EAAA55C,KAAAsZ,KAAA/R,EAAAyC,EAAA+6B,EAAA8S,GAOAv+B,KAAA20D,aAAAtrE,IAAAorE,IAAA,KAMAz0D,KAAA6lC,QAAA56B,EAMAjL,KAAA40D,OAAA,KAiDA,OA7CAt0B,IAAAk0B,EAAAzxD,UAAAu9B,GACAk0B,EAAAhuE,UAAAD,OAAAmE,OAAA41C,KAAA95C,WACAguE,EAAAhuE,UAAAwc,YAAAwxD,EAMAA,EAAAhuE,UAAAquE,SAAA,WACA,OAAA70D,KAAA40D,QAQAJ,EAAAhuE,UAAAsuE,YAAA,SAAA7pE,GACAA,GACA+U,KAAA40D,OAAA3pE,EACA+U,KAAAu+B,MAAmBm2B,GAAA,EAAUj6D,OAE7BuF,KAAAu+B,MAAmBm2B,GAAA,EAAU92D,OAE7BoC,KAAAmd,WAMAq3C,EAAAhuE,UAAAwwC,KAAA,WACAh3B,KAAAu+B,OAAsBm2B,GAAA,EAAUh3D,OAChCsC,KAAAu+B,MAAmBm2B,GAAA,EAAU/2D,QAC7BqC,KAAAmd,UACAnd,KAAA20D,QAAA30D,KAAA80D,YAAAlqE,KAAAoV,SAOAw0D,EAAAhuE,UAAAg6C,SAAA,WACA,OAAAxgC,KAAA6lC,SAGA2uB,EAzEe,CA0EbO,GAAA,uCCzCaC,GA5Cf,SAAArnD,GACA,SAAAsnD,EAAAlsE,EAAAmsE,EAAA3qC,EAAA4qC,EAAAC,GAEAznD,EAAAjnB,KAAAsZ,KAAAjX,GAOAiX,KAAAq1D,cAAAH,EAOAl1D,KAAA4hB,WAAA2I,EAQAvqB,KAAA1I,QAAA69D,EAQAn1D,KAAAs1D,UAAAF,EAQA,OAJAznD,IAAAsnD,EAAAlyD,UAAA4K,GACAsnD,EAAAzuE,UAAAD,OAAAmE,OAAAijB,KAAAnnB,WACAyuE,EAAAzuE,UAAAwc,YAAAiyD,EAEAA,EAzCA,CA0CEtnD,EAAA,8CCtCE4nD,GAAa,aAEjBA,GAAa/uE,UAAAgvE,WAAA,SAAAvkB,EAAAygB,EAAA+D,KAObF,GAAa/uE,UAAAkvE,aAAA,SAAAzkB,KAObskB,GAAa/uE,UAAAmvE,SAAA,SAAAj9D,KAMb68D,GAAa/uE,UAAAovE,WAAA,SAAAC,EAAAnE,KAMb6D,GAAa/uE,UAAAsvE,YAAA,SAAApE,EAAAh5D,KAMb68D,GAAa/uE,UAAAuvE,uBAAA,SAAAC,EAAAtE,KAMb6D,GAAa/uE,UAAAyvE,eAAA,SAAAC,EAAAxE,KAMb6D,GAAa/uE,UAAA2vE,oBAAA,SAAAC,EAAA1E,KAMb6D,GAAa/uE,UAAA6vE,eAAA,SAAAC,EAAA5E,KAMb6D,GAAa/uE,UAAA+vE,iBAAA,SAAAC,EAAA9E,KAMb6D,GAAa/uE,UAAAiwE,UAAA,SAAAC,EAAAhF,KAMb6D,GAAa/uE,UAAAmwE,YAAA,SAAAC,EAAAlF,KAMb6D,GAAa/uE,UAAAqwE,SAAA,SAAA5lB,EAAAygB,KAMb6D,GAAa/uE,UAAAswE,mBAAA,SAAAlzB,EAAA3P,KAMbshC,GAAa/uE,UAAAuwE,cAAA,SAAAC,EAAAC,KAMb1B,GAAa/uE,UAAA0wE,aAAA,SAAAC,EAAAF,KAEE,IAAAG,GAAA,GCyzBAC,GAx4BY,SAAAC,GAC3B,SAAAC,EAAAjgE,EAAAm0B,EAAAx9B,EAAAqL,EAAAk+D,GACAF,EAAA5wE,KAAAsZ,MAMAA,KAAAy3D,SAAAngE,EAMA0I,KAAAugC,YAAA9U,EAMAzrB,KAAAI,QAAAnS,EAMA+R,KAAA03D,WAAAp+D,EAMA0G,KAAA23D,cAAAH,EAMAx3D,KAAA43D,kBAAA,KAMA53D,KAAA63D,oBAAA,KAMA73D,KAAA83D,kBAAA,KAMA93D,KAAA+3D,WAAA,KAMA/3D,KAAAg4D,aAAA,KAMAh4D,KAAAkkC,OAAA,KAMAlkC,KAAAi4D,cAAA,EAMAj4D,KAAAk4D,cAAA,EAMAl4D,KAAAm4D,aAAA,EAMAn4D,KAAAo4D,cAAA,EAMAp4D,KAAAq4D,cAAA,EAMAr4D,KAAAs4D,cAAA,EAMAt4D,KAAAu4D,sBAAA,EAMAv4D,KAAAw4D,eAAA,EAMAx4D,KAAAy4D,YAAA,EAMAz4D,KAAA04D,YAAA,EAMA14D,KAAA24D,MAAA,GAMA34D,KAAA44D,aAAA,EAMA54D,KAAA64D,aAAA,EAMA74D,KAAA84D,qBAAA,EAMA94D,KAAA+4D,cAAA,EAMA/4D,KAAAg5D,WAAA,EAMAh5D,KAAAi5D,eAAA,KAMAj5D,KAAAk5D,iBAAA,KAMAl5D,KAAAm5D,WAAA,KAMAn5D,KAAAo5D,kBAAA,GAMAp5D,KAAAq5D,mBAA8B9yE,OAAAwzB,GAAA,EAAAxzB,GAksB9B,OA9rBA+wE,IAAAC,EAAAx0D,UAAAu0D,GACAC,EAAA/wE,UAAAD,OAAAmE,OAAA4sE,KAAA9wE,WACA+wE,EAAA/wE,UAAAwc,YAAAu0D,EASAA,EAAA/wE,UAAA8yE,YAAA,SAAA9pE,EAAAC,EAAAC,EAAAC,GACA,GAAAqQ,KAAAkkC,OAAA,CAGA,IAAAq1B,EAA2BhzE,OAAAs1B,GAAA,EAAAt1B,CAC3BiJ,EAAAC,EAAAC,EAAA,EAAAsQ,KAAA03D,WACA13D,KAAAo5D,mBACA9hE,EAAA0I,KAAAy3D,SACA+B,EAAAx5D,KAAAq5D,mBACAv/D,EAAAxC,EAAAyC,YACA,GAAAiG,KAAAo4D,gBACA9gE,EAAAyC,YAAAD,EAAAkG,KAAAo4D,eAEA,IAAAznE,EAAAqP,KAAAw4D,eACAx4D,KAAAu4D,uBACA5nE,GAAAqP,KAAA23D,eAEA,QAAAzxE,EAAA,EAAAgI,EAAAqrE,EAAAnzE,OAAiDF,EAAAgI,EAAQhI,GAAA,GACzD,IAAAkI,EAAAmrE,EAAArzE,GAAA8Z,KAAAi4D,cACA5pE,EAAAkrE,EAAArzE,EAAA,GAAA8Z,KAAAk4D,cACA,OAAAvnE,GAAA,GAAAqP,KAAAy4D,YAAA,CACA,IAAA3mB,EAAA1jD,EAAA4R,KAAAi4D,cACAlmB,EAAA1jD,EAAA2R,KAAAk4D,cACQ3xE,OAAAwzB,GAAA,EAAAxzB,CAAgBizE,EACxB1nB,EAAAC,EACA/xC,KAAAy4D,YAAAz4D,KAAAy4D,YACA9nE,GACAmhD,GAAAC,GACAz6C,EAAA0C,aAAArH,MAAA2E,EAAAkiE,GAEAliE,EAAAlB,UAAA4J,KAAAkkC,OAAAlkC,KAAAq4D,cAAAr4D,KAAAs4D,cACAt4D,KAAA04D,YAAA14D,KAAAm4D,aAAA/pE,EAAAC,EACA2R,KAAA04D,YAAA14D,KAAAm4D,cAEA,IAAAxnE,GAAA,GAAAqP,KAAAy4D,aACAnhE,EAAA0C,aAAA,aAEA,GAAAgG,KAAAo4D,gBACA9gE,EAAAyC,YAAAD,KAWAy9D,EAAA/wE,UAAAizE,UAAA,SAAAjqE,EAAAC,EAAAC,EAAAC,GACA,GAAAqQ,KAAAm5D,YAAA,KAAAn5D,KAAA24D,MAAA,CAGA34D,KAAAi5D,gBACAj5D,KAAA05D,qBAAA15D,KAAAi5D,gBAEAj5D,KAAAk5D,kBACAl5D,KAAA25D,uBAAA35D,KAAAk5D,kBAEAl5D,KAAA45D,qBAAA55D,KAAAm5D,YACA,IAAAI,EAA2BhzE,OAAAs1B,GAAA,EAAAt1B,CAC3BiJ,EAAAC,EAAAC,EAAAC,EAAAqQ,KAAA03D,WACA13D,KAAAo5D,mBACA9hE,EAAA0I,KAAAy3D,SACA9mE,EAAAqP,KAAA+4D,cAIA,IAHA/4D,KAAA84D,sBACAnoE,GAAAqP,KAAA23D,eAEUloE,EAAAC,EAAcD,GAAAE,EAAA,CACxB,IAAAvB,EAAAmrE,EAAA9pE,GAAAuQ,KAAA44D,aACAvqE,EAAAkrE,EAAA9pE,EAAA,GAAAuQ,KAAA64D,aACA,OAAAloE,GAAA,GAAAqP,KAAAg5D,WAAA,CACA,IAAAQ,EAA6BjzE,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAAq5D,mBAC7CjrE,EAAAC,EACA2R,KAAAg5D,WAAAh5D,KAAAg5D,WACAroE,GACAvC,GAAAC,GACAiJ,EAAA0C,aAAArH,MAAA2E,EAAAkiE,GAEAx5D,KAAAk5D,kBACA5hE,EAAAuiE,WAAA75D,KAAA24D,MAAAvqE,EAAAC,GAEA2R,KAAAi5D,gBACA3hE,EAAAwiE,SAAA95D,KAAA24D,MAAAvqE,EAAAC,GAGA,IAAAsC,GAAA,GAAAqP,KAAAg5D,YACA1hE,EAAA0C,aAAA,eAaAu9D,EAAA/wE,UAAAuzE,cAAA,SAAAvqE,EAAAC,EAAAC,EAAAC,EAAAqqE,GACA,IAAA1iE,EAAA0I,KAAAy3D,SACA8B,EAA2BhzE,OAAAs1B,GAAA,EAAAt1B,CAC3BiJ,EAAAC,EAAAC,EAAAC,EAAAqQ,KAAA03D,WACA13D,KAAAo5D,mBACA9hE,EAAAu8B,OAAA0lC,EAAA,GAAAA,EAAA,IACA,IAAAnzE,EAAAmzE,EAAAnzE,OACA4zE,IACA5zE,GAAA,GAEA,QAAAF,EAAA,EAAmBA,EAAAE,EAAYF,GAAA,EAC/BoR,EAAAw8B,OAAAylC,EAAArzE,GAAAqzE,EAAArzE,EAAA,IAKA,OAHA8zE,GACA1iE,EAAA68B,YAEAzkC,GAWA6nE,EAAA/wE,UAAAyzE,WAAA,SAAAzqE,EAAAC,EAAAqvB,EAAAnvB,GACA,QAAAzJ,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAqCF,EAAAgI,IAAQhI,EAC7CuJ,EAAAuQ,KAAA+5D,cAAAvqE,EAAAC,EAAAqvB,EAAA54B,GAAAyJ,GAAA,GAEA,OAAAF,GAWA8nE,EAAA/wE,UAAAovE,WAAA,SAAA3kB,GACA,GAAS1qD,OAAAqgB,GAAA,EAAArgB,CAAUyZ,KAAAI,QAAA6wC,EAAA9vC,aAAnB,CAGA,GAAAnB,KAAA+3D,YAAA/3D,KAAAg4D,aAAA,CACAh4D,KAAA+3D,YACA/3D,KAAA05D,qBAAA15D,KAAA+3D,YAEA/3D,KAAAg4D,cACAh4D,KAAA25D,uBAAA35D,KAAAg4D,cAEA,IAAAuB,EAA6BhzE,OAAA01B,GAAA,EAAA11B,CAC7B0qD,EAAAjxC,KAAA03D,WAAA13D,KAAAo5D,mBACA9qE,EAAAirE,EAAA,GAAAA,EAAA,GACAhrE,EAAAgrE,EAAA,GAAAA,EAAA,GACAxyC,EAAAl3B,KAAA4zB,KAAAn1B,IAAAC,KACA+I,EAAA0I,KAAAy3D,SACAngE,EAAAm8B,YACAn8B,EAAA4iE,IACAX,EAAA,GAAAA,EAAA,GAAAxyC,EAAA,IAAAl3B,KAAAyN,IACA0C,KAAA+3D,YACAzgE,EAAA6iE,OAEAn6D,KAAAg4D,cACA1gE,EAAA88B,SAGA,KAAAp0B,KAAA24D,OACA34D,KAAAy5D,UAAAxoB,EAAAlkD,YAAA,SAYAwqE,EAAA/wE,UAAAmvE,SAAA,SAAAj9D,GACAsH,KAAA82D,mBAAAp+D,EAAA0hE,UAAA1hE,EAAA2hE,aACAr6D,KAAA+2D,cAAAr+D,EAAA8nC,YACAxgC,KAAAk3D,aAAAx+D,EAAA4hE,YAWA/C,EAAA/wE,UAAAkvE,aAAA,SAAAzkB,GAEA,OADAA,EAAA51B,WAEA,KAAWoJ,GAAA,EAAYjpB,MACvBwE,KAAAy2D,UAAwE,GACxE,MACA,KAAWhyC,GAAA,EAAYhpB,YACvBuE,KAAAi2D,eAAkF,GAClF,MACA,KAAWxxC,GAAA,EAAY9oB,QACvBqE,KAAA22D,YAA4E,GAC5E,MACA,KAAWlyC,GAAA,EAAY7oB,YACvBoE,KAAAq2D,eAAkF,GAClF,MACA,KAAW5xC,GAAA,EAAY5oB,kBACvBmE,KAAAm2D,oBAA4F,GAC5F,MACA,KAAW1xC,GAAA,EAAY3oB,cACvBkE,KAAAu2D,iBAAsF,GACtF,MACA,KAAW9xC,GAAA,EAAY1oB,oBACvBiE,KAAA+1D,uBAAkG,GAClG,MACA,KAAWtxC,GAAA,EAAYzoB,OACvBgE,KAAA41D,WAA0E,KAiB1E2B,EAAA/wE,UAAAsvE,YAAA,SAAApE,EAAAh5D,GACA,IAAAu4C,EAAAv4C,EAAA6hE,qBAAA7hE,CAAAg5D,GACAzgB,GAAsB1qD,OAAAqgB,GAAA,EAAArgB,CAAUyZ,KAAAI,QAAA6wC,EAAA9vC,eAGhCnB,KAAA21D,SAAAj9D,GACAsH,KAAA01D,aAAAzkB,KAUAsmB,EAAA/wE,UAAAuvE,uBAAA,SAAA9kB,GAEA,IADA,IAAAupB,EAAAvpB,EAAAwpB,qBACAv0E,EAAA,EAAAgI,EAAAssE,EAAAp0E,OAA2CF,EAAAgI,IAAQhI,EACnD8Z,KAAA01D,aAAA8E,EAAAt0E,KAWAqxE,EAAA/wE,UAAAiwE,UAAA,SAAAxlB,GACA,IAAAzhD,EAAAyhD,EAAA30B,qBACA3sB,EAAAshD,EAAAt0B,YACA3c,KAAAkkC,QACAlkC,KAAAs5D,YAAA9pE,EAAA,EAAAA,EAAApJ,OAAAuJ,GAEA,KAAAqQ,KAAA24D,OACA34D,KAAAy5D,UAAAjqE,EAAA,EAAAA,EAAApJ,OAAAuJ,IAWA4nE,EAAA/wE,UAAA6vE,eAAA,SAAAplB,GACA,IAAAzhD,EAAAyhD,EAAA30B,qBACA3sB,EAAAshD,EAAAt0B,YACA3c,KAAAkkC,QACAlkC,KAAAs5D,YAAA9pE,EAAA,EAAAA,EAAApJ,OAAAuJ,GAEA,KAAAqQ,KAAA24D,OACA34D,KAAAy5D,UAAAjqE,EAAA,EAAAA,EAAApJ,OAAAuJ,IAWA4nE,EAAA/wE,UAAAyvE,eAAA,SAAAhlB,GACA,GAAS1qD,OAAAqgB,GAAA,EAAArgB,CAAUyZ,KAAAI,QAAA6wC,EAAA9vC,aAAnB,CAGA,GAAAnB,KAAAg4D,aAAA,CACAh4D,KAAA25D,uBAAA35D,KAAAg4D,cACA,IAAA1gE,EAAA0I,KAAAy3D,SACAjoE,EAAAyhD,EAAA30B,qBACAhlB,EAAAm8B,YACAzzB,KAAA+5D,cAAAvqE,EAAA,EAAAA,EAAApJ,OACA6qD,EAAAt0B,aAAA,GACArlB,EAAA88B,SAEA,QAAAp0B,KAAA24D,MAAA,CACA,IAAA+B,EAAAzpB,EAAA0pB,kBACA36D,KAAAy5D,UAAAiB,EAAA,UAWAnD,EAAA/wE,UAAA2vE,oBAAA,SAAAllB,GACA,IAAA2pB,EAAA3pB,EAAA9vC,YACA,GAAS5a,OAAAqgB,GAAA,EAAArgB,CAAUyZ,KAAAI,QAAAw6D,GAAnB,CAGA,GAAA56D,KAAAg4D,aAAA,CACAh4D,KAAA25D,uBAAA35D,KAAAg4D,cACA,IAAA1gE,EAAA0I,KAAAy3D,SACAjoE,EAAAyhD,EAAA30B,qBACA7sB,EAAA,EACAqvB,EAA0CmyB,EAAArrB,UAC1Cj2B,EAAAshD,EAAAt0B,YACArlB,EAAAm8B,YACA,QAAAvtC,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAuCF,EAAAgI,IAAQhI,EAC/CuJ,EAAAuQ,KAAA+5D,cAAAvqE,EAAAC,EAAAqvB,EAAA54B,GAAAyJ,GAAA,GAEA2H,EAAA88B,SAEA,QAAAp0B,KAAA24D,MAAA,CACA,IAAAkC,EAAA5pB,EAAA6pB,mBACA96D,KAAAy5D,UAAAoB,EAAA,EAAAA,EAAAz0E,OAAA,MAWAmxE,EAAA/wE,UAAAmwE,YAAA,SAAA1lB,GACA,GAAS1qD,OAAAqgB,GAAA,EAAArgB,CAAUyZ,KAAAI,QAAA6wC,EAAA9vC,aAAnB,CAGA,GAAAnB,KAAAg4D,cAAAh4D,KAAA+3D,WAAA,CACA/3D,KAAA+3D,YACA/3D,KAAA05D,qBAAA15D,KAAA+3D,YAEA/3D,KAAAg4D,cACAh4D,KAAA25D,uBAAA35D,KAAAg4D,cAEA,IAAA1gE,EAAA0I,KAAAy3D,SACAngE,EAAAm8B,YACAzzB,KAAAi6D,WAAAhpB,EAAAxrB,6BACA,EAAoCwrB,EAAArrB,UAAAqrB,EAAAt0B,aACpC3c,KAAA+3D,YACAzgE,EAAA6iE,OAEAn6D,KAAAg4D,cACA1gE,EAAA88B,SAGA,QAAAp0B,KAAA24D,MAAA,CACA,IAAAoC,EAAA9pB,EAAAprB,uBACA7lB,KAAAy5D,UAAAsB,EAAA,UAUAxD,EAAA/wE,UAAA+vE,iBAAA,SAAAtlB,GACA,GAAS1qD,OAAAqgB,GAAA,EAAArgB,CAAUyZ,KAAAI,QAAA6wC,EAAA9vC,aAAnB,CAGA,GAAAnB,KAAAg4D,cAAAh4D,KAAA+3D,WAAA,CACA/3D,KAAA+3D,YACA/3D,KAAA05D,qBAAA15D,KAAA+3D,YAEA/3D,KAAAg4D,cACAh4D,KAAA25D,uBAAA35D,KAAAg4D,cAEA,IAAA1gE,EAAA0I,KAAAy3D,SACAjoE,EAAAyhD,EAAAxrB,6BACAh2B,EAAA,EACA0vB,EAAA8xB,EAAA+pB,WACArrE,EAAAshD,EAAAt0B,YACArlB,EAAAm8B,YACA,QAAAvtC,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAwCF,EAAAgI,IAAQhI,EAAA,CAChD,IAAA44B,EAAAK,EAAAj5B,GACAuJ,EAAAuQ,KAAAi6D,WAAAzqE,EAAAC,EAAAqvB,EAAAnvB,GAEAqQ,KAAA+3D,YACAzgE,EAAA6iE,OAEAn6D,KAAAg4D,cACA1gE,EAAA88B,SAGA,QAAAp0B,KAAA24D,MAAA,CACA,IAAAsC,EAAAhqB,EAAAiqB,wBACAl7D,KAAAy5D,UAAAwB,EAAA,EAAAA,EAAA70E,OAAA,MAQAmxE,EAAA/wE,UAAAkzE,qBAAA,SAAAyB,GACA,IAAA7jE,EAAA0I,KAAAy3D,SACA2D,EAAAp7D,KAAA43D,kBACAwD,EAMAA,EAAAx3B,WAAAu3B,EAAAv3B,YACAw3B,EAAAx3B,UAAAtsC,EAAAssC,UAAAu3B,EAAAv3B,YANAtsC,EAAAssC,UAAAu3B,EAAAv3B,UACA5jC,KAAA43D,kBAAA,CACAh0B,UAAAu3B,EAAAv3B,aAaA2zB,EAAA/wE,UAAAmzE,uBAAA,SAAA0B,GACA,IAAA/jE,EAAA0I,KAAAy3D,SACA6D,EAAAt7D,KAAA63D,oBACAyD,GAoBAA,EAAAC,SAAAF,EAAAE,UACAD,EAAAC,QAAAjkE,EAAAikE,QAAgFF,EAAA,SAEtE5rD,EAAA,IACGlpB,OAAAgyB,EAAA,EAAAhyB,CAAM+0E,EAAAE,SAAAH,EAAAG,WACnBlkE,EAAAoY,YAAA4rD,EAAAE,SAAAH,EAAAG,UAEAF,EAAAG,gBAAAJ,EAAAI,iBACAH,EAAAG,eAAAnkE,EAAAmkE,eACAJ,EAAAI,iBAGAH,EAAAI,UAAAL,EAAAK,WACAJ,EAAAI,SAAApkE,EAAAokE,SAAmFL,EAAA,UAEnFC,EAAApnC,WAAAmnC,EAAAnnC,YACAonC,EAAApnC,UAAA58B,EAAA48B,UAAAmnC,EAAAnnC,WAEAonC,EAAAK,YAAAN,EAAAM,aACAL,EAAAK,WAAArkE,EAAAqkE,WACAN,EAAAM,YAEAL,EAAArnC,aAAAonC,EAAApnC,cACAqnC,EAAArnC,YAAA38B,EAAA28B,YACAonC,EAAApnC,eA3CA38B,EAAAikE,QAAiDF,EAAA,QACvC5rD,EAAA,IACVnY,EAAAoY,YAAA2rD,EAAAG,UACAlkE,EAAAmkE,eAAAJ,EAAAI,gBAEAnkE,EAAAokE,SAAmDL,EAAA,SACnD/jE,EAAA48B,UAAAmnC,EAAAnnC,UACA58B,EAAAqkE,WAAAN,EAAAM,WACArkE,EAAA28B,YAAAonC,EAAApnC,YACAj0B,KAAA63D,oBAAA,CACA0D,QAAAF,EAAAE,QACAC,SAAAH,EAAAG,SACAC,eAAAJ,EAAAI,eACAC,SAAAL,EAAAK,SACAxnC,UAAAmnC,EAAAnnC,UACAynC,WAAAN,EAAAM,WACA1nC,YAAAonC,EAAApnC,eAoCAsjC,EAAA/wE,UAAAozE,qBAAA,SAAAgC,GACA,IAAAtkE,EAAA0I,KAAAy3D,SACAoE,EAAA77D,KAAA83D,kBACAgE,EAAAF,EAAAE,UACAF,EAAAE,UAA4BC,GAAA,EAC5BF,GAUAA,EAAAxkE,MAAAukE,EAAAvkE,OACAwkE,EAAAxkE,KAAAC,EAAAD,KAAAukE,EAAAvkE,MAEAwkE,EAAAC,eACAD,EAAAC,UAAAxkE,EAAAwkE,UAAoF,GAEpFD,EAAAG,cAAAJ,EAAAI,eACAH,EAAAG,aAAA1kE,EAAA0kE,aACwCJ,EAAA,gBAjBxCtkE,EAAAD,KAAAukE,EAAAvkE,KACAC,EAAAwkE,UAAqD,EACrDxkE,EAAA0kE,aAA2DJ,EAAA,aAC3D57D,KAAA83D,kBAAA,CACAzgE,KAAAukE,EAAAvkE,KACAykE,YACAE,aAAAJ,EAAAI,gBAwBAzE,EAAA/wE,UAAAswE,mBAAA,SAAAlzB,EAAA3P,GACA,GAAA2P,EAEK,CACL,IAAAq4B,EAAAr4B,EAAAs4B,WACAl8D,KAAA+3D,WAAA,CACAn0B,UAAmBr9C,OAAA41E,GAAA,EAAA51E,CAAW01E,GACHF,GAAA,SAL3B/7D,KAAA+3D,WAAA,KAQA,GAAA9jC,EAEK,CACL,IAAAmoC,EAAAnoC,EAAAioC,WACAG,EAAApoC,EAAAqoC,aACAC,EAAAtoC,EAAAuoC,cACAC,EAAAxoC,EAAAyoC,oBACAC,EAAA1oC,EAAA2oC,cACAC,EAAA5oC,EAAA3mC,WACAwvE,EAAA7oC,EAAA8oC,gBACA/8D,KAAAg4D,aAAA,CACAuD,aAAAlyE,IAAAgzE,EACAA,EAA+BN,GAAA,EAC/BP,SAAAe,GACgCR,GAAA,EAChCN,eAAAgB,GACsCV,GAAA,EACtCL,cAAAryE,IAAAszE,EACAA,EAAgCZ,GAAA,EAChC7nC,UAAAl0B,KAAAugC,kBAAAl3C,IAAAwzE,EACAA,EAA6Bd,GAAA,GAC7BJ,gBAAAtyE,IAAAyzE,EACAA,EAAkCf,GAAA,EAClC9nC,YAAqB1tC,OAAA41E,GAAA,EAAA51E,CAAW61E,GACHL,GAAA,SAvB7B/7D,KAAAg4D,aAAA,MAmCAT,EAAA/wE,UAAAuwE,cAAA,SAAAC,GACA,GAAAA,EAEK,CACL,IAAAgG,EAAAhG,EAAAiG,YAEAC,EAAAlG,EAAAx2B,SAAA,GACA28B,EAAAnG,EAAAvjB,YACA2pB,EAAApG,EAAApnC,UACA5vB,KAAAi4D,cAAA+E,EAAA,GACAh9D,KAAAk4D,cAAA8E,EAAA,GACAh9D,KAAAm4D,aAAAiF,EAAA,GACAp9D,KAAAkkC,OAAAg5B,EACAl9D,KAAAo4D,cAAApB,EAAAv4B,aACAz+B,KAAAq4D,cAAA8E,EAAA,GACAn9D,KAAAs4D,cAAA6E,EAAA,GACAn9D,KAAAu4D,qBAAAvB,EAAAqG,oBACAr9D,KAAAw4D,eAAAxB,EAAAtlD,cACA1R,KAAAy4D,YAAAzB,EAAAsG,WAAAt9D,KAAAugC,YACAvgC,KAAA04D,YAAA0E,EAAA,QAjBAp9D,KAAAkkC,OAAA,MA4BAqzB,EAAA/wE,UAAA0wE,aAAA,SAAAC,GACA,GAAAA,EAEK,CACL,IAAAoG,EAAApG,EAAAiD,UACA,GAAAmD,EAEO,CACP,IAAAC,EAAAD,EAAArB,WACAl8D,KAAAi5D,eAAA,CACAr1B,UAAqBr9C,OAAA41E,GAAA,EAAA51E,CAAWi3E,GACCzB,GAAA,SALjC/7D,KAAAi5D,eAAA,KAQA,IAAAwE,EAAAtG,EAAAkD,YACA,GAAAoD,EAEO,CACP,IAAAC,EAAAD,EAAAvB,WACAyB,EAAAF,EAAAnB,aACAsB,EAAAH,EAAAjB,cACAqB,EAAAJ,EAAAf,oBACAoB,EAAAL,EAAAb,cACAmB,EAAAN,EAAAnwE,WACA0wE,EAAAP,EAAAV,gBACA/8D,KAAAk5D,iBAAA,CACAqC,aAAAlyE,IAAAs0E,EACAA,EAAqC5B,GAAA,EACrCP,SAAAoC,GACsC7B,GAAA,EACtCN,eAAAoC,GAC4C9B,GAAA,EAC5CL,cAAAryE,IAAAy0E,EACAA,EAAsC/B,GAAA,EACtC7nC,eAAA7qC,IAAA00E,EACAA,EAAmChC,GAAA,EACnCJ,gBAAAtyE,IAAA20E,EACAA,EAAwCjC,GAAA,EACxC9nC,YAAuB1tC,OAAA41E,GAAA,EAAA51E,CAAWm3E,GACC3B,GAAA,SAvBnC/7D,KAAAk5D,iBAAA,KA0BA,IAAA+E,EAAA9G,EAAA+G,UACAC,EAAAhH,EAAAiH,aACAC,EAAAlH,EAAAmH,aACAC,EAAApH,EAAAkG,oBACAmB,EAAArH,EAAAzlD,cACA+sD,EAAAtH,EAAAmG,WACAoB,EAAAvH,EAAAmD,UACAqE,EAAAxH,EAAAyH,eACAC,EAAA1H,EAAA2H,kBACA9+D,KAAAm5D,WAAA,CACA9hE,UAAAhO,IAAA40E,EACAA,EAAqBlC,GAAA,EACrBD,eAAAzyE,IAAAs1E,EACAA,EAA0B5C,GAAA,EAC1BC,kBAAA3yE,IAAAw1E,EACAA,EAA6B9C,GAAA,GAE7B/7D,KAAA24D,WAAAtvE,IAAAq1E,IAAA,GACA1+D,KAAA44D,kBACAvvE,IAAA80E,EAAAn+D,KAAAugC,YAAA49B,EAAA,EACAn+D,KAAA64D,kBACAxvE,IAAAg1E,EAAAr+D,KAAAugC,YAAA89B,EAAA,EACAr+D,KAAA84D,yBAAAzvE,IAAAk1E,KACAv+D,KAAA+4D,mBAAA1vE,IAAAm1E,IAAA,EACAx+D,KAAAg5D,WAAAh5D,KAAAugC,kBAAAl3C,IAAAo1E,EACAA,EAAA,QAjEAz+D,KAAA24D,MAAA,IAqEApB,EAp4B2B,CAq4BzBH,sBCv5BF2H,GAAA,WAMA/+D,KAAAg/D,OAAA,GAMAh/D,KAAAi/D,WAAA,EAMAj/D,KAAAk/D,cAAA,IAqEA,SAAA5qD,GAAAjsB,EAAA44C,EAAApjB,GAEA,OAAAojB,EAAA,IAAA54C,EAAA,KADAw1B,EAA4Bt3B,OAAA44E,GAAA,EAAA54E,CAAQs3B,GAAA,QAhEpCkhD,GAAAv4E,UAAAwR,MAAA,WACAgI,KAAAg/D,OAAA,GACAh/D,KAAAi/D,WAAA,GAMAF,GAAAv4E,UAAA44E,OAAA,WACA,GAAAp/D,KAAAi/D,WAAAj/D,KAAAk/D,cAAA,CACA,IAAAh5E,EAAA,EACA,QAAAyE,KAAAqV,KAAAg/D,OAAA,CACA,IAAAK,EAAAr/D,KAAAg/D,OAAAr0E,GACA,MAAAzE,MAAAm5E,EAAA5gD,uBACAze,KAAAg/D,OAAAr0E,KACAqV,KAAAi/D,eAYAF,GAAAv4E,UAAAyD,IAAA,SAAA5B,EAAA44C,EAAApjB,GACA,IAAAlzB,EAAA2pB,GAAAjsB,EAAA44C,EAAApjB,GACA,OAAAlzB,KAAAqV,KAAAg/D,OAAAh/D,KAAAg/D,OAAAr0E,GAAA,MASAo0E,GAAAv4E,UAAA4X,IAAA,SAAA/V,EAAA44C,EAAApjB,EAAAwhD,GACA,IAAA10E,EAAA2pB,GAAAjsB,EAAA44C,EAAApjB,GACA7d,KAAAg/D,OAAAr0E,GAAA00E,IACAr/D,KAAAi/D,YAUAF,GAAAv4E,UAAA45C,QAAA,SAAAk/B,GACAt/D,KAAAk/D,cAAAI,EACAt/D,KAAAo/D,UAgBe,IAQRG,GAAA,IAAAR,GC9FHS,GAAW,SAAAthD,GACf,SAAAuhD,EAAA5uD,GACAqN,EAAAx3B,KAAAsZ,MAMAA,KAAAsQ,KAAAO,EAMA7Q,KAAA0/D,gBAAA,GAMA1/D,KAAA2/D,wBAAA,GAMA3/D,KAAA4/D,2BAAA,GAgSA,OA5RA1hD,IAAAuhD,EAAA18D,UAAAmb,GACAuhD,EAAAj5E,UAAAD,OAAAmE,OAAAwzB,KAAA13B,WACAi5E,EAAAj5E,UAAAwc,YAAAy8D,EAOAA,EAAAj5E,UAAAwsE,oBAAA,SAAAjqE,EAAA64B,GACIr7B,OAAA+zB,EAAA,EAAA/zB,IAOJk5E,EAAAj5E,UAAAq5E,uBAAA,SAAAC,GACA9/D,KAAA4/D,2BAAAt5E,KAAAqM,MAAAqN,KAAA4/D,2BAAAE,IAOAL,EAAAj5E,UAAAu5E,oBAAA,SAAAn+C,GACA,IAAAo4B,EAAAp4B,EAAAo4B,UACAmY,EAAAvwC,EAAAuwC,2BACAF,EAAArwC,EAAAqwC,2BAEI1rE,OAAAwzB,GAAA,EAAAxzB,CAAgB4rE,EACpBvwC,EAAAhxB,KAAA,KAAAgxB,EAAAhxB,KAAA,KACA,EAAAopD,EAAAtpD,YAAA,EAAAspD,EAAAtpD,YACAspD,EAAArpD,UACAqpD,EAAAvpD,OAAA,IAAAupD,EAAAvpD,OAAA,IAEIlK,OAAAwzB,GAAA,EAAAxzB,CACEA,OAAAwzB,GAAA,EAAAxzB,CAAqB0rE,EAAAE,KAM3BsN,EAAAj5E,UAAA4sE,qBAAA,WACA,QAAAzoE,KAAAqV,KAAA0/D,gBACA1/D,KAAAggE,0BAAAr1E,GAAAmlC,WAmBA2vC,EAAAj5E,UAAA+qE,2BAAA,SACA/iE,EACAozB,EACAyvC,EACArhE,EACAiwE,EACA3O,EACA4O,GAEA,IAAAtpC,EACAojB,EAAAp4B,EAAAo4B,UACAmmB,EAAAnmB,EAAAtpD,WAOA,SAAA6gE,EAAAG,EAAAlzB,GACA,IAAA/c,EAAAG,EAAAE,YAA2Cv7B,OAAA+zB,EAAA,EAAA/zB,CAAMi4C,IAAA/c,QACjD,KAAYl7B,OAAA+zB,EAAA,EAAA/zB,CAAMmrE,KAAA9vC,EAAAiyC,qBAAApyC,EAClB,OAAAzxB,EAAAtJ,KAAAu5E,EAAAvO,EAAAjwC,EAAA+c,EAAA,MAIA,IAAAv5B,EAAA+0C,EAAA/0C,WAEAm7D,EAAA5xE,EACA,GAAAyW,EAAAhE,WAAA,CACA,IAAA2nB,EAAA3jB,EAAA9D,YACA0nB,EAAuBtiC,OAAAqgB,GAAA,EAAArgB,CAAQqiC,GAC/Bx6B,EAAAI,EAAA,GACA,GAAAJ,EAAAw6B,EAAA,IAAAx6B,EAAAw6B,EAAA,GAEAw3C,EAAA,CAAAhyE,EAAAy6B,EADAh5B,KAAAk5B,MAAAH,EAAA,GAAAx6B,GAAAy6B,GACAr6B,EAAA,IAIA,IAEAtI,EAFA47B,EAAAF,EAAAC,iBAGA,IAAA37B,EAFA47B,EAAA17B,OAEA,EAA2BF,GAAA,IAAQA,EAAA,CACnC,IAAAs7B,EAAAM,EAAA57B,GACAs4C,EAAAhd,EAAAgd,MACA,GAAUj4C,OAAA+5B,GAAA,EAAA/5B,CAAmBi7B,EAAA2+C,IAAA7O,EAAA5qE,KAAAw5E,EAAA1hC,GAAA,CAC7B,IAAA6hC,EAAArgE,KAAAsgE,iBAAA9hC,GACA95B,EAAoE,EAAAyc,YAMpE,GALAzc,IACAkyB,EAAAypC,EAAA9O,2BACA7sD,EAAA29B,WAAA+9B,EAAA5xE,EACAozB,EAAAyvC,EAAAE,IAEA36B,EACA,OAAAA,KAuBA6oC,EAAAj5E,UAAAmrE,oBAAA,SAAAl0B,EAAA7b,EAAAyvC,EAAArhE,EAAAiwE,EAAA3O,EAAA4O,GACA,OAAW35E,OAAA+zB,EAAA,EAAA/zB,IAeXk5E,EAAAj5E,UAAAqrE,uBAAA,SAAArjE,EAAAozB,EAAAyvC,EAAAC,EAAA2O,GAIA,YAAA52E,IAHA2W,KAAAuxD,2BACA/iE,EAAAozB,EAAAyvC,EAA4Cj0B,GAAA,EAAIp9B,KAAAsxD,EAAA2O,IAUhDR,EAAAj5E,UAAA85E,iBAAA,SAAA9hC,GACA,IAAA+hC,EAAmBh6E,OAAA+zB,EAAA,EAAA/zB,CAAMi4C,GACzB,GAAA+hC,KAAAvgE,KAAA0/D,gBACA,OAAA1/D,KAAA0/D,gBAAAa,GAGA,IADA,IAAA9K,EACAvvE,EAAA,EAAAgI,EAAA8R,KAAA4/D,2BAAAx5E,OAAkEF,EAAAgI,IAAQhI,EAAA,CAC1E,IAAAs6E,EAAAxgE,KAAA4/D,2BAAA15E,GACA,GAAAs6E,EAAA,QAAAhiC,GAAA,CACAi3B,EAAA+K,EAAA,OAAAxgE,KAAAw+B,GACA,OAGA,IAAAi3B,EAKA,UAAAtsE,MAAA,wCAAAq1C,EAAAnjB,WAEA,OANArb,KAAA0/D,gBAAAa,GAAA9K,EACAz1D,KAAA2/D,wBAAAY,GAAiDh6E,OAAAugE,EAAA,EAAAvgE,CAAMkvE,EAC7ClK,GAAA,EAAStxD,OAAA+F,KAAAygE,2BAAAzgE,MAInBy1D,GASAgK,EAAAj5E,UAAAk6E,sBAAA,SAAAH,GACA,OAAAvgE,KAAA0/D,gBAAAa,IAOAd,EAAAj5E,UAAAm6E,kBAAA,WACA,OAAA3gE,KAAA0/D,iBAMAD,EAAAj5E,UAAAkqB,OAAA,WACA,OAAA1Q,KAAAsQ,MAOAmvD,EAAAj5E,UAAAi6E,2BAAA,WACAzgE,KAAAsQ,KAAAyR,UAQA09C,EAAAj5E,UAAAw5E,0BAAA,SAAAO,GACA,IAAAF,EAAArgE,KAAA0/D,gBAAAa,GAMA,cALAvgE,KAAA0/D,gBAAAa,GAEIh6E,OAAAugE,EAAA,EAAAvgE,CAAayZ,KAAA2/D,wBAAAY,WACjBvgE,KAAA2/D,wBAAAY,GAEAF,GAQAZ,EAAAj5E,UAAAo6E,4BAAA,SAAA/vD,EAAA+Q,GACA,QAAA2+C,KAAAvgE,KAAA0/D,gBACA99C,GAAA2+C,KAAA3+C,EAAAE,aACA9hB,KAAAggE,0BAAAO,GAAAzwC,WAUA2vC,EAAAj5E,UAAAstE,YAAA,SAAAlyC,GACIr7B,OAAA+zB,EAAA,EAAA/zB,IAOJk5E,EAAAj5E,UAAAq6E,wBAAA,SAAAj/C,GACAA,EAAAqxC,oBAAA3sE,KAAmG,KAOnGm5E,EAAAj5E,UAAAs6E,mCAAA,SAAAl/C,GACA,QAAA2+C,KAAAvgE,KAAA0/D,gBACA,KAAAa,KAAA3+C,EAAAE,aAIA,YAHAF,EAAAqxC,oBAAA3sE,KACqE0Z,KAAA4gE,4BAAAh2E,KAAAoV,QAOrEy/D,EA1Te,CA2Tb5iC,GAAA,GAOF,SAAAkkC,GAAAlwD,EAAA+Q,GACE29C,GAAcH,SAST,SAAA4B,GAAAC,EAAAC,GACP,OAAAD,EAAAt/C,OAAAu/C,EAAAv/C,OAEe,IC5URw/C,GAAA,GA4MQC,GArMM,SAAA3B,GACrB,SAAA4B,EAAAxwD,GACA4uD,EAAA/4E,KAAAsZ,KAAA6Q,GAEA,IAAAq2C,EAAAr2C,EAAA2sC,cAMAx9C,KAAAy3D,SAAoBlxE,OAAAo9C,GAAA,EAAAp9C,GAMpByZ,KAAA6lC,QAAA7lC,KAAAy3D,SAAAxsD,OAEAjL,KAAA6lC,QAAAntC,MAAAb,MAAA,OACAmI,KAAA6lC,QAAAntC,MAAAF,OAAA,OACAwH,KAAA6lC,QAAAntC,MAAA4oE,QAAA,QACAthE,KAAA6lC,QAAA3K,UAA6BqmC,GAAA,EAC7Bra,EAAAsa,aAAAxhE,KAAA6lC,QAAAqhB,EAAAua,WAAA,UAMAzhE,KAAA0hE,kBAAA,EAMA1hE,KAAA03D,WAAsBnxE,OAAAwzB,GAAA,EAAAxzB,GA+JtB,OA3JAk5E,IAAA4B,EAAAt+D,UAAA08D,GACA4B,EAAA76E,UAAAD,OAAAmE,OAAA+0E,KAAAj5E,WACA66E,EAAA76E,UAAAwc,YAAAq+D,EAMAA,EAAA76E,UAAAwsE,oBAAA,SAAAjqE,EAAA64B,GACA,IAAA/Q,EAAA7Q,KAAA0Q,SACApZ,EAAA0I,KAAAy3D,SACA,GAAA5mD,EAAA4N,YAAA11B,GAAA,CACA,IAAAkF,EAAA2zB,EAAA3zB,OACAw9B,EAAA7J,EAAA6J,WAEA96B,EADAixB,EAAAo4B,UACArpD,SAEA2I,EAAA0G,KAAAyG,aAAAmb,GAEAyzC,EAAA,IAA8BgC,GAAuB//D,EAAAm0B,EACrDx9B,EAAAqL,EAAA3I,GACAgxE,EAAA,IAA6B3M,GAAWjsE,EAAAssE,EACxCzzC,EAAAtqB,EAAA,MACAuZ,EAAAvC,cAAAqzD,KASAN,EAAA76E,UAAAigB,aAAA,SAAAmb,GACA,IAAAo4B,EAAAp4B,EAAAo4B,UACA36C,EAAAW,KAAA6lC,QAAAhuC,MAAA,EACAyH,EAAAU,KAAA6lC,QAAArtC,OAAA,EACA+G,EAAAqiB,EAAA6J,WAAAuuB,EAAAtpD,WACA8O,GAAAD,EACAE,GAAAu6C,EAAArpD,SACA+O,GAAAs6C,EAAAvpD,OAAA,GACAkP,GAAAq6C,EAAAvpD,OAAA,GACA,OAAWlK,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAA03D,WAAAr4D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAM3B0hE,EAAA76E,UAAAstE,YAAA,SAAAlyC,GAEA,GAAAA,EAAA,CAQA,IAAAtqB,EAAA0I,KAAAy3D,SACAhsC,EAAA7J,EAAA6J,WACA5zB,EAAAhI,KAAAo6B,MAAArI,EAAAhxB,KAAA,GAAA66B,GACAjzB,EAAA3I,KAAAo6B,MAAArI,EAAAhxB,KAAA,GAAA66B,GACAzrB,KAAA6lC,QAAAhuC,UAAAmI,KAAA6lC,QAAArtC,WACAwH,KAAA6lC,QAAAhuC,QACAmI,KAAA6lC,QAAArtC,UAEAlB,EAAAsqE,UAAA,IAAA/pE,EAAAW,GAGA,IAAA7H,EAAAixB,EAAAo4B,UAAArpD,SAEAqP,KAAA+/D,oBAAAn+C,GAEA5hB,KAAAgzD,oBAA6BF,EAAA,EAAez5C,WAAAuI,GAE5C,IAAAC,EAAAD,EAAAC,iBACIt7B,OAAAgyB,EAAA,EAAAhyB,CAAUs7B,EAAmBm/C,IAEjCrwE,IACA2G,EAAAk8B,OACMjtC,OAAAw1E,GAAA,EAAAx1E,CAAc+Q,EAAA3G,EAAAkH,EAAA,EAAAW,EAAA,IAGpB,IACAtS,EAAAgI,EADAiyE,EAAAv+C,EAAAo4B,UAAAtpD,WAEA,IAAAxK,EAAA,EAAAgI,EAAA2zB,EAAAz7B,OAA6CF,EAAAgI,IAAQhI,EAAA,CACrD,IAAAs7B,EAAAK,EAAA37B,GACAs4C,EAAAhd,EAAAgd,MACA6hC,EAAkErgE,KAAAsgE,iBAAA9hC,GACvDj4C,OAAA+5B,GAAA,EAAA/5B,CAAmBi7B,EAAA2+C,IAC9B3+C,EAAAkd,aAAoCuuB,GAAA,EAAW3vC,QAG/C+iD,EAAAwB,aAAAjgD,EAAAJ,IACA6+C,EAAAyB,aAAAlgD,EAAAJ,EAAAlqB,IAIA3G,GACA2G,EAAA08B,UAGAh0B,KAAAgzD,oBAA6BF,EAAA,EAAe15C,YAAAwI,GAE5C5hB,KAAA0hE,mBACA1hE,KAAA6lC,QAAAntC,MAAA4oE,QAAA,GACAthE,KAAA0hE,kBAAA,GAGA1hE,KAAA8gE,mCAAAl/C,GACA5hB,KAAA6gE,wBAAAj/C,QA3DA5hB,KAAA0hE,mBACA1hE,KAAA6lC,QAAAntC,MAAA4oE,QAAA,OACAthE,KAAA0hE,kBAAA,IA+DAL,EAAA76E,UAAAmrE,oBAAA,SAAAl0B,EAAA7b,EAAAyvC,EAAArhE,EAAAiwE,EAAA3O,EAAA4O,GACA,IAAAtpC,EAUA1wC,EARAi6E,EADAv+C,EAAAo4B,UACAtpD,WAEAoxB,EAAAF,EAAAC,iBACAkgD,EAAAjgD,EAAA17B,OAEAoI,EAAqBjI,OAAAwzB,GAAA,EAAAxzB,CACrBq7B,EAAAqwC,2BAAAx0B,EAAAnyC,SAGA,IAAApF,EAAA67E,EAAA,EAA2B77E,GAAA,IAAQA,EAAA,CACnC,IAAAs7B,EAAAM,EAAA57B,GACAs4C,EAAAhd,EAAAgd,MACA,GAAUj4C,OAAA+5B,GAAA,EAAA/5B,CAAmBi7B,EAAA2+C,IAAA7O,EAAA5qE,KAAAw5E,EAAA1hC,GAI7B,GAFA5H,EADoE52B,KAAAsgE,iBAAA9hC,GACpEwjC,yBACAxzE,EAAAozB,EAAAyvC,EAAArhE,EAAAiwE,GAEA,OAAArpC,IAUAyqC,EAAA76E,UAAAq5E,uBAAA,SAAAC,GACAL,EAAAj5E,UAAAq5E,uBAAAn5E,KAAAsZ,KAAA8/D,GACA,QAAA55E,EAAA,EAAAgI,EAAA4xE,EAAA15E,OAA6CF,EAAAgI,IAAQhI,EAAA,CACrD,IAAA+7E,EAAAnC,EAAA55E,GACWK,OAAAgyB,EAAA,EAAAhyB,CAAQ46E,GAAAc,IACnBd,GAAA76E,KAAA27E,KAKAZ,EAjMqB,CDqUN,aEjKAa,GA9KQ,SAAAC,GACvB,SAAAC,EAAA5jC,GAEA2jC,EAAAz7E,KAAAsZ,KAAAw+B,GAMAx+B,KAAAqiE,mBAMAriE,KAAA03D,WAAsBnxE,OAAAwzB,GAAA,EAAAxzB,GA4JtB,OAxJA47E,IAAAC,EAAAr/D,UAAAo/D,GACAC,EAAA57E,UAAAD,OAAAmE,OAAAy3E,KAAA37E,WACA47E,EAAA57E,UAAAwc,YAAAo/D,EAQAA,EAAA57E,UAAAutC,KAAA,SAAAz8B,EAAAsqB,EAAA3zB,GACA,IAAAw9B,EAAA7J,EAAA6J,WACA5zB,EAAA+pB,EAAAhxB,KAAA,GAAA66B,EACAjzB,EAAAopB,EAAAhxB,KAAA,GAAA66B,EACA96B,EAAAixB,EAAAo4B,UAAArpD,SACA2xE,EAAkB/7E,OAAAqgB,GAAA,EAAArgB,CAAU0H,GAC5Bs0E,EAAmBh8E,OAAAqgB,GAAA,EAAArgB,CAAW0H,GAC9Bu0E,EAAsBj8E,OAAAqgB,GAAA,EAAArgB,CAAc0H,GACpCw0E,EAAqBl8E,OAAAqgB,GAAA,EAAArgB,CAAa0H,GAE9B1H,OAAAwzB,GAAA,EAAAxzB,CAAcq7B,EAAAuwC,2BAAAmQ,GACd/7E,OAAAwzB,GAAA,EAAAxzB,CAAcq7B,EAAAuwC,2BAAAoQ,GACdh8E,OAAAwzB,GAAA,EAAAxzB,CAAcq7B,EAAAuwC,2BAAAqQ,GACdj8E,OAAAwzB,GAAA,EAAAxzB,CAAcq7B,EAAAuwC,2BAAAsQ,GAElBnrE,EAAAk8B,OACIjtC,OAAAw1E,GAAA,EAAAx1E,CAAc+Q,GAAA3G,EAAAkH,EAAA,EAAAW,EAAA,GAClBlB,EAAAm8B,YACAn8B,EAAAu8B,OAAAyuC,EAAA,GAAA72C,EAAA62C,EAAA,GAAA72C,GACAn0B,EAAAw8B,OAAAyuC,EAAA,GAAA92C,EAAA82C,EAAA,GAAA92C,GACAn0B,EAAAw8B,OAAA0uC,EAAA,GAAA/2C,EAAA+2C,EAAA,GAAA/2C,GACAn0B,EAAAw8B,OAAA2uC,EAAA,GAAAh3C,EAAAg3C,EAAA,GAAAh3C,GACAn0B,EAAAy8B,OACIxtC,OAAAw1E,GAAA,EAAAx1E,CAAc+Q,EAAA3G,EAAAkH,EAAA,EAAAW,EAAA,IAUlB4pE,EAAA57E,UAAAk8E,sBAAA,SAAA35E,EAAAuO,EAAAsqB,EAAA+gD,GACA,IAAAnkC,EAAAx+B,KAAA4iE,WACA,GAAApkC,EAAA/f,YAAA11B,GAAA,CACA,IAAA8O,EAAA+pB,EAAAhxB,KAAA,GAAAgxB,EAAA6J,WACAjzB,EAAAopB,EAAAhxB,KAAA,GAAAgxB,EAAA6J,WACA96B,EAAAixB,EAAAo4B,UAAArpD,SACMpK,OAAAw1E,GAAA,EAAAx1E,CAAc+Q,GAAA3G,EAAAkH,EAAA,EAAAW,EAAA,GACpB,IAAAc,OAAAjQ,IAAAs5E,EACAA,EAAA3iE,KAAAyG,aAAAmb,EAAA,GACAG,EAAA,IAAuBs1C,GACvB//D,EAAAsqB,EAAA6J,WAAA7J,EAAA3zB,OAAAqL,EACAsoB,EAAAo4B,UAAArpD,UACAgxE,EAAA,IAA6B3M,GAAWjsE,EAAAg5B,EAAAH,EACxCtqB,EAAA,MACAknC,EAAAlwB,cAAAqzD,GACMp7E,OAAAw1E,GAAA,EAAAx1E,CAAc+Q,EAAA3G,EAAAkH,EAAA,EAAAW,EAAA,KAcpB4pE,EAAA57E,UAAAw7E,yBAAA,SAAAxzE,EAAAozB,EAAAyvC,EAAArhE,EAAAiwE,GAGA,OAFAjgE,KAAAuxD,2BAAA/iE,EAAAozB,EAAAyvC,EAA2Fj0B,GAAA,GAG3FptC,EAAAtJ,KAAAu5E,EAAAjgE,KAAA4iE,WAAA,WAEA,GAWAR,EAAA57E,UAAAq8E,YAAA,SAAAvrE,EAAAsqB,EAAAJ,EAAAmhD,GACA3iE,KAAA0iE,sBAA+B5P,EAAA,EAAe15C,YAAA9hB,EAAAsqB,EAAA+gD,IAS9CP,EAAA57E,UAAAs8E,WAAA,SAAAxrE,EAAAsqB,EAAA+gD,GACA3iE,KAAA0iE,sBAA+B5P,EAAA,EAAez5C,WAAA/hB,EAAAsqB,EAAA+gD,IAS9CP,EAAA57E,UAAAwsE,oBAAA,SAAA17D,EAAAsqB,EAAA+gD,GACA3iE,KAAA0iE,sBAA+B5P,EAAA,EAAex5C,OAAAhiB,EAAAsqB,EAAA+gD,IAS9CP,EAAA57E,UAAAigB,aAAA,SAAAmb,EAAA1oB,GACA,IAAA8gD,EAAAp4B,EAAAo4B,UACAvuB,EAAA7J,EAAA6J,WACApsB,EAAAosB,EAAA7J,EAAAhxB,KAAA,KACA0O,EAAAmsB,EAAA7J,EAAAhxB,KAAA,KACA2O,EAAAksB,EAAAuuB,EAAAtpD,WACA8O,GAAAD,EACAE,GAAAu6C,EAAArpD,SACA+O,GAAAs6C,EAAAvpD,OAAA,GAAAyI,EACAyG,GAAAq6C,EAAAvpD,OAAA,GACA,OAAWlK,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAA03D,WAAAr4D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAS3ByiE,EAAA57E,UAAAs7E,aAAA,SAAAlgD,EAAAJ,EAAAlqB,GACI/Q,OAAA+zB,EAAA,EAAA/zB,IASJ67E,EAAA57E,UAAAq7E,aAAA,SAAAjgD,EAAAJ,GACA,OAAWj7B,OAAA+zB,EAAA,EAAA/zB,IAGX67E,EA3KuB,CCLN,SAAAt0D,GACjB,SAAAq0D,EAAA3jC,GAEA1wB,EAAApnB,KAAAsZ,MAMAA,KAAA+iE,OAAAvkC,EA6NA,OAzNA1wB,IAAAq0D,EAAAp/D,UAAA+K,GACAq0D,EAAA37E,UAAAD,OAAAmE,OAAAojB,KAAAtnB,WACA27E,EAAA37E,UAAAwc,YAAAm/D,EAWAA,EAAA37E,UAAAw8E,uBAAA,SAAAt+D,EAAAO,EAAAg+D,GACA,gBAMApzD,EAAAuF,GAUA,OAAA1Q,EAAAsjC,kBAAA/iC,EAAA4K,EAAAuF,EANA,SAAA6tB,GACAggC,EAAApzD,KACAozD,EAAApzD,GAAA,IAEAozD,EAAApzD,GAAAozB,EAAA1uB,UAAAsC,YAAAosB,MAgBAk/B,EAAA37E,UAAA+qE,2BAAA,SAAA/iE,EAAAozB,EAAAyvC,EAAArhE,KAKAmyE,EAAA37E,UAAAo8E,SAAA,WACA,OAAA5iE,KAAA+iE,QAQAZ,EAAA37E,UAAA08E,mBAAA,SAAAz6E,GACyDA,EAAA,OACzD44B,aAA6BqzC,GAAA,EAAU92D,QACvCoC,KAAAmjE,2BASAhB,EAAA37E,UAAAqrE,uBAAA,SAAArjE,EAAAozB,GACA,UAUAugD,EAAA37E,UAAA48E,UAAA,SAAA5pE,GACA,IAAA6pE,EAAA7pE,EAAA6nB,WAQA,OAPAgiD,GAAsB3O,GAAA,EAAU92D,QAAAylE,GAAyB3O,GAAA,EAAUj6D,OAC7DlU,OAAAugE,EAAA,EAAAvgE,CAAMiT,EAAQ+xD,GAAA,EAAStxD,OAAA+F,KAAAkjE,mBAAAljE,MAE7BqjE,GAAsB3O,GAAA,EAAUh3D,OAChClE,EAAAw9B,OACAqsC,EAAA7pE,EAAA6nB,YAEAgiD,GAAyB3O,GAAA,EAAU92D,QAMnCukE,EAAA37E,UAAA28E,wBAAA,WACA,IAAA3kC,EAAAx+B,KAAA4iE,WACApkC,EAAAG,cAAAH,EAAApd,kBAAwD6rC,GAAA,EAAW3vC,OACnEtd,KAAAmd,WASAglD,EAAA37E,UAAA88E,oBAAA,SAAA1hD,EAAA2hD,GACA,GAAAA,EAAA9jC,iBAAA,CAMA,IAAA+jC,EAAA,SAAAD,EAAA1yD,EAAA+Q,GACA,IAAAywC,EAA4B9rE,OAAA+zB,EAAA,EAAA/zB,CAAMg9E,GAClClR,KAAAzwC,EAAAmjB,WACAw+B,EAAAz+B,YAAAljB,EAAAo4B,UAAA/0C,WACA2c,EAAAmjB,UAAAstB,KAEOznE,KAAA,KAAA24E,GAEP3hD,EAAAqxC,oBAAA3sE,KACmE,KAYnE67E,EAAA37E,UAAAi9E,gBAAA,SAAA1+B,EAAAw+B,EAAApvD,EAAAiB,GAEA,IAAAi9C,EAAwB9rE,OAAA+zB,EAAA,EAAA/zB,CAAMg9E,GAC9Bv+B,EAAA7wB,EAAA0C,WACAw7C,KAAAttB,EACAC,KAAAD,EAAAstB,GACAttB,EAAAstB,GAAArtB,GAAAx4C,OAAA4oB,GAEA2vB,EAAAstB,GAAArtB,GAAA5vB,GAGA2vB,EAAAstB,GAAA,GACAttB,EAAAstB,GAAArtB,GAAA5vB,IAwBA+sD,EAAA37E,UAAAk9E,kBAAA,SACA9hD,EACA2hD,EACA1hE,EACA4pB,EACAxmB,EACAhX,EACA01E,EACAC,EACAC,EACA5zE,GAEA,IAAAoiE,EAAwB9rE,OAAA+zB,EAAA,EAAA/zB,CAAMg9E,GAC9BlR,KAAAzwC,EAAA4wC,cACA5wC,EAAA4wC,YAAAH,GAAA,IAEA,IAGApvB,EAAA7tB,EAAAm9C,EAAAnkE,EAAAC,EAAA8lB,EAHAq+C,EAAA5wC,EAAA4wC,YAAAH,GACAM,EAAA/wC,EAAA+wC,UAGA,IAAAx+C,EAFAtS,EAAAqT,aAEqBf,GAAAwvD,IAAexvD,EAGpC,IAFAiB,EAAAvT,EAAAwT,0BAAApnB,EAAAkmB,EAAAiB,GACAm9C,EAAA1wD,EAAAkQ,cAAAoC,GACA/lB,EAAAgnB,EAAAzmB,KAA8BP,GAAAgnB,EAAAvmB,OAAqBT,EACnD,IAAAC,EAAA+mB,EAAAxmB,KAAgCP,GAAA+mB,EAAAtmB,OAAqBT,EACrDs1E,EAAAxvD,GAAAyvD,IACA3gC,EAAAsgC,EAAAh7B,QAAAp0B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,IACAoc,YAAmC6hB,EAAA,EAASxlC,OAC5C80D,EAAAvvB,EAAA3uB,WAAA,EACAq+C,EAAArI,YAAArnB,EAAA3uB,WACAq+C,EAAA5I,QAAA,CAAA9mB,EAAAovB,EACAxwD,EAAA8mB,mBAAAsa,EAAA1uB,WAAAg+C,UAGAlpE,IAAAw6E,GACAA,EAAAn9E,KAAAuJ,EAAAgzC,IAGAsgC,EAAAr6B,QAAA/0B,EAAA/lB,EAAAC,EAAA4W,IAOAk9D,EAtOiB,OAuOf,IClHa2B,GAnHe,SAAA1B,GAC9B,SAAA2B,EAAAvlC,GAEA4jC,EAAA17E,KAAAsZ,KAAAw+B,GAMAx+B,KAAAgkE,iCAA4Cz9E,OAAAwzB,GAAA,EAAAxzB,GAM5CyZ,KAAAikE,kBAAA,KAgGA,OA5FA7B,IAAA2B,EAAAhhE,UAAAq/D,GACA2B,EAAAv9E,UAAAD,OAAAmE,OAAA03E,KAAA57E,WACAu9E,EAAAv9E,UAAAwc,YAAA+gE,EAKAA,EAAAv9E,UAAAs7E,aAAA,SAAAlgD,EAAAJ,EAAAlqB,GAEA0I,KAAA8iE,WAAAxrE,EAAAsqB,GAEA,IAAApoB,EAAAwG,KAAAwgC,WACA,GAAAhnC,EAAA,CAGA,IAAAvL,EAAAuzB,EAAAvzB,OACAi2E,OAAA76E,IAAA4E,IACW1H,OAAAqgB,GAAA,EAAArgB,CAAc0H,EAAA2zB,EAAA3zB,SACf1H,OAAAqgB,GAAA,EAAArgB,CAAU0H,EAAA2zB,EAAA3zB,QACpBi2E,GACAlkE,KAAA+zB,KAAAz8B,EAAAsqB,EAAmF,GAGnF,IAAAuiD,EAAAnkE,KAAAokE,oBAIAtqE,EAAAxC,EAAAyC,YACAzC,EAAAyC,YAAAynB,EAAAjoB,QAIA,IAAAjL,EAAA61E,EAAA,GACA51E,EAAA41E,EAAA,GACAE,EAAA7qE,EAAA3B,MAAAssE,EAAA,GACAG,EAAA9qE,EAAAhB,OAAA2rE,EAAA,GACAE,GAAA,IAAAC,GAAA,IACAhtE,EAAAlB,UAAAoD,EAAA,KAAAA,EAAA3B,OAAA2B,EAAAhB,OACA3I,KAAAo6B,MAAA37B,GAAAuB,KAAAo6B,MAAA17B,GAAAsB,KAAAo6B,MAAAo6C,GAAAx0E,KAAAo6B,MAAAq6C,IAEAhtE,EAAAyC,YAAAD,EAEAoqE,GACA5sE,EAAA08B,UAIAh0B,KAAA6iE,YAAAvrE,EAAAsqB,EAAAJ,IAOAuiD,EAAAv9E,UAAAg6C,SAAA,WACA,OAAWj6C,OAAA+zB,EAAA,EAAA/zB,IAOXw9E,EAAAv9E,UAAA49E,kBAAA,WACA,OAAW79E,OAAA+zB,EAAA,EAAA/zB,IAMXw9E,EAAAv9E,UAAAw7E,yBAAA,SAAAxzE,EAAAozB,EAAAyvC,EAAArhE,EAAAiwE,GACA,GAAAjgE,KAAAwgC,WAAA,CAIA,IAAA/C,EAAgBl3C,OAAAwzB,GAAA,EAAAxzB,CAAcyZ,KAAAgkE,iCAAAx1E,EAAAlD,SAC1B/E,OAAAg+E,GAAA,EAAAh+E,CAAek3C,EAAA7b,EAAAo4B,UAAAtpD,WAAAsP,KAAAqiE,oBAEnBriE,KAAAikE,oBACAjkE,KAAAikE,kBAA+B19E,OAAAo9C,GAAA,EAAAp9C,CAAqB,MAGpDyZ,KAAAikE,kBAAArC,UAAA,SACA5hE,KAAAikE,kBAAA7tE,UAAA4J,KAAAwgC,WAAA/C,EAAA,GAAAA,EAAA,gBAEA,IAAA+mC,EAAAxkE,KAAAikE,kBAAAQ,aAAA,SAAA5+E,KACA,OAAA2+E,EAAA,KACAx0E,EAAAtJ,KAAAu5E,EAAAjgE,KAAA4iE,WAAA4B,QAEA,IAIAT,EA/G8B,CAgH5B7B,ICzGEwC,GAAwB,SAAAX,GAC5B,SAAAY,EAAAC,GA2BA,GAzBAb,EAAAr9E,KAAAsZ,KAAA4kE,GAMA5kE,KAAAkkC,OAAA,KAMAlkC,KAAA6kE,gBAA2Bt+E,OAAAwzB,GAAA,EAAAxzB,GAK3ByZ,KAAA8kE,iBAAA,GAMA9kE,KAAA+kE,gBAAA,KAEAH,EAAAvpD,YAAiC2pD,GAAA,EAAS7rD,OAC1C,QAAAjzB,EAAA,EAAAgI,EAA2BizE,GAAyB/6E,OAAQF,EAAAgI,IAAQhI,EAAA,CACpE,IAAA+7E,EAAmBd,GAAyBj7E,GAC5C,GAAA+7E,IAAA0C,GAAA1C,EAAA,QAAA2C,GAAA,CACA5kE,KAAA+kE,gBAA+E,IAAA9C,EAAA2C,GAC/E,QAyIA,OAlIAb,IAAAY,EAAA5hE,UAAAghE,GACAY,EAAAn+E,UAAAD,OAAAmE,OAAAq5E,KAAAv9E,WACAm+E,EAAAn+E,UAAAwc,YAAA2hE,EAKAA,EAAAn+E,UAAAg4B,gBAAA,WACAxe,KAAA+kE,iBACA/kE,KAAA+kE,gBAAAj1C,UAEAi0C,EAAAv9E,UAAAg4B,gBAAA93B,KAAAsZ,OAMA2kE,EAAAn+E,UAAAg6C,SAAA,WACA,OAAAxgC,KAAAkkC,OAAAlkC,KAAAkkC,OAAA1D,WAAA,MAMAmkC,EAAAn+E,UAAA49E,kBAAA,WACA,OAAApkE,KAAA6kE,iBAMAF,EAAAn+E,UAAAq7E,aAAA,SAAAjgD,EAAAJ,GAEA,IAMAhoB,EANAiyB,EAAA7J,EAAA6J,WACA76B,EAAAgxB,EAAAhxB,KACAopD,EAAAp4B,EAAAo4B,UACAirB,EAAAjrB,EAAAvpD,OACA0vE,EAAAnmB,EAAAtpD,WAIAw0E,EADuEllE,KAAA4iE,WACEzhD,YAEzEyxC,EAAAhxC,EAAAixC,UAEAsS,EAAAnlE,KAAA+kE,gBACAK,EAAAxjD,EAAA3zB,OAKA,GAJAk3E,QAAA97E,IAAAm4B,EAAAvzB,SACAm3E,EAAuB7+E,OAAAqgB,GAAA,EAAArgB,CAAe6+E,EAAA5jD,EAAAvzB,UAGtC2kE,EAAehkB,GAAA,EAAQ9kC,aAAA8oD,EAAsBhkB,GAAA,EAAQ7kC,eAC5CxjB,OAAAqgB,GAAA,EAAArgB,CAAO6+E,GAAA,CAChB,IAAAngE,EAAA+0C,EAAA/0C,WACA,IAAW0hC,GAAA,EAA0B,CACrC,IAAAtgC,EAAA6+D,EAAA9iC,gBACA/7B,IACApB,EAAAoB,GAGA,IAAAg/D,EAAArlE,KAAA8kE,iBACA,GAAAK,EAAA,CACA,IAAA7tE,EAAA6tE,EAAA7tE,QACAguE,EAAyF/+E,OAAAwO,GAAA,EAAL,CAAW,GAAG6sB,EAAA,CAClGhxB,KAAA,CACYrK,OAAAqgB,GAAA,EAAArgB,CAAQ6+E,GAAAjF,EACR55E,OAAAqgB,GAAA,EAAArgB,CAAS6+E,GAAAjF,GAErBnmB,UAAmEzzD,OAAAwO,GAAA,EAAL,CAAW,GAAG6sB,EAAAo4B,UAAA,CAC5ErpD,SAAA,MAGA40E,EAAAh/E,OAAA2N,KAAAoxE,EAAAzR,oBAAArrD,OACAhP,EAAA,IAAoB+6D,GAAW6Q,EAAAjF,EAAA10C,EAAAn0B,EAAA2T,OAAA,SAAAjb,IAC/Bm1E,EAAAtD,aAAAyD,EAAA9jD,KACA2jD,EAAAK,oBACej/E,OAAAgyB,EAAA,EAAAhyB,CAAM8+E,EAAAE,KACrBjuE,EAAA2T,OAAApT,MAAAytE,EAAA10E,KAAA,GAAA66B,EACAn0B,EAAA2T,OAAAzS,OAAA8sE,EAAA10E,KAAA,GAAA66B,EACA05C,EAAAlnE,QAAA3G,EAAAguE,EAAA9jD,GACA6jD,EAAAE,EACAv1E,YAIAwJ,EAAA0rE,EAAA1kC,SACA4kC,EAAAjF,EAAA10C,EAAAxmB,GAEAzL,GAAAwG,KAAAojE,UAAA5pE,KACAwG,KAAAkkC,OAAA1qC,EACAwG,KAAA8kE,iBAAAO,GAIA,GAAArlE,KAAAkkC,OAAA,CAEA,IAAAuhC,GADAjsE,EAAAwG,KAAAkkC,QACA/iC,YACAukE,EAAAlsE,EAAAuY,gBACA4zD,EAAAnsE,EAAAinC,gBACA5mC,EAAA4xB,EAAAi6C,GACAvF,EAAAwF,GACArsE,EAAsB/S,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAA6kE,gBACtCp5C,EAAA76B,EAAA,KAAA66B,EAAA76B,EAAA,KACAiJ,IACA,EACA8rE,GAAAF,EAAA,GAAAR,EAAA,IAAAS,EACAC,GAAAV,EAAA,GAAAQ,EAAA,IAAAC,GACMn/E,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAAgkE,iCACtBv4C,EAAA76B,EAAA,KAAA0I,EAAA,GAAAmyB,EAAA76B,EAAA,KAAA0I,EAAA,GACAmyB,EAAA00C,GAAA10C,EAAA00C,EACA,GACA8E,EAAA,IAAAA,EAAA,IAEAjlE,KAAAqiE,mBAAAqD,EAAAj6C,EAAAk6C,EAGA,QAAA3lE,KAAAkkC,QAMAygC,EAAAn+E,UAAA+qE,2BAAA,SAAA/iE,EAAAozB,EAAAyvC,EAAArhE,GACA,OAAAgQ,KAAA+kE,gBACA/kE,KAAA+kE,gBAAAxT,2BAAA/iE,EAAAozB,EAAAyvC,EAAArhE,GAEA+zE,EAAAv9E,UAAA+qE,2BAAA7qE,KAAAsZ,KAAAxR,EAAAozB,EAAAyvC,EAAArhE,IAIA20E,EA1K4B,CA2K1Bb,IAQFY,GAAwB,iBAAAlmC,GACxB,OAAAA,EAAAnjB,YAA6B2pD,GAAA,EAAShsD,OACtCwlB,EAAAnjB,YAAwB2pD,GAAA,EAAS7rD,QACsB,EAAAysD,kBAAgCC,GAAA,EAAgB7sD,OAUvG0rD,GAAwB,gBAAAoB,EAAAtnC,GACxB,WAAakmC,GAA2E,IAIzE,IAAAqB,GAAA,YCvMXC,GAAuB,SAAAjC,GAC3B,SAAAkC,EAAAC,EAAAC,GAEApC,EAAAr9E,KAAAsZ,KAAAkmE,GAMAlmE,KAAA1I,QAAA6uE,EAAA,KAA0C5/E,OAAAo9C,GAAA,EAAAp9C,GAM1CyZ,KAAAomE,cAMApmE,KAAAqmE,gBAAA,KAMArmE,KAAAsmE,iBAMAtmE,KAAAumE,cAAA,GAMAvmE,KAAAwmE,WAAA,EAMAxmE,KAAAymE,UAAqBlgF,OAAAqgB,GAAA,EAAArgB,GAMrByZ,KAAA0mE,cAAA,IAA6Bh3C,GAAA,EAAS,SAMtC1vB,KAAA6kE,gBAA2Bt+E,OAAAwzB,GAAA,EAAAxzB,GAM3ByZ,KAAA2mE,WAAA,EA+RA,OA3RA5C,IAAAkC,EAAAljE,UAAAghE,GACAkC,EAAAz/E,UAAAD,OAAAmE,OAAAq5E,KAAAv9E,WACAy/E,EAAAz/E,UAAAwc,YAAAijE,EAOAA,EAAAz/E,UAAAogF,gBAAA,SAAA3jC,GACA,IAAAijC,EAAqElmE,KAAA4iE,WACrEx3B,EAAAnI,EAAA5hB,WACAwlD,EAAAX,EAAAY,4BACA,OAAA17B,GAAwBlI,EAAA,EAAStlC,QACjCwtC,GAAqBlI,EAAA,EAASrlC,OAC9ButC,GAAqBlI,EAAA,EAASzoC,QAAAosE,GAW9BZ,EAAAz/E,UAAA+hD,QAAA,SAAAp0B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,GACA,IAAAihE,EAAqElmE,KAAA4iE,WAErE3/B,EADuEijC,EAAA/kD,YACvEonB,QAAAp0B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,GAaA,OAZAg+B,EAAA5hB,YAA2B6hB,EAAA,EAASzoC,QACpCyrE,EAAAY,4BAGOZ,EAAAa,aAAA,IAEP/mE,KAAAwmE,WAAA,GAHAvjC,EAAAT,SAAsBU,EAAA,EAAStlC,SAM/BoC,KAAA4mE,gBAAA3jC,KACAA,IAAAD,kBAEAC,GAMAgjC,EAAAz/E,UAAAq7E,aAAA,SAAAjgD,EAAAJ,GAEA,IAAAiK,EAAA7J,EAAA6J,WACA76B,EAAAgxB,EAAAhxB,KACAopD,EAAAp4B,EAAAo4B,UACA/0C,EAAA+0C,EAAA/0C,WACAk7D,EAAAnmB,EAAAtpD,WACAu0E,EAAAjrB,EAAAvpD,OAEAy1E,EAAqElmE,KAAA4iE,WACrEW,EAAuE2C,EAAA/kD,YACvE6lD,EAAAzD,EAAAxoD,cACAlZ,EAAA0hE,EAAA96B,yBAAAxjC,GACAkP,EAAAtS,EAAAilC,kBAAAq5B,EAAAngE,KAAA2mE,YACApU,EAAA1wD,EAAAkQ,cAAAoC,GACA8yD,EAAAp3E,KAAAo6B,MAAAk2C,EAAA5N,IAAA,EACAtkE,EAAA2zB,EAAA3zB,OAKA,QAHA5E,IAAAm4B,EAAAvzB,SACAA,EAAe1H,OAAAqgB,GAAA,EAAArgB,CAAe0H,EAAAuzB,EAAAvzB,SAEtB1H,OAAAqgB,GAAA,EAAArgB,CAAO0H,GAEf,SAGA,IAAAmnB,EAAAvT,EAAAwT,0BAAApnB,EAAAkmB,GACAsxD,EAAA5jE,EAAA8xC,mBAAAx/B,EAAAiB,GAEAisB,EAAAkiC,EAAA16B,kBAAApd,GAKAy7C,EAAA,GACAA,EAAA/yD,GAAA,GAEA,IASA8uB,EAAA70C,EAAAC,EATA84E,EAAAnnE,KAAAgjE,uBACAO,EAAAt+D,EAAAiiE,GAEAtU,EAAAhxC,EAAAixC,UACAuU,EAAAxU,EAAuChkB,GAAA,EAAQ9kC,YAAA8oD,EAAqBhkB,GAAA,EAAQ7kC,aAE5E08D,EAAAzmE,KAAAymE,UACAY,EAAArnE,KAAA0mE,cAGA,IAFA1mE,KAAAwmE,WAAA,EAEAp4E,EAAAgnB,EAAAzmB,KAA4BP,GAAAgnB,EAAAvmB,OAAqBT,EACjD,IAAAC,EAAA+mB,EAAAxmB,KAA8BP,GAAA+mB,EAAAtmB,OAAqBT,EACnD,KAAA8/C,KAAAC,MAAAxsB,EAAA0hB,KAAA,IAAA8jC,GAAA,CAIA,GADAnkC,EAAAjjC,KAAAuoC,QAAAp0B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,GACAjF,KAAA4mE,gBAAA3jC,GAAA,CACA,IAAAkI,EAAoB5kD,OAAA+zB,EAAA,EAAA/zB,CAAMyZ,MAC1B,GAAAijC,EAAA5hB,YAAiC6hB,EAAA,EAAStlC,OAAA,CAC1CspE,EAAA/yD,GAAA8uB,EAAA1uB,UAAAsC,YAAAosB,EACA,IAAAM,EAAAN,EAAAM,aAAA4H,GACAnrC,KAAAwmE,YAAAjjC,IAAA,IAAAvjC,KAAAumE,cAAA9xE,QAAAwuC,KACAjjC,KAAAwmE,WAAA,GAGA,OAAAvjC,EAAAI,SAAA8H,EAAAvpB,EAAA0hB,MAEA,SAIA,IAAAgkC,EAAAzlE,EAAA6xC,2BACAzQ,EAAA1uB,UAAA8yD,EAAAZ,GACAt+B,GAAA,EACAm/B,IACAn/B,EAAAg/B,EAAAhzD,EAAA,EAAAmzD,IAEAn/B,GACAtmC,EAAAyxC,gCACArQ,EAAA1uB,UAAA4yD,EAAA,KAAAE,EAAAZ,GAMA,IAAApE,EAAA9P,EAAA9mC,EAAA4V,EAAA4lC,EACA,KAAAjnE,KAAAqiE,oBAAAl0B,KAAAC,MAAAxsB,EAAA0hB,KAAA,IAAA8jC,KACApnE,KAAAwmE,YACAxmE,KAAAqmE,kBAAoC9/E,OAAAqgB,GAAA,EAAArgB,CAAcyZ,KAAAqmE,gBAAAp4E,IAClD+R,KAAAsmE,kBAAAU,GACAC,GAAAjnE,KAAAomE,gBACAgB,GAAA/E,GAAAriE,KAAAqiE,oBACA,CAEA,IAAA/qE,EAAA0I,KAAA1I,QACA,GAAAA,EAAA,CACA,IAAAiwE,EAAAhE,EAAAz6B,iBAAA30B,EAAAsX,EAAAxmB,GACApN,EAAAhI,KAAAo6B,MAAA7U,EAAA9nB,WAAAi6E,EAAA,GAAAN,GACAzuE,EAAA3I,KAAAo6B,MAAA7U,EAAAloB,YAAAq6E,EAAA,GAAAN,GACAh8D,EAAA3T,EAAA2T,OACAA,EAAApT,UAAAoT,EAAAzS,WACAwH,KAAAomE,cAAAa,EACAh8D,EAAApT,QACAoT,EAAAzS,WAEAwH,KAAAqmE,kBAAuC9/E,OAAAqgB,GAAA,EAAArgB,CAAMk/E,EAAAzlE,KAAAqmE,kBAC7C/uE,EAAAsqE,UAAA,IAAA/pE,EAAAW,GAEAyuE,EAAAjnE,KAAAomE,eAIApmE,KAAAumE,cAAAngF,OAAA,EAEA,IAUAohF,EAAAC,EAAA9D,EAAAz9E,EAAAgI,EACAw5E,EAAAC,EAAAC,EAAAjuE,EAAAC,EAXAiuE,EAAAthF,OAAA2N,KAAAgzE,GAAAr2D,IAAA4D,QAYA,IAXAozD,EAAAr/D,KAAA,SAAAhL,EAAAC,GACA,OAAAD,IAAA2W,EACA,EACS1W,IAAA0W,GACT,EAEA3W,EAAAC,EAAA,EAAAD,EAAAC,GAAA,MAKAvX,EAAA,EAAAgI,EAAA25E,EAAAzhF,OAAiCF,EAAAgI,IAAQhI,EAOzC,QAAA+hD,KANA07B,EAAAkE,EAAA3hF,GACAuhF,EAAAlE,EAAAz6B,iBAAA66B,EAAAl4C,EAAAxmB,GAEAuiE,EADA3lE,EAAAkQ,cAAA4xD,GACApR,EACAoV,EAAAtmC,EAAAkiC,EAAAn7B,uBAAAnjC,GACA2iE,EAAAV,EAAAvD,GAEA1gC,EAAA2kC,EAAA3/B,GAEA75C,IADAs5E,EAAA7lE,EAAAukC,mBAAAnD,EAAAG,eAAAqjC,IACA,GAAAhB,EAAA,IAAAlT,EAAAlxB,EAAA4lC,EACA54E,GAAAo3E,EAAA,GAAAiC,EAAA,IAAAnV,EAAAlxB,EAAA4lC,EACAttE,EAAA8tE,EAAA,GAAAD,EAAAP,EACArtE,EAAA6tE,EAAA,GAAAD,EAAAP,EACAjnE,KAAA8nE,cAAA7kC,EAAArhB,EAAAJ,EAAApzB,EAAAC,EAAAsL,EAAAC,EAAA+tE,EAAAxzD,IAAAwvD,GACA3jE,KAAAumE,cAAAjgF,KAAA28C,GAIAjjC,KAAAsmE,iBAAAU,EACAhnE,KAAAqiE,mBAAA9P,EAAA9mC,EAAA4V,EAAA4lC,EACAjnE,KAAAqmE,gBAAAZ,EAGA,IAAA5rE,EAAAmG,KAAAqiE,mBAAAlC,EACA7mE,EAAoB/S,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAA6kE,gBACpCp5C,EAAA76B,EAAA,KAAA66B,EAAA76B,EAAA,KACAiJ,IACA,GACAmG,KAAAqmE,gBAAA,GAAApB,EAAA,IAAAjlE,KAAAqiE,mBAAA52C,GACAw5C,EAAA,GAAAjlE,KAAAqmE,gBAAA,IAAArmE,KAAAqiE,mBAAA52C,GAaA,OAZIllC,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAAgkE,iCACpBv4C,EAAA76B,EAAA,KAAA0I,EAAA,GAAAmyB,EAAA76B,EAAA,KAAA0I,EAAA,GACAmyB,EAAA00C,GAAA10C,EAAA00C,EACA,GACA8E,EAAA,IAAAA,EAAA,IAGAjlE,KAAAyjE,gBAAA7hD,EAAAmjB,UAAAw+B,EAAApvD,EAAAiB,GACApV,KAAA0jE,kBAAA9hD,EAAA2hD,EAAA1hE,EAAA4pB,EACAxmB,EAAAhX,EAAAkmB,EAAA+xD,EAAAa,cACA/mE,KAAAsjE,oBAAA1hD,EAAA2hD,GAEAvjE,KAAAumE,cAAAngF,OAAA,GAcA6/E,EAAAz/E,UAAAshF,cAAA,SAAA7kC,EAAArhB,EAAAJ,EAAApzB,EAAAC,EAAAsL,EAAAC,EAAAs4B,EAAAqP,GACA,IAAA/nC,EAAAwG,KAAA+nE,aAAA9kC,GACA,GAAAzpC,EAAA,CAGA,IAAA2xC,EAAc5kD,OAAA+zB,EAAA,EAAA/zB,CAAMyZ,MACpBlG,EAAAynC,EAAA0B,EAAAI,SAAA8H,EAAAvpB,EAAA0hB,MAAA,EAEAigC,EADqEvjE,KAAA4iE,WACEzhD,YACvE,IAAArnB,GAAAypE,EAAAj7B,UAAA1mB,EAAAo4B,UAAA/0C,aACAjF,KAAA1I,QAAAsqE,UAAAxzE,EAAAC,EAAAsL,EAAAC,GAEA,IAAAouE,EAAAluE,IAAAkG,KAAA1I,QAAAyC,YACAiuE,IACAhoE,KAAA1I,QAAAk8B,OACAxzB,KAAA1I,QAAAyC,YAAAD,GAEAkG,KAAA1I,QAAAlB,UAAAoD,EAAA04B,IACA14B,EAAA3B,MAAA,EAAAq6B,EAAA14B,EAAAhB,OAAA,EAAA05B,EAAA9jC,EAAAC,EAAAsL,EAAAC,GAEAouE,GACAhoE,KAAA1I,QAAA08B,UAEA,IAAAl6B,EACA8nB,EAAAzQ,SAAA,EACKowB,GACL0B,EAAAO,cAAA2H,KAOA86B,EAAAz/E,UAAAg6C,SAAA,WACA,IAAAlpC,EAAA0I,KAAA1I,QACA,OAAAA,IAAA2T,OAAA,MAMAg7D,EAAAz/E,UAAA49E,kBAAA,WACA,OAAApkE,KAAA6kE,iBASAoB,EAAAz/E,UAAAuhF,aAAA,SAAA9kC,GACA,OAA2D,EAAAzC,YAG3DylC,EA9V2B,CA+VzBnC,IAQFkC,GAAuB,iBAAAxnC,GACvB,OAAAA,EAAAnjB,YAA6B2pD,GAAA,EAAS/rD,MAUtC+sD,GAAuB,gBAAAF,EAAAtnC,GACvB,WAAawnC,GAAyE,IAQtFA,GAAuBx/E,UAAAo8E,SAGR,IAAAqF,GAAA,uBCxYXC,GAAW,aAEfA,GAAW1hF,UAAA2hF,UAAA,SAAAxmD,EAAAymD,GACX,OAAS7hF,OAAA+zB,EAAA,EAAA/zB,IAOT2hF,GAAW1hF,UAAAgH,QAAA,WACX,OAASjH,OAAA+zB,EAAA,EAAA/zB,IAQT2hF,GAAW1hF,UAAA6hF,aAAA,SAAAC,GACX,OAAS/hF,OAAA+zB,EAAA,EAAA/zB,IAGM,IAAAgiF,GAAA,GCxBAC,GAAA,CACfxsE,OAAA,SACAysE,QAAA,UACAzvD,MAAA,QACAvd,YAAA,aACAE,QAAA,UACA+sE,KAAA,2CCMO,SAAAC,GACPn5E,EAAAC,EAAAC,EAAAC,EAAAwH,EAAAyxE,EAAAC,EAAAC,GAmBA,IAlBA,IAiBAjjF,EAAA0iB,EAAAwgE,EAjBAnyC,EAAA,GAGAoyC,EAAAx5E,EAAAC,GAAAD,EAAAE,EAAAC,GAEAs5E,EAAA9xE,EAAA/Q,OAEAkL,EAAA9B,EAAAC,GACAiC,EAAAlC,EAAAC,EAAA,GAEA8B,EAAA/B,EADAC,GAAAE,GAEAgC,EAAAnC,EAAAC,EAAA,GACAy5E,EAAA,EACAj0B,EAAAplD,KAAA4zB,KAAA5zB,KAAA2jB,IAAAjiB,EAAAD,EAAA,GAAAzB,KAAA2jB,IAAA7hB,EAAAD,EAAA,IAEA7I,EAAA,GACAsgF,EAAA,EAEAjjF,EAAA,EAAiBA,EAAA+iF,IAAc/iF,EAAA,CAC/BqiB,EAAAygE,EAAAC,EAAA/iF,EAAA,EAAAA,EACA,IAAAkjF,EAAAjyE,EAAAkyE,OAAA9gE,GAEA+gE,EAAAV,EADA//E,EAAAmgF,EAAAI,EAAAvgF,IAAAugF,GACAD,EACAA,GAAAG,EAEA,IADA,IAAAC,EAAAV,EAAAS,EAAA,EACA75E,EAAAC,EAAAC,GAAAu5E,EAAAj0B,EAAAs0B,GACAj4E,EAAAC,EACAG,EAAAC,EAEAJ,EAAA/B,EADAC,GAAAE,GAEAgC,EAAAnC,EAAAC,EAAA,GACAy5E,GAAAj0B,EACAA,EAAAplD,KAAA4zB,KAAA5zB,KAAA2jB,IAAAjiB,EAAAD,EAAA,GAAAzB,KAAA2jB,IAAA7hB,EAAAD,EAAA,IAEA,IAAA83E,EAAAD,EAAAL,EACAzpE,EAAA5P,KAAAyqC,MAAA3oC,EAAAD,EAAAH,EAAAD,GAIA,GAHA03E,IACAvpE,KAAA,GAAA5P,KAAAyN,GAAAzN,KAAAyN,SAEAjU,IAAA0/E,EAAA,CACA,IAAAh4D,EAAAtR,EAAAspE,EAEA,GADAh4D,KAAAlhB,KAAAyN,IAAA,EAAAzN,KAAAyN,GAAAyT,GAAAlhB,KAAAyN,GAAA,EAAAzN,KAAAyN,GAAA,EACAzN,KAAAiN,IAAAiU,GAAA+3D,EACA,YAGA,IAAAW,EAAAD,EAAAv0B,EACA7mD,EAAY7H,OAAAuc,GAAA,EAAAvc,CAAI+K,EAAAC,EAAAk4E,GAChBp7E,EAAY9H,OAAAuc,GAAA,EAAAvc,CAAImL,EAAAC,EAAA83E,GAChBV,GAAAtpE,GACAupE,IACAnjF,EAAA,GAAAuI,EACAvI,EAAA,GAAAwI,EACAxI,EAAA,GAAAyjF,EAAA,GAEAzjF,EAAA,GAAAgD,IAGAsgF,EAAAG,EACAzjF,EAAA,CAAAuI,EAAAC,EAAAi7E,EAAA,EAAA7pE,EAFA5W,EAAAugF,GAGAJ,EACApyC,EAAA8yC,QAAA7jF,GAEA+wC,EAAAtwC,KAAAT,GAEAkjF,EAAAtpE,GAEAopE,GAAAS,EAEA,OAAA1yC,ECnFA,IAAA+yC,GAAA,CACAC,eAAA,EACAC,WAAA,EACA7tE,OAAA,EACA8tE,WAAA,EACAC,OAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,KAAA,EACAC,gBAAA,EACAC,eAAA,GACAC,iBAAA,GACAC,OAAA,IAOWC,GAAe,CAAAb,GAAAQ,MAMfM,GAAiB,CAAAd,GAAAY,QAMrBG,GAAA,CAAAf,GAAAE,YAMAc,GAAA,CAAAhB,GAAAG,YAGQc,GAAA,GCtCRC,GAAA,CACLrC,GAAU7sE,QACV6sE,GAAUxsE,OACVwsE,GAAU/sE,YACV+sE,GAAUxvD,MACVwvD,GAAUE,KACVF,GAAUC,SAOLqC,GAAA,CACPhyE,KAAA,EACApJ,IAAA,EACAe,OAAA,GACA4/B,MAAA,EACAr+B,MAAA,EACAwqC,IAAA,EACAuuC,OAAA,GACAC,QAAA,GACAC,WAAA,GACAC,YAAA,GACAC,OAAA,GCDIC,GAAY7kF,OAAAqgB,GAAA,EAAArgB,GAMhBuzB,GAAmBvzB,OAAAwzB,GAAA,EAAAxzB,GAuhCJ8kF,GAphCC,SAAA/T,GAChB,SAAAgU,EAAApwD,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GACAnU,EAAA5wE,KAAAsZ,MAKAA,KAAAyrE,gBAMAzrE,KAAAkb,YAOAlb,KAAAurE,YAMAvrE,KAAAwrE,WAMAxrE,KAAAyrB,aAMAzrB,KAAA0rE,aAAA,EAOA1rE,KAAAtP,aAMAsP,KAAA2rE,WAMA3rE,KAAA4rE,2BAAA,KAMA5rE,KAAA6rE,2BAAA,KAMA7rE,KAAA8rE,mBAAA,KAMA9rE,KAAA+rE,aAAA,GAMA/rE,KAAAhS,YAAA,GAMAgS,KAAAgsE,iBAAA,GAMAhsE,KAAAisE,mBAA8B1lF,OAAAwzB,GAAA,EAAAxzB,GAM9ByZ,KAAAksE,yBAAA,GAMAlsE,KAAAo5D,kBAAA,KAMAp5D,KAAAu+B,MAAmE,GAMnEv+B,KAAA23D,cAAA,EA25BA,OAv5BAL,IAAAgU,EAAAvoE,UAAAu0D,GACAgU,EAAA9kF,UAAAD,OAAAmE,OAAA4sE,KAAA9wE,WACA8kF,EAAA9kF,UAAAwc,YAAAsoE,EAWAA,EAAA9kF,UAAA2lF,sBAAA,SAAA70E,EAAAq8B,EAAAC,EAAAw4C,EAAAC,EAAAC,EAAAC,GACAj1E,EAAAm8B,YACAn8B,EAAAu8B,OAAAlhC,MAAA2E,EAAAq8B,GACAr8B,EAAAw8B,OAAAnhC,MAAA2E,EAAAs8B,GACAt8B,EAAAw8B,OAAAnhC,MAAA2E,EAAA80E,GACA90E,EAAAw8B,OAAAnhC,MAAA2E,EAAA+0E,GACA/0E,EAAAw8B,OAAAnhC,MAAA2E,EAAAq8B,GACA24C,IACAtsE,KAAA2rE,WAA2CW,EAAA,GAC3CtsE,KAAAwsE,MAAAl1E,IAEAi1E,IACAvsE,KAAAysE,gBAAAn1E,EAAwD,GACxDA,EAAA88B,WAwBAk3C,EAAA9kF,UAAAkmF,aAAA,SACAp1E,EACAlJ,EACAC,EACAmL,EACA8d,EACAC,EACAo1D,EACAn0E,EACAe,EACAE,EACAC,EACA/I,EACAkJ,EACA+yE,EACA/0E,EACAe,EACA0zE,EACAC,GAEA,IAAAM,EAAAP,GAAAC,EAGAn+E,GAFAkpB,GAAAzd,EAGAxL,GAFAkpB,GAAA1d,EAIA,IAQA85B,EAEAC,EAEAw4C,EAEAC,EAdA1yE,EAAA9B,EAAA4B,EAAAD,EAAA3B,MAAA2B,EAAA3B,MAAA4B,EAAA5B,EACA+B,EAAApB,EAAAkB,EAAAF,EAAAhB,OAAAgB,EAAAhB,OAAAkB,EAAAlB,EACAs0E,EAAAl0E,EAAA,GAAAe,EAAAE,EAAAjB,EAAA,GACAm0E,EAAAn0E,EAAA,GAAAgB,EAAAC,EAAAjB,EAAA,GACAo0E,EAAA5+E,EAAAwK,EAAA,GACAq0E,EAAA5+E,EAAAuK,EAAA,IAUAi0E,GAAA,IAAAl8E,KACAgjC,EAAA,CAAAq5C,EAAAC,GACAr5C,EAAA,CAAAo5C,EAAAF,EAAAG,GACAb,EAAA,CAAAY,EAAAF,EAAAG,EAAAF,GACAV,EAAA,CAAAW,EAAAC,EAAAF,IAGA,IAAAzzE,EAAA,KACA,OAAA3I,EAAA,CACA,IAAAmhD,EAAA1jD,EAAAkpB,EACAy6B,EAAA1jD,EAAAkpB,EACAje,EAAkB/S,OAAAwzB,GAAA,EAAAxzB,CAAgBuzB,GAAAg4B,EAAAC,EAAA,IAAAphD,GAAAmhD,GAAAC,GAE5BxrD,OAAAqgB,GAAA,EAAArgB,CAAoB6kF,IACpB7kF,OAAAqgB,GAAA,EAAArgB,CAAiB6kF,GAAW7kF,OAAAwzB,GAAA,EAAAxzB,CAAcuzB,GAAA6Z,IAC1CptC,OAAAqgB,GAAA,EAAArgB,CAAiB6kF,GAAW7kF,OAAAwzB,GAAA,EAAAxzB,CAAcuzB,GAAA8Z,IAC1CrtC,OAAAqgB,GAAA,EAAArgB,CAAiB6kF,GAAW7kF,OAAAwzB,GAAA,EAAAxzB,CAAcuzB,GAAAsyD,IAC1C7lF,OAAAqgB,GAAA,EAAArgB,CAAiB6kF,GAAW7kF,OAAAwzB,GAAA,EAAAxzB,CAAcuzB,GAAAuyD,SAE1C9lF,OAAAqgB,GAAA,EAAArgB,CAAcymF,EAAAC,EAAAD,EAAAF,EAAAG,EAAAF,EAAuC3B,IAE3D,IAAAngE,EAAA3T,EAAA2T,OACAiiE,EAAAX,IAAA,GAAA1yE,EAAA,IACAtM,EACQ69E,GAAS,GAAA8B,GAAAjiE,EAAApT,OAAuCuzE,GAAS,GAAA8B,GAAA,GACzD9B,GAAS,GAAA8B,GAAAjiE,EAAAzS,QAAwC4yE,GAAS,GAAA8B,GAAA,EAOlE,GALAN,IACAx+E,EAAAyB,KAAAo6B,MAAA77B,GACAC,EAAAwB,KAAAo6B,MAAA57B,IAGAs+E,EAAA,CACA,IAAAp/E,GAAA,GAAAo/E,EAAA,GACA,OAEMpmF,OAAAqgB,GAAA,EAAArgB,CAAMomF,EAAiBvB,IAC7B,IAAA+B,EAAA5/E,EACA,CAAA+J,EAAAgC,IAAAhO,MAAA,QAAAiO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxL,EAAAC,EAAAwL,GACA,KACAszE,GAAAN,GACAM,EAAA7mF,KAAAgmF,EAAAC,EAAA54C,EAAAC,EAAAw4C,EAAAC,GAEAM,EAAArmF,KAAA6mF,QACK5/E,IACLs/E,GACA7sE,KAAAmsE,sBAAA70E,EAAAq8B,EAAAC,EAAAw4C,EAAAC,EAC8B,EACA,GAExB9lF,OAAAw1E,GAAA,EAAAx1E,CAAS+Q,EAAAgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxL,EAAAC,EAAAwL,KASfyxE,EAAA9kF,UAAA4mF,gBAAA,SAAAC,GACA,IAAA5hD,EAAAzrB,KAAAyrB,WACA,UAAAA,EAAA4hD,IAAAx8D,IAAA,SAAAy8D,GACA,OAAAA,EAAA7hD,KAcA6/C,EAAA9kF,UAAA+mF,sBAAA,SAAA/9E,EAAAC,EAAAC,EAAAC,EAAA69E,EAAAC,GAEA,IAAAC,EAAA1tE,KAAAhS,YAAA5H,OACA6H,EAAA+R,KAAA2tE,uBACAF,IACAh+E,GAAAE,GAEA,IAIAzJ,EAAA0nF,EAAAC,EAJAC,EAAA,CAAAt+E,EAAAC,GAAAD,EAAAC,EAAA,IACAs+E,EAAA,CAAAnzD,SACAozD,GAAA,EAGA,IAAA9nF,EAAAuJ,EAAAE,EAA6BzJ,EAAAwJ,EAASxJ,GAAAyJ,EACtCo+E,EAAA,GAAAv+E,EAAAtJ,GACA6nF,EAAA,GAAAv+E,EAAAtJ,EAAA,IACA2nF,EAAgBtnF,OAAAqgB,GAAA,EAAArgB,CAAsB0H,EAAA8/E,MACtCH,GACAI,IACAhuE,KAAAhS,YAAA0/E,KAAAI,EAAA,GACA9tE,KAAAhS,YAAA0/E,KAAAI,EAAA,IAEA9tE,KAAAhS,YAAA0/E,KAAAK,EAAA,GACA/tE,KAAAhS,YAAA0/E,KAAAK,EAAA,GACAC,GAAA,GACOH,IAAsBI,GAAA,EAAY5+E,cACzC2Q,KAAAhS,YAAA0/E,KAAAK,EAAA,GACA/tE,KAAAhS,YAAA0/E,KAAAK,EAAA,GACAC,GAAA,GAEAA,GAAA,EAEAF,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAH,EAAAC,EAQA,OAJAL,GAAAQ,GAAA9nF,IAAAuJ,EAAAE,KACAqQ,KAAAhS,YAAA0/E,KAAAI,EAAA,GACA9tE,KAAAhS,YAAA0/E,KAAAI,EAAA,IAEAJ,GAWApC,EAAA9kF,UAAA0nF,uBAAA,SAAA1+E,EAAAC,EAAAqvB,EAAAnvB,EAAAw+E,GACA,QAAAjoF,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAqCF,EAAAgI,IAAQhI,EAAA,CAC7C,IAAAwJ,EAAAovB,EAAA54B,GACAkoF,EAAApuE,KAAAutE,sBAAA/9E,EAAAC,EAAAC,EAAAC,GAAA,MACAw+E,EAAA7nF,KAAA8nF,GACA3+E,EAAAC,EAEA,OAAAD,GAMA67E,EAAA9kF,UAAAgvE,WAAA,SAAAvkB,EAAAygB,EAAA+D,GACAz1D,KAAAquE,cAAAp9B,EAAAygB,GACA,IAGAliE,EAAA4+E,EAAAD,EAAAG,EACA7+E,EAJA1G,EAAAkoD,EAAA51B,UACA1rB,EAAAshD,EAAAt0B,YACA4xD,EAAAvuE,KAAAhS,YAAA5H,OAGA,GAAA2C,GAAgB07B,GAAA,EAAY3oB,cAAA,CAE5BtM,GADAyhD,EAAyE,GACzExrB,6BACA6oD,EAAA,GACA,IAAAnvD,EAAA8xB,EAAA+pB,WACAvrE,EAAA,EACA,QAAAvJ,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAwCF,EAAAgI,IAAQhI,EAAA,CAChD,IAAAsoF,EAAA,GACA/+E,EAAAuQ,KAAAkuE,uBAAA1+E,EAAAC,EAAA0vB,EAAAj5B,GAAAyJ,EAAA6+E,GACAF,EAAAhoF,KAAAkoF,GAEAxuE,KAAA+rE,aAAAzlF,KAAA,CAA8BskF,GAAiBb,OAC/CwE,EAAAD,EAAAr9B,EAAAwkB,EAAsDlxC,GAAA,SACjDx7B,GAAkB07B,GAAA,EAAY9oB,SAAA5S,GAAoB07B,GAAA,EAAY5oB,mBACnEsyE,EAAA,GACA3+E,EAAAzG,GAAiC07B,GAAA,EAAY9oB,QACc,EAAA8pB,6BAC3DwrB,EAAA30B,qBACA7sB,EAAAuQ,KAAAkuE,uBAAA1+E,EAAA,EAC2G,EAAAo2B,UAC3Gj2B,EAAAw+E,GACAnuE,KAAA+rE,aAAAzlF,KAAA,CAA8BskF,GAAiBb,OAC/CwE,EAAAJ,EAAAl9B,EAAAwkB,EAAqDlxC,GAAA,KAChDx7B,GAAkB07B,GAAA,EAAYhpB,aAAA1S,GAAwB07B,GAAA,EAAY7oB,aACvEpM,EAAAyhD,EAAA30B,qBACA8xD,EAAApuE,KAAAutE,sBACA/9E,EAAA,EAAAA,EAAApJ,OAAAuJ,GAAA,MACAqQ,KAAA+rE,aAAAzlF,KAAA,CAA8BskF,GAAiBb,OAC/CwE,EAAAH,EAAAn9B,EAAAwkB,EAAoDlxC,GAAA,KAC/Cx7B,GAAkB07B,GAAA,EAAYjpB,QACnChM,EAAAyhD,EAAA30B,qBACAtc,KAAAhS,YAAA1H,KAAAkJ,EAAA,GAAAA,EAAA,IACA4+E,EAAApuE,KAAAhS,YAAA5H,OACA4Z,KAAA+rE,aAAAzlF,KAAA,CAA8BskF,GAAiBb,OAC/CwE,EAAAH,EAAAn9B,EAAAwkB,KAEAz1D,KAAAyuE,YAAAx9B,EAAAygB,IAQA4Z,EAAA9kF,UAAA6nF,cAAA,SAAAp9B,EAAAygB,GACA1xD,KAAA4rE,2BAAA,CAAuChB,GAAiBhB,eAAAlY,EAAA,GACxD1xD,KAAA+rE,aAAAzlF,KAAA0Z,KAAA4rE,4BACA5rE,KAAA6rE,2BAAA,CAAuCjB,GAAiBhB,eAAAlY,EAAA,GACxD1xD,KAAAksE,yBAAA5lF,KAAA0Z,KAAA6rE,6BAMAP,EAAA9kF,UAAAkoF,OAAA,aAMApD,EAAA9kF,UAAAgmF,MAAA,SAAAl1E,GACA,GAAA0I,KAAA2rE,WAAA,CACA,IAAApjD,EAAmBhiC,OAAAwzB,GAAA,EAAAxzB,CAAcyZ,KAAAisE,mBAAA,OACjC0C,EAAA,IAAA3uE,KAAAyrB,WACAn0B,EAAA8B,UAAAmvB,EAAA,GAAAomD,EAAApmD,EAAA,GAAAomD,GACAr3E,EAAA+B,OAAA2G,KAAA23D,eAEArgE,EAAA6iE,OACAn6D,KAAA2rE,YACAr0E,EAAA0C,aAAArH,MAAA2E,EAA0CykE,GAAA,IAS1CuP,EAAA9kF,UAAAimF,gBAAA,SAAAn1E,EAAAs3E,GACAt3E,EAAA28B,YAA4E26C,EAAA,GAC5Et3E,EAAA48B,UAA0C06C,EAAA,GAC1Ct3E,EAAAikE,QAA+CqT,EAAA,GAC/Ct3E,EAAAokE,SAAiDkT,EAAA,GACjDt3E,EAAAqkE,WAA2CiT,EAAA,GACnCn/D,EAAA,IACRnY,EAAAmkE,eAAiDmT,EAAA,GACjDt3E,EAAAoY,YAAmDk/D,EAAA,MAQnDtD,EAAA9kF,UAAAqoF,iBAAA,SAAAlC,EAAAjb,GACA,GAAAib,KAAAvmF,OAAA,GACA,IAAA0oF,EAAAnC,EAAA,GACA,MAAAmC,MAAAnC,EAAAvmF,OAAA,GAEA,IAAA2oF,EAAA,CACApgF,KAAkCg+E,EAAA,GAClC/9E,KAAkC+9E,EAAA,GAClC99E,KAAkC89E,EAAA,GAClC79E,KAAkC69E,EAAA,GAClCtiF,MAAAqnE,GAEA,IAAA1xD,KAAAyrE,cAAA10C,SAAAg4C,GAAA,CACA/uE,KAAAyrE,cAAAx0C,OAAA83C,GACA,QAAA9xE,EAAA,EAAAgiB,EAAA0tD,EAAAvmF,OAAqD6W,EAAAgiB,IAAQhiB,EAAA,CAC7D,IAAA+xE,EAAiDrC,EAAA1vE,GACjD+xE,IACAA,EAAA5oF,OAAA,IACA4Z,KAAAmsE,sBAAA6C,EAAA,GACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAA,EAAA,IAAAA,EAAA,KAEcjT,GAAA,EAASppE,WAAAtJ,EAAA2lF,KAIvBrC,EAAAvmF,OAAA,EACQG,OAAAqgB,GAAA,EAAArgB,CAAmBomF,MAmB3BrB,EAAA9kF,UAAAyoF,QAAA,SACA33E,EACAgC,EACA41E,EACAnD,EACAa,EACAuC,EACAC,GAGA,IAAA7V,EACAv5D,KAAAo5D,mBAAkC7yE,OAAAgyB,EAAA,EAAAhyB,CAAM+S,EAAA0G,KAAAisE,oBACxC1S,EAAAv5D,KAAAo5D,mBAEAp5D,KAAAo5D,oBACAp5D,KAAAo5D,kBAAA,IAEAG,EAAyBhzE,OAAAs1B,GAAA,EAAAt1B,CACzByZ,KAAAhS,YAAA,EAAAgS,KAAAhS,YAAA5H,OAAA,EACAkT,EAAA0G,KAAAo5D,mBACM7yE,OAAAwzB,GAAA,EAAAxzB,CAAqByZ,KAAAisE,mBAAA3yE,IA2B3B,IAzBA,IAIA+1E,EACA/3D,EAAAC,EAAA+3D,EAAAC,EAAAC,EAAAC,EAAA9C,EAAAnzE,EAkBsFk4D,EACtFtjE,EAAAC,EAxBAqhF,GAAwBnpF,OAAAwO,GAAA,EAAAxO,CAAO2oF,GAC/BhpF,EAAA,EACAgI,EAAA69E,EAAA3lF,OACAuD,EAAA,EAGAgmF,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAA/vE,KAAAgsE,iBACAxU,EAAAx3D,KAAA23D,cAEAp5B,EAA2D,CAC3DjnC,UACAm0B,WAAAzrB,KAAAyrB,WACA/6B,WAAAsP,KAAAtP,WACAC,SAAA6mE,GAKAwY,EAAAhwE,KAAA+rE,iBAAA/rE,KAAAwrE,SAAA,MAGAtlF,EAAAgI,GAAA,CACA,IAAA0gF,EAAA7C,EAAA7lF,GAEA,OAD8C0oF,EAAA,IAE9C,KAAahE,GAAiBhB,eAC9BlY,EAAkGkd,EAAA,GAClGc,GAAAR,EAAmD3oF,OAAA+zB,EAAA,EAAA/zB,CAAMmrE,QAAAl2B,cACzDt1C,EAAkC0oF,EAAA,QACvBvlF,IAAA+lF,GAA0C7oF,OAAAqgB,GAAA,EAAArgB,CACrD6oF,EAAA1d,EAAAl2B,cAAAr6B,eAGAjb,EAFAA,EAAkC0oF,EAAA,KAIlC,MACA,KAAahE,GAAiBf,WAC9B8F,EAAAK,IACAhwE,KAAAwsE,MAAAl1E,GACAq4E,EAAA,GAEAC,EAAAI,IACA14E,EAAA88B,SACAw7C,EAAA,GAEAD,GAAAC,IACAt4E,EAAAm8B,YACA67C,EAAAC,EAAA30D,OAEA10B,EACA,MACA,KAAa0kF,GAAiB5uE,OAE9B,IAAA1K,EAAAioE,EADA5vE,EAAgCilF,EAAA,IAEhCl9E,EAAA6nE,EAAA5vE,EAAA,GAGA2E,EAFAirE,EAAA5vE,EAAA,GAEA2H,EACA/C,EAFAgrE,EAAA5vE,EAAA,GAEA+H,EACAxH,EAAA2F,KAAA4zB,KAAAn1B,IAAAC,KACA+I,EAAAu8B,OAAAviC,EAAApH,EAAAwH,GACA4F,EAAA4iE,IAAA5oE,EAAAI,EAAAxH,EAAA,IAAA2F,KAAAyN,IAAA,KACApX,EACA,MACA,KAAa0kF,GAAiBd,WAC9BxyE,EAAA68B,cACAjuC,EACA,MACA,KAAa0kF,GAAiBb,OAC9BpgF,EAAgCilF,EAAA,GAChCS,EAAAT,EAAA,GACA,IAAA39B,EAAmF29B,EAAA,GACnFnZ,EAAAmZ,EAAA,GACAqB,EAAA,GAAArB,EAAAxoF,OAAAwoF,EAAA,QAAAvlF,EACAk1C,EAAA0S,WACA1S,EAAAmzB,UACAxrE,KAAA6pF,IACAA,EAAA7pF,GAAA,IAEA,IAAAgrD,EAAA6+B,EAAA7pF,GACA+pF,EACAA,EAAA1W,EAAA5vE,EAAA0lF,EAAA,EAAAn+B,IAEAA,EAAA,GAAAqoB,EAAA5vE,GACAunD,EAAA,GAAAqoB,EAAA5vE,EAAA,GACAunD,EAAA9qD,OAAA,GAEAqvE,EAAAvkB,EAAA3S,KACAr4C,EACA,MACA,KAAa0kF,GAAiBX,WAC9BtgF,EAAgCilF,EAAA,GAChCS,EAAiCT,EAAA,GACjCp1E,EACAo1E,EAAA,GAEAt3D,EAAsCs3D,EAAA,GACtCr3D,EAAsCq3D,EAAA,GACtCjC,EAAAwC,EAAA,KAAqGP,EAAA,GACrG,IAAAp2E,EAAyCo2E,EAAA,GACzCr1E,EAA0Cq1E,EAAA,GAC1Cn1E,EAA0Cm1E,EAAA,GAC1Cl1E,EAA0Ck1E,EAAA,IAC1CsB,EAAkDtB,EAAA,IAClDj+E,EAA2Ci+E,EAAA,IAC3C/0E,EAAwC+0E,EAAA,IACxC/2E,EAAwC+2E,EAAA,IAExCh2E,OAAA,EAAAu3E,OAAA,EAAAC,QAAA,EAaA,IAZAxB,EAAAxoF,OAAA,IACAwS,EAA+Cg2E,EAAA,IAC/CuB,EAAgDvB,EAAA,IAChDwB,GAAkDxB,EAAA,MAElDh2E,EAAsBmjE,GAAA,EACtBoU,EAAAC,IAAA,GAGAF,IACAv/E,GAAA6mE,GAEgB7tE,EAAA0lF,EAAQ1lF,GAAA,EACxBqW,KAAA0sE,aAAAp1E,EACAiiE,EAAA5vE,GAAA4vE,EAAA5vE,EAAA,GAAA6P,EAAA8d,EAAAC,EACAo1D,EAAAn0E,EAAAe,EAAAE,EAAAC,EAAA/I,EAAAkJ,EACA+yE,EAAA/0E,EAAAe,EACAu3E,EAAmD,OACnDC,GAAqD,QAErDpwE,KAAA6uE,iBAAAlC,EAAAjb,KACAxrE,EACA,MACA,KAAa0kF,GAAiBZ,WAC9B,IAAAniE,GAAwC+mE,EAAA,GACxCl/E,GAAsCk/E,EAAA,GACtCyB,GAA2CzB,EAAA,GAC3CjC,EAAAwC,EAAA,KAAqGP,EAAA,GACrG,IAAA/f,GAA2C+f,EAAA,GAC3C0B,GAA0C1B,EAAA,GAC1C9F,GAA2C8F,EAAA,GAC3ChG,GAA2DgG,EAAA,GAC3Dz1E,GAA0Cy1E,EAAA,GAC1C2B,GAA4C3B,EAAA,IAC5C4B,GAA8C5B,EAAA,IAC9Cz3E,GAAuCy3E,EAAA,IACvC6B,GAA0C7B,EAAA,IAC1CnQ,GAA4CmQ,EAAA,IAE5C8B,GAA2BnqF,OAAAoqF,GAAA,EAAApqF,CAAgBgzE,EAAA1xD,GAAAnY,GAAA,GAC3CkhF,GAAAhI,GAAAzxE,IACA,GAAA03D,IAAA+hB,IAAAF,GAAA,CAEA,IACA5U,GAD0C,KAC1C+U,WAAAJ,IAAA3U,UAEAgV,GAAwBnI,GACxBpP,EAAA1xD,GAAAnY,GAAA,EAAAyH,GAAAyxE,IAFA8H,GAAAE,IAAqD9F,GAAUhP,IAE/DgN,IACA,GAAAgI,GAAA,CACA,IAAApnF,QAAA,EAAAqnF,QAAA,EAAAC,QAAA,EAAAC,QAAA,EAAAC,QAAA,EACA,GAAAX,GACA,IAAA7mF,GAAA,EAAAqnF,GAAAD,GAAA1qF,OAA8CsD,GAAAqnF,KAAQrnF,GAEtDsnF,IADAE,GAAAJ,GAAApnF,KAC4C,GAC5CunF,GAX0C,KAW1CzwC,SAAAwwC,GAAAP,GAAA,GAAAF,IACAj5D,EAA8C45D,GAAA,GAAAV,GAC9Cj5D,EAAA84D,GAAAY,GAAAz4E,OAAA,MAAA63E,IAAAG,GAAAr3E,GACA6G,KAAA0sE,aAAAp1E,EACsC45E,GAAA,GAAiCA,GAAA,GAAAD,GACvE35D,EAAAC,EAAAo1D,EAAAsE,GAAAz4E,OAAA,MACsC04E,GAAA,GAAAzS,IAAA,EAAAwS,GAAAp5E,MAClBkkE,GAAA,EAAc,WAGlC,GAAAuU,GACA,IAAA5mF,GAAA,EAAAqnF,GAAAD,GAAA1qF,OAA8CsD,GAAAqnF,KAAQrnF,GAEtDsnF,IADAE,GAAAJ,GAAApnF,KAC4C,GAC5CunF,GAzB0C,KAyB1CzwC,SAAAwwC,GAAAP,GAAAH,GAAA,IACAh5D,EAA8C45D,GAAA,GAC9C35D,EAAA84D,GAAAY,GAAAz4E,OAAAW,GACA6G,KAAA0sE,aAAAp1E,EACsC45E,GAAA,GAAiCA,GAAA,GAAAD,GACvE35D,EAAAC,EAAAo1D,EAAAsE,GAAAz4E,OAAA,MACsC04E,GAAA,GAAAzS,IAAA,EAAAwS,GAAAp5E,MAClBkkE,GAAA,EAAc,YAKlC/7D,KAAA6uE,iBAAAlC,EAAAjb,KACAxrE,EACA,MACA,KAAa0kF,GAAiBV,aAC9B,QAAA7gF,IAAA8lF,EAAA,CAEA,IAAAv4C,GAAAu4C,EADAzd,EAAoGkd,EAAA,IAEpG,GAAAh4C,GACA,OAAAA,KAGA1wC,EACA,MACA,KAAa0kF,GAAiBT,KAC9B6F,EACAL,IAEA3vE,KAAAwsE,MAAAl1E,KAEApR,EACA,MACA,KAAa0kF,GAAiBR,gBAY9B,IAXAzgF,EAAgCilF,EAAA,GAChCS,EAAiCT,EAAA,GACjCxgF,EAAAmrE,EAAA5vE,GAGA8lF,GAFAphF,EAAAkrE,EAAA5vE,EAAA,IAEA,MADA6lF,EAAAphF,EAAA,QAEAkhF,GAAAG,IAAAF,IACAj4E,EAAAu8B,OAAAzlC,EAAAC,GACAihF,EAAAE,EACAD,EAAAE,GAEA9lF,GAAA,EAAsBA,EAAA0lF,EAAQ1lF,GAAA,EAG9B6lF,GAFAphF,EAAAmrE,EAAA5vE,IAEA,KACA8lF,GAFAphF,EAAAkrE,EAAA5vE,EAAA,IAEA,KACAA,GAAA0lF,EAAA,GAAAG,IAAAF,GAAAG,IAAAF,IACAj4E,EAAAw8B,OAAA1lC,EAAAC,GACAihF,EAAAE,EACAD,EAAAE,KAGAvpF,EACA,MACA,KAAa0kF,GAAiBP,eAC9BwF,EAAAjB,EACA5uE,KAAA2rE,WAAAiD,EAAA,GAEAe,IACA3vE,KAAAwsE,MAAAl1E,GACAq4E,EAAA,EACAC,IACAt4E,EAAA88B,SACAw7C,EAAA,IAIAt4E,EAAAssC,UAAgFgrC,EAAA,KAChF1oF,EACA,MACA,KAAa0kF,GAAiBN,iBAC9BwF,EAAAlB,EACAgB,IACAt4E,EAAA88B,SACAw7C,EAAA,GAEA5vE,KAAAysE,gBAAAn1E,EAA4D,KAC5DpR,EACA,MACA,KAAa0kF,GAAiBL,OAC9ByF,EACAJ,IAEAt4E,EAAA88B,WAEAluC,EACA,MACA,UACAA,GAIAypF,GACA3vE,KAAAwsE,MAAAl1E,GAEAs4E,GACAt4E,EAAA88B,UAaAk3C,EAAA9kF,UAAA2qF,OAAA,SAAA75E,EAAAgC,EAAAk+D,EAAA0X,EAAAtC,GACA5sE,KAAA23D,cAAAH,EACAx3D,KAAAivE,QAAA33E,EAAAgC,EACA41E,EAAAlvE,KAAA+rE,aAAAa,OAAAvjF,WAgBAiiF,EAAA9kF,UAAA4qF,mBAAA,SACA95E,EACAgC,EACAk+D,EACA0X,EACAmC,EACAjC,GAGA,OADApvE,KAAA23D,cAAAH,EACAx3D,KAAAivE,QAAA33E,EAAAgC,EAAA41E,EACAlvE,KAAAksE,0BAAA,EAAAmF,EAAAjC,IAMA9D,EAAA9kF,UAAA8qF,gCAAA,WACA,IAIAprF,EAJAgmF,EAAAlsE,KAAAksE,yBAEAA,EAAAlD,UAGA,IACA4F,EACA7lF,EAFA8B,EAAAqhF,EAAA9lF,OAGAyhB,GAAA,EACA,IAAA3hB,EAAA,EAAeA,EAAA2E,IAAO3E,GAEtB6C,GADA6lF,EAAA1C,EAAAhmF,IAC0C,KACxB0kF,GAAiBV,aACnCriE,EAAA3hB,EACO6C,GAAkB6hF,GAAiBhB,iBAC1CgF,EAAA,GAAA1oF,EACQK,OAAAgyB,EAAA,EAAAhyB,CAAeyZ,KAAAksE,yBAAArkE,EAAA3hB,GACvB2hB,GAAA,IAQAyjE,EAAA9kF,UAAAswE,mBAAA,SAAAlzB,EAAA3P,GACA,IAAAsK,EAAAv+B,KAAAu+B,MACA,GAAAqF,EAAA,CACA,IAAAq4B,EAAAr4B,EAAAs4B,WACA39B,EAAAqF,UAAwBr9C,OAAA41E,GAAA,EAAA51E,CAAW01E,GACVF,GAAA,QAEzBx9B,EAAAqF,eAAAv6C,EAEA,GAAA4qC,EAAA,CACA,IAAAmoC,EAAAnoC,EAAAioC,WACA39B,EAAAtK,YAA0B1tC,OAAA41E,GAAA,EAAA51E,CAAW61E,GACVL,GAAA,GAC3B,IAAAM,EAAApoC,EAAAqoC,aACA/9B,EAAAg9B,aAAAlyE,IAAAgzE,EACAA,EAA6BN,GAAA,EAC7B,IAAAQ,EAAAtoC,EAAAuoC,cACAj+B,EAAAi9B,SAAAe,EACAA,EAAAjxE,QAAsCywE,GAAA,EACtC,IAAAU,EAAAxoC,EAAAyoC,oBACAn+B,EAAAk9B,eAAAgB,GACoCV,GAAA,EACpC,IAAAY,EAAA1oC,EAAA2oC,cACAr+B,EAAAm9B,cAAAryE,IAAAszE,EACAA,EAA8BZ,GAAA,EAC9B,IAAAc,EAAA5oC,EAAA3mC,WACAixC,EAAArK,eAAA7qC,IAAAwzE,EACAA,EAA2Bd,GAAA,EAC3B,IAAAe,EAAA7oC,EAAA8oC,gBACAx+B,EAAAo9B,gBAAAtyE,IAAAyzE,EACAA,EAAgCf,GAAA,EAEhCx9B,EAAArK,UAAAl0B,KAAA0rE,eACA1rE,KAAA0rE,aAAAntC,EAAArK,UAEAl0B,KAAA8rE,mBAAA,WAGAvtC,EAAAtK,iBAAA5qC,EACAk1C,EAAAg9B,aAAAlyE,EACAk1C,EAAAi9B,SAAA,KACAj9B,EAAAk9B,oBAAApyE,EACAk1C,EAAAm9B,cAAAryE,EACAk1C,EAAArK,eAAA7qC,EACAk1C,EAAAo9B,gBAAAtyE,GASAiiF,EAAA9kF,UAAA+qF,WAAA,SAAAhzC,EAAA0S,GACA,IAAArN,EAAArF,EAAAqF,UAEA0oC,EAAA,CAA2B1B,GAAiBP,eAAAzmC,GAK5C,MAJA,iBAAAA,GAEA0oC,EAAAhmF,MAAA,GAEAgmF,GAMAhB,EAAA9kF,UAAAgrF,YAAA,SAAAjzC,GACAv+B,KAAA+rE,aAAAzlF,KAAA0Z,KAAAyxE,aAAAlzC,KAOA+sC,EAAA9kF,UAAAirF,aAAA,SAAAlzC,GACA,OACMqsC,GAAiBN,iBACvB/rC,EAAAtK,YAAAsK,EAAArK,UAAAl0B,KAAAyrB,WAAA8S,EAAAg9B,QACAh9B,EAAAm9B,SAAAn9B,EAAAo9B,WACA37D,KAAAotE,gBAAA7uC,EAAAi9B,UAAAj9B,EAAAk9B,eAAAz7D,KAAAyrB,aASA6/C,EAAA9kF,UAAAkrF,gBAAA,SAAAnzC,EAAAgzC,EAAAtgC,GACA,IAAArN,EAAArF,EAAAqF,UACA,iBAAAA,GAAArF,EAAAozC,kBAAA/tC,SACAv6C,IAAAu6C,GACA5jC,KAAA+rE,aAAAzlF,KAAAirF,EAAA7qF,KAAAsZ,KAAAu+B,EAAA0S,IAEA1S,EAAAozC,iBAAA/tC,IAQA0nC,EAAA9kF,UAAAorF,kBAAA,SAAArzC,EAAAizC,GACA,IAAAv9C,EAAAsK,EAAAtK,YACAsnC,EAAAh9B,EAAAg9B,QACAC,EAAAj9B,EAAAi9B,SACAC,EAAAl9B,EAAAk9B,eACAC,EAAAn9B,EAAAm9B,SACAxnC,EAAAqK,EAAArK,UACAynC,EAAAp9B,EAAAo9B,YACAp9B,EAAAszC,oBAAA59C,GACAsK,EAAAuzC,gBAAAvW,GACAC,GAAAj9B,EAAAwzC,kBAA+CxrF,OAAAgyB,EAAA,EAAAhyB,CAAMg4C,EAAAwzC,gBAAAvW,IACrDj9B,EAAAyzC,uBAAAvW,GACAl9B,EAAA0zC,iBAAAvW,GACAn9B,EAAA2zC,kBAAAh+C,GACAqK,EAAA4zC,mBAAAxW,UACAtyE,IAAA4qC,GACAu9C,EAAA9qF,KAAAsZ,KAAAu+B,GAEAA,EAAAszC,mBAAA59C,EACAsK,EAAAuzC,eAAAvW,EACAh9B,EAAAwzC,gBAAAvW,EACAj9B,EAAAyzC,sBAAAvW,EACAl9B,EAAA0zC,gBAAAvW,EACAn9B,EAAA2zC,iBAAAh+C,EACAqK,EAAA4zC,kBAAAxW,IAQA2P,EAAA9kF,UAAAioF,YAAA,SAAAx9B,EAAAygB,GACA1xD,KAAA4rE,2BAAA,GAAA5rE,KAAA+rE,aAAA3lF,OACA4Z,KAAA4rE,2BAAA,KACA5rE,KAAA6rE,2BAAA,GAAA7rE,KAAAksE,yBAAA9lF,OACA4Z,KAAA6rE,2BAAA,KACA,IAAAuG,EAAA,CAAkCxH,GAAiBV,aAAAxY,GACnD1xD,KAAA+rE,aAAAzlF,KAAA8rF,GACApyE,KAAAksE,yBAAA5lF,KAAA8rF,IAUA9G,EAAA9kF,UAAAmnF,qBAAA,WACA,IAAA3tE,KAAA8rE,qBACA9rE,KAAA8rE,mBAAgCvlF,OAAAqgB,GAAA,EAAArgB,CAAKyZ,KAAAurE,WACrCvrE,KAAA0rE,aAAA,IACA,IAAA7zE,EAAAmI,KAAAtP,YAAAsP,KAAA0rE,aAAA,KACQnlF,OAAAqgB,GAAA,EAAArgB,CAAMyZ,KAAA8rE,mBAAAj0E,EAAAmI,KAAA8rE,oBAGd,OAAA9rE,KAAA8rE,oBAGAR,EAhhCgB,CAihCdlU,ICt2Baib,GA/MM,SAAA/G,GACrB,SAAAgH,EAAAp3D,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GACAH,EAAA5kF,KAAAsZ,KAAAkb,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GAMAzrE,KAAAuyE,gBAAA,KAMAvyE,KAAAwyE,mBAAA,KAMAxyE,KAAAkkC,OAAA,KAMAlkC,KAAAyyE,cAAAppF,EAMA2W,KAAA0yE,cAAArpF,EAMA2W,KAAA2yE,aAAAtpF,EAMA2W,KAAA4yE,cAAAvpF,EAMA2W,KAAA6yE,cAAAxpF,EAMA2W,KAAA8yE,cAAAzpF,EAMA2W,KAAA+yE,qBAAA1pF,EAMA2W,KAAAgzE,eAAA3pF,EAMA2W,KAAAizE,YAAA5pF,EAMA2W,KAAAkzE,YAAA7pF,EA2HA,OAvHAiiF,IAAAgH,EAAAvvE,UAAAuoE,GACAgH,EAAA9rF,UAAAD,OAAAmE,OAAA4gF,KAAA9kF,WACA8rF,EAAA9rF,UAAAwc,YAAAsvE,EAUAA,EAAA9rF,UAAA2sF,iBAAA,SAAA3jF,EAAAC,EAAAC,EAAAC,GACA,OAAAqQ,KAAAutE,sBAAA/9E,EAAAC,EAAAC,EAAAC,GAAA,OAMA2iF,EAAA9rF,UAAAiwE,UAAA,SAAAC,EAAAhF,GACA,GAAA1xD,KAAAkkC,OAAA,CAGAlkC,KAAAquE,cAAA3X,EAAAhF,GACA,IAAAliE,EAAAknE,EAAAp6C,qBACA3sB,EAAA+mE,EAAA/5C,YACAy2D,EAAApzE,KAAAhS,YAAA5H,OACAsnF,EAAA1tE,KAAAmzE,iBAAA3jF,EAAA,EAAAA,EAAApJ,OAAAuJ,GACAqQ,KAAA+rE,aAAAzlF,KAAA,CACMskF,GAAiBX,WAAAmJ,EAAA1F,EAAA1tE,KAAAkkC,OAEvBlkC,KAAAyyE,SAAAzyE,KAAA0yE,SAAA1yE,KAAAuyE,gBAAAvyE,KAAA2yE,QAAA3yE,KAAA4yE,SACA5yE,KAAA6yE,SAAA7yE,KAAA8yE,SAAA9yE,KAAA+yE,gBAAA/yE,KAAAgzE,UACAhzE,KAAAizE,OAAAjzE,KAAAyrB,WAAAzrB,KAAAkzE,SAEAlzE,KAAAksE,yBAAA5lF,KAAA,CACMskF,GAAiBX,WAAAmJ,EAAA1F,EAAA1tE,KAAAwyE,mBAEvBxyE,KAAAyyE,SAAAzyE,KAAA0yE,SAAA1yE,KAAAuyE,gBAAAvyE,KAAA2yE,QAAA3yE,KAAA4yE,SACA5yE,KAAA6yE,SAAA7yE,KAAA8yE,SAAA9yE,KAAA+yE,gBAAA/yE,KAAAgzE,UACAhzE,KAAAizE,OAAAjzE,KAAAkzE,SAEAlzE,KAAAyuE,YAAA/X,EAAAhF,KAMA4gB,EAAA9rF,UAAA6vE,eAAA,SAAAC,EAAA5E,GACA,GAAA1xD,KAAAkkC,OAAA,CAGAlkC,KAAAquE,cAAA/X,EAAA5E,GACA,IAAAliE,EAAA8mE,EAAAh6C,qBACA3sB,EAAA2mE,EAAA35C,YACAy2D,EAAApzE,KAAAhS,YAAA5H,OACAsnF,EAAA1tE,KAAAmzE,iBACA3jF,EAAA,EAAAA,EAAApJ,OAAAuJ,GACAqQ,KAAA+rE,aAAAzlF,KAAA,CACMskF,GAAiBX,WAAAmJ,EAAA1F,EAAA1tE,KAAAkkC,OAEvBlkC,KAAAyyE,SAAAzyE,KAAA0yE,SAAA1yE,KAAAuyE,gBAAAvyE,KAAA2yE,QAAA3yE,KAAA4yE,SACA5yE,KAAA6yE,SAAA7yE,KAAA8yE,SAAA9yE,KAAA+yE,gBAAA/yE,KAAAgzE,UACAhzE,KAAAizE,OAAAjzE,KAAAyrB,WAAAzrB,KAAAkzE,SAEAlzE,KAAAksE,yBAAA5lF,KAAA,CACMskF,GAAiBX,WAAAmJ,EAAA1F,EAAA1tE,KAAAwyE,mBAEvBxyE,KAAAyyE,SAAAzyE,KAAA0yE,SAAA1yE,KAAAuyE,gBAAAvyE,KAAA2yE,QAAA3yE,KAAA4yE,SACA5yE,KAAA6yE,SAAA7yE,KAAA8yE,SAAA9yE,KAAA+yE,gBAAA/yE,KAAAgzE,UACAhzE,KAAAizE,OAAAjzE,KAAAkzE,SAEAlzE,KAAAyuE,YAAAnY,EAAA5E,KAMA4gB,EAAA9rF,UAAAkoF,OAAA,WACA1uE,KAAAsxE,kCAEAtxE,KAAAyyE,cAAAppF,EACA2W,KAAA0yE,cAAArpF,EACA2W,KAAAwyE,mBAAA,KACAxyE,KAAAkkC,OAAA,KACAlkC,KAAA2yE,aAAAtpF,EACA2W,KAAAizE,YAAA5pF,EACA2W,KAAA4yE,cAAAvpF,EACA2W,KAAA6yE,cAAAxpF,EACA2W,KAAA8yE,cAAAzpF,EACA2W,KAAA+yE,qBAAA1pF,EACA2W,KAAAgzE,eAAA3pF,EACA2W,KAAAkzE,YAAA7pF,GAMAipF,EAAA9rF,UAAAuwE,cAAA,SAAAC,EAAA2V,GACA,IAAAh7D,EAAAqlD,EAAAiG,YACArsE,EAAAomE,EAAApnC,UACAyjD,EAAArc,EAAAsc,qBAAA,GACA95E,EAAAw9D,EAAAx2B,SAAA,GACAjY,EAAAyuC,EAAAvjB,YACAzzC,KAAAyyE,SAAA9gE,EAAA,GACA3R,KAAA0yE,SAAA/gE,EAAA,GACA3R,KAAAuyE,gBAA4E,EAC5EvyE,KAAAwyE,mBAAAa,EACArzE,KAAAkkC,OAAA1qC,EACAwG,KAAA2yE,QAAA/hF,EAAA,GACAoP,KAAA4yE,SAAA5b,EAAAv4B,aACAz+B,KAAA6yE,SAAAtqD,EAAA,GACAvoB,KAAA8yE,SAAAvqD,EAAA,GACAvoB,KAAA+yE,gBAAA/b,EAAAqG,oBACAr9D,KAAAgzE,UAAAhc,EAAAtlD,cACA1R,KAAAizE,OAAAjc,EAAAsG,WACAt9D,KAAAkzE,OAAAtiF,EAAA,IAGA0hF,EA3MqB,CA4MnBjH,IChGakI,GA5GW,SAAAjI,GAC1B,SAAAkI,EAAAt4D,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GACAH,EAAA5kF,KAAAsZ,KAAAkb,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GAsGA,OAnGAH,IAAAkI,EAAAzwE,UAAAuoE,GACAkI,EAAAhtF,UAAAD,OAAAmE,OAAA4gF,KAAA9kF,WACAgtF,EAAAhtF,UAAAwc,YAAAwwE,EAUAA,EAAAhtF,UAAAitF,qBAAA,SAAAjkF,EAAAC,EAAAC,EAAAC,GACA,IAAAyjF,EAAApzE,KAAAhS,YAAA5H,OACAsnF,EAAA1tE,KAAAutE,sBACA/9E,EAAAC,EAAAC,EAAAC,GAAA,MACA+jF,EAAA,CAAmC9I,GAAiBR,gBAAAgJ,EAAA1F,GAGpD,OAFA1tE,KAAA+rE,aAAAzlF,KAAAotF,GACA1zE,KAAAksE,yBAAA5lF,KAAAotF,GACAhkF,GAMA8jF,EAAAhtF,UAAAyvE,eAAA,SAAAC,EAAAxE,GACA,IAAAnzB,EAAAv+B,KAAAu+B,MACAtK,EAAAsK,EAAAtK,YACAC,EAAAqK,EAAArK,UACA,QAAA7qC,IAAA4qC,QAAA5qC,IAAA6qC,EAAA,CAGAl0B,KAAA4xE,kBAAArzC,EAAAv+B,KAAAwxE,aACAxxE,KAAAquE,cAAAnY,EAAAxE,GACA1xD,KAAAksE,yBAAA5lF,KAAA,CACMskF,GAAiBN,iBACvB/rC,EAAAtK,YAAAsK,EAAArK,UAAAqK,EAAAg9B,QAAAh9B,EAAAm9B,SACAn9B,EAAAo9B,WAAAp9B,EAAAi9B,SAAAj9B,EAAAk9B,gBACOiP,IACP,IAAAl7E,EAAA0mE,EAAA55C,qBACA3sB,EAAAumE,EAAAv5C,YACA3c,KAAAyzE,qBAAAjkF,EAAA,EAAAA,EAAApJ,OAAAuJ,GACAqQ,KAAAksE,yBAAA5lF,KAAuCmkF,IACvCzqE,KAAAyuE,YAAAvY,EAAAxE,KAMA8hB,EAAAhtF,UAAA2vE,oBAAA,SAAAC,EAAA1E,GACA,IAAAnzB,EAAAv+B,KAAAu+B,MACAtK,EAAAsK,EAAAtK,YACAC,EAAAqK,EAAArK,UACA,QAAA7qC,IAAA4qC,QAAA5qC,IAAA6qC,EAAA,CAGAl0B,KAAA4xE,kBAAArzC,EAAAv+B,KAAAwxE,aACAxxE,KAAAquE,cAAAjY,EAAA1E,GACA1xD,KAAAksE,yBAAA5lF,KAAA,CACMskF,GAAiBN,iBACvB/rC,EAAAtK,YAAAsK,EAAArK,UAAAqK,EAAAg9B,QAAAh9B,EAAAm9B,SACAn9B,EAAAo9B,WAAAp9B,EAAAi9B,SAAAj9B,EAAAk9B,gBACOiP,IAKP,IAJA,IAAA5rD,EAAAs3C,EAAAxwC,UACAp2B,EAAA4mE,EAAA95C,qBACA3sB,EAAAymE,EAAAz5C,YACAltB,EAAA,EACAvJ,EAAA,EAAAgI,EAAA4wB,EAAA14B,OAAqCF,EAAAgI,IAAQhI,EAC7CuJ,EAAAuQ,KAAAyzE,qBAAAjkF,EAAAC,EAAAqvB,EAAA54B,GAAAyJ,GAEAqQ,KAAAksE,yBAAA5lF,KAAuCmkF,IACvCzqE,KAAAyuE,YAAArY,EAAA1E,KAMA8hB,EAAAhtF,UAAAkoF,OAAA,WACA,IAAAnwC,EAAAv+B,KAAAu+B,MACAl1C,MAAAk1C,EAAAo1C,YAAAp1C,EAAAo1C,YAAA3zE,KAAAhS,YAAA5H,QACA4Z,KAAA+rE,aAAAzlF,KAA6BmkF,IAE7BzqE,KAAAsxE,kCACAtxE,KAAAu+B,MAAA,MAMAi1C,EAAAhtF,UAAAgrF,YAAA,SAAAjzC,GACAl1C,MAAAk1C,EAAAo1C,YAAAp1C,EAAAo1C,YAAA3zE,KAAAhS,YAAA5H,SACA4Z,KAAA+rE,aAAAzlF,KAA6BmkF,IAC7BlsC,EAAAo1C,WAAA3zE,KAAAhS,YAAA5H,QAEAm4C,EAAAo1C,WAAA,EACArI,EAAA9kF,UAAAgrF,YAAA9qF,KAAAsZ,KAAAu+B,GACAv+B,KAAA+rE,aAAAzlF,KAA2BokF,KAG3B8I,EAxG0B,CAyGxBnI,aCnGEuI,GAAmB,SAAAtI,GACvB,SAAAuI,EAAA34D,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GACAH,EAAA5kF,KAAAsZ,KAAAkb,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GAiMA,OA9LAH,IAAAuI,EAAA9wE,UAAAuoE,GACAuI,EAAArtF,UAAAD,OAAAmE,OAAA4gF,KAAA9kF,WACAqtF,EAAArtF,UAAAwc,YAAA6wE,EAUAA,EAAArtF,UAAAstF,sBAAA,SAAAtkF,EAAAC,EAAAqvB,EAAAnvB,GACA,IAAA4uC,EAAAv+B,KAAAu+B,MACA47B,OAAA9wE,IAAAk1C,EAAAqF,UACAxP,EAAA/qC,MAAAk1C,EAAAtK,YACA8/C,EAAAj1D,EAAA14B,OACA4Z,KAAA+rE,aAAAzlF,KAA2BokF,IAC3B1qE,KAAAksE,yBAAA5lF,KAAuCokF,IACvC,QAAAxkF,EAAA,EAAmBA,EAAA6tF,IAAa7tF,EAAA,CAChC,IAAAwJ,EAAAovB,EAAA54B,GACAktF,EAAApzE,KAAAhS,YAAA5H,OACAsnF,EAAA1tE,KAAAutE,sBAAA/9E,EAAAC,EAAAC,EAAAC,GAAA,GAAAykC,GACAs/C,EAAA,CAAqC9I,GAAiBR,gBAAAgJ,EAAA1F,GACtD1tE,KAAA+rE,aAAAzlF,KAAAotF,GACA1zE,KAAAksE,yBAAA5lF,KAAAotF,GACAt/C,IAGAp0B,KAAA+rE,aAAAzlF,KAA+BqkF,IAC/B3qE,KAAAksE,yBAAA5lF,KAA2CqkF,KAE3Cl7E,EAAAC,EAUA,OARAyqE,IACAn6D,KAAA+rE,aAAAzlF,KAA6BkkF,IAC7BxqE,KAAAksE,yBAAA5lF,KAAyCkkF,KAEzCp2C,IACAp0B,KAAA+rE,aAAAzlF,KAA6BmkF,IAC7BzqE,KAAAksE,yBAAA5lF,KAAyCmkF,KAEzCh7E,GAMAokF,EAAArtF,UAAAovE,WAAA,SAAAC,EAAAnE,GACA,IAAAnzB,EAAAv+B,KAAAu+B,MACAqF,EAAArF,EAAAqF,UACA3P,EAAAsK,EAAAtK,YACA,QAAA5qC,IAAAu6C,QAAAv6C,IAAA4qC,EAAA,CAGAj0B,KAAAg0E,qBAAAne,GACA71D,KAAAquE,cAAAxY,EAAAnE,QACAroE,IAAAk1C,EAAAqF,WACA5jC,KAAAksE,yBAAA5lF,KAAA,CACQskF,GAAiBP,eACjB9jF,OAAA44E,GAAA,EAAA54E,CAASw1E,GAAA,UAGjB1yE,IAAAk1C,EAAAtK,aACAj0B,KAAAksE,yBAAA5lF,KAAA,CACQskF,GAAiBN,iBACzB/rC,EAAAtK,YAAAsK,EAAArK,UAAAqK,EAAAg9B,QAAAh9B,EAAAm9B,SACAn9B,EAAAo9B,WAAAp9B,EAAAi9B,SAAAj9B,EAAAk9B,iBAGA,IAAAjsE,EAAAqmE,EAAAv5C,qBACA3sB,EAAAkmE,EAAAl5C,YACAy2D,EAAApzE,KAAAhS,YAAA5H,OACA4Z,KAAAutE,sBACA/9E,EAAA,EAAAA,EAAApJ,OAAAuJ,GAAA,MACA,IAAAskF,EAAA,CAA6BrJ,GAAiB5uE,OAAAo3E,GAC9CpzE,KAAA+rE,aAAAzlF,KAA2BokF,GAAoBuJ,GAC/Cj0E,KAAAksE,yBAAA5lF,KAAuCokF,GAAoBuJ,GAC3Dj0E,KAAAksE,yBAAA5lF,KAAuCkkF,SACvCnhF,IAAAk1C,EAAAqF,WACA5jC,KAAA+rE,aAAAzlF,KAA6BkkF,SAE7BnhF,IAAAk1C,EAAAtK,cACAj0B,KAAA+rE,aAAAzlF,KAA6BmkF,IAC7BzqE,KAAAksE,yBAAA5lF,KAAyCmkF,KAEzCzqE,KAAAyuE,YAAA5Y,EAAAnE,KAMAmiB,EAAArtF,UAAAmwE,YAAA,SAAAC,EAAAlF,GACA,IAAAnzB,EAAAv+B,KAAAu+B,MACAqF,EAAArF,EAAAqF,UACA3P,EAAAsK,EAAAtK,YACA,QAAA5qC,IAAAu6C,QAAAv6C,IAAA4qC,EAAA,CAGAj0B,KAAAg0E,qBAAApd,GACA52D,KAAAquE,cAAAzX,EAAAlF,QACAroE,IAAAk1C,EAAAqF,WACA5jC,KAAAksE,yBAAA5lF,KAAA,CACQskF,GAAiBP,eACjB9jF,OAAA44E,GAAA,EAAA54E,CAASw1E,GAAA,UAGjB1yE,IAAAk1C,EAAAtK,aACAj0B,KAAAksE,yBAAA5lF,KAAA,CACQskF,GAAiBN,iBACzB/rC,EAAAtK,YAAAsK,EAAArK,UAAAqK,EAAAg9B,QAAAh9B,EAAAm9B,SACAn9B,EAAAo9B,WAAAp9B,EAAAi9B,SAAAj9B,EAAAk9B,iBAGA,IAAA38C,EAAA83C,EAAAhxC,UACAp2B,EAAAonE,EAAAnxC,6BACA91B,EAAAinE,EAAAj6C,YACA3c,KAAA8zE,sBAAAtkF,EAAA,EAAAsvB,EAAAnvB,GACAqQ,KAAAyuE,YAAA7X,EAAAlF,KAMAmiB,EAAArtF,UAAA+vE,iBAAA,SAAAC,EAAA9E,GACA,IAAAnzB,EAAAv+B,KAAAu+B,MACAqF,EAAArF,EAAAqF,UACA3P,EAAAsK,EAAAtK,YACA,QAAA5qC,IAAAu6C,QAAAv6C,IAAA4qC,EAAA,CAGAj0B,KAAAg0E,qBAAAxd,GACAx2D,KAAAquE,cAAA7X,EAAA9E,QACAroE,IAAAk1C,EAAAqF,WACA5jC,KAAAksE,yBAAA5lF,KAAA,CACQskF,GAAiBP,eACjB9jF,OAAA44E,GAAA,EAAA54E,CAASw1E,GAAA,UAGjB1yE,IAAAk1C,EAAAtK,aACAj0B,KAAAksE,yBAAA5lF,KAAA,CACQskF,GAAiBN,iBACzB/rC,EAAAtK,YAAAsK,EAAArK,UAAAqK,EAAAg9B,QAAAh9B,EAAAm9B,SACAn9B,EAAAo9B,WAAAp9B,EAAAi9B,SAAAj9B,EAAAk9B,iBAOA,IAJA,IAAAt8C,EAAAq3C,EAAAwE,WACAxrE,EAAAgnE,EAAA/wC,6BACA91B,EAAA6mE,EAAA75C,YACAltB,EAAA,EACAvJ,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAsCF,EAAAgI,IAAQhI,EAC9CuJ,EAAAuQ,KAAA8zE,sBAAAtkF,EAAAC,EAAA0vB,EAAAj5B,GAAAyJ,GAEAqQ,KAAAyuE,YAAAjY,EAAA9E,KAMAmiB,EAAArtF,UAAAkoF,OAAA,WACA1uE,KAAAsxE,kCACAtxE,KAAAu+B,MAAA,KAKA,IAAArjB,EAAAlb,KAAAkb,UACA,OAAAA,EAEA,IADA,IAAAltB,EAAAgS,KAAAhS,YACA9H,EAAA,EAAAgI,EAAAF,EAAA5H,OAA8CF,EAAAgI,IAAQhI,EACtD8H,EAAA9H,GAAyBK,OAAA00B,GAAA,EAAA10B,CAAIyH,EAAA9H,GAAAg1B,IAS7B24D,EAAArtF,UAAAwtF,qBAAA,SAAA/iC,GACA,IAAA1S,EAAAv+B,KAAAu+B,WAEAl1C,IADAk1C,EAAAqF,WAEA5jC,KAAA0xE,gBAAAnzC,EAAAv+B,KAAAuxE,WAAAtgC,QAEA5nD,IAAAk1C,EAAAtK,aACAj0B,KAAA4xE,kBAAArzC,EAAAv+B,KAAAwxE,cAIAqC,EAnMuB,CAoMrBxI,IClMK,SAAA6I,GAAApL,EAAAt5E,EAAAC,EAAAC,EAAAC,GACP,IAKAzJ,EAAAiuF,EAAAC,EAAA9iF,EAAAI,EAAA2iF,EAAAC,EAAAC,EAAAC,EALAC,EAAAhlF,EACAilF,EAAAjlF,EACAklF,EAAA,EACAlrF,EAAA,EACAuI,EAAAvC,EAEA,IAAAvJ,EAAAuJ,EAAkBvJ,EAAAwJ,EAASxJ,GAAAyJ,EAAA,CAC3B,IAAA4B,EAAA/B,EAAAtJ,GACAyL,EAAAnC,EAAAtJ,EAAA,QACAmD,IAAAiI,IACAijF,EAAAhjF,EAAAD,EACAkjF,EAAA7iF,EAAAD,EACA0iF,EAAAvkF,KAAA4zB,KAAA8wD,IAAAC,UACAnrF,IAAAgrF,IACA5qF,GAAA0qF,EACAtkF,KAAA+kF,MAAAP,EAAAE,EAAAD,EAAAE,IAAAL,EAAAC,IACAtL,IACAr/E,EAAAkrF,IACAA,EAAAlrF,EACAgrF,EAAAziF,EACA0iF,EAAAxuF,GAEAuD,EAAA,EACAuI,EAAA9L,EAAAyJ,IAGAwkF,EAAAC,EACAC,EAAAE,EACAD,EAAAE,GAEAljF,EAAAC,EACAG,EAAAC,EAGA,OADAlI,GAAA2qF,GACAO,EAAA,CAAA3iF,EAAA9L,GAAA,CAAAuuF,EAAAC,GCtCe,IAAAG,GAEf,OC4gBe,IClgBfC,GAAA,CACAC,OJ2Le,GI1LfC,QAAa3J,GACblnC,MAAWkuC,GACX4C,WAAgB1B,GAChBvuD,QJuLe,GItLfkwD,KDboB,SAAA5J,GACpB,SAAA6J,EAAAj6D,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GACAH,EAAA5kF,KAAAsZ,KAAAkb,EAAAqwD,EAAA76E,EAAA+6B,EAAA+/C,EAAAC,GAMAzrE,KAAAuyE,gBAMAvyE,KAAAo1E,QAAA,KAMAp1E,KAAA24D,MAAA,GAMA34D,KAAA44D,aAAA,EAMA54D,KAAA64D,aAAA,EAMA74D,KAAA84D,yBAAAzvE,EAMA2W,KAAA+4D,cAAA,EAMA/4D,KAAAi5D,eAAA,KAKAj5D,KAAAq1E,WAAA,GAMAr1E,KAAAk5D,iBAAA,KAKAl5D,KAAAs1E,aAAA,GAMAt1E,KAAAm5D,WAAkE,GAKlEn5D,KAAA6wE,WAAA,GAMA7wE,KAAAu1E,SAAA,GAMAv1E,KAAAw1E,SAAA,GAMAx1E,KAAAy1E,WAAA,GAMAz1E,KAAA01E,QAAA,GAEI3Z,GAAA,EAAU17B,QA2Yd,OAvYAirC,IAAA6J,EAAApyE,UAAAuoE,GACA6J,EAAA3uF,UAAAD,OAAAmE,OAAA4gF,KAAA9kF,WACA2uF,EAAA3uF,UAAAwc,YAAAmyE,EAKAA,EAAA3uF,UAAAqwE,SAAA,SAAA5lB,EAAAygB,GACA,IAAAyJ,EAAAn7D,KAAAi5D,eACAoC,EAAAr7D,KAAAk5D,iBACA0C,EAAA57D,KAAAm5D,WACA,QAAAn5D,KAAA24D,OAAAiD,IAAAT,GAAAE,GAAA,CAIA,IAMAn1E,EAAAgI,EANA2Z,EAAA7H,KAAAhS,YAAA5H,OAEAuvF,EAAA1kC,EAAA51B,UACA7rB,EAAA,KACAE,EAAA,EACAC,EAAA,EAGA,GAAAisE,EAAAga,YAAgCf,GAAa,CAC7C,IAAWtuF,OAAAqgB,GAAA,EAAArgB,CAAUyZ,KAAA2tE,uBAAA18B,EAAA9vC,aACrB,OAEA,IAAA2d,EAGA,GAFAtvB,EAAAyhD,EAAA30B,qBACA3sB,EAAAshD,EAAAt0B,YACAg5D,GAA0BlxD,GAAA,EAAYhpB,YACtCqjB,EAAA,CAAAtvB,EAAApJ,aACO,GAAAuvF,GAA0BlxD,GAAA,EAAY5oB,kBAC7CijB,EAAAmyB,EAAArrB,eACO,GAAA+vD,GAA0BlxD,GAAA,EAAY9oB,QAC7CmjB,EAAAmyB,EAAArrB,UAAAt6B,MAAA,UACO,GAAAqqF,GAA0BlxD,GAAA,EAAY3oB,cAAA,CAC7C,IAAAqjB,EAAA8xB,EAAA+pB,WAEA,IADAl8C,EAAA,GACA54B,EAAA,EAAAgI,EAAAixB,EAAA/4B,OAAsCF,EAAAgI,IAAQhI,EAC9C44B,EAAAx4B,KAAA64B,EAAAj5B,GAAA,IAGA8Z,KAAAquE,cAAAp9B,EAAAygB,GAIA,IAHA,IAEAmkB,EAFA/Z,EAAAF,EAAAE,UACAga,EAAA,EAEAhsF,EAAA,EAAAisF,EAAAj3D,EAAA14B,OAAuC0D,EAAAisF,IAAQjsF,EAAA,CAC/C,GAAAT,MAAAyyE,EAAA,CACA,IAAAnwC,EAAsBuoD,GAAatY,EAAAkN,SAAAt5E,EAAAsmF,EAAAh3D,EAAAh1B,GAAA6F,GACnCmmF,EAAAnqD,EAAA,GACAkqD,EAAAlqD,EAAA,QAEAkqD,EAAA/2D,EAAAh1B,GAEA,IAAA5D,EAAA4vF,EAA4B5vF,EAAA2vF,EAAa3vF,GAAAyJ,EACzCqQ,KAAAhS,YAAA1H,KAAAkJ,EAAAtJ,GAAAsJ,EAAAtJ,EAAA,IAEAwJ,EAAAsQ,KAAAhS,YAAA5H,OACA0vF,EAAAh3D,EAAAh1B,GACAkW,KAAAg2E,WAAAnuE,EAAAnY,EAAAsQ,KAAAuyE,iBACA1qE,EAAAnY,EAEAsQ,KAAAyuE,YAAAx9B,EAAAygB,OAEK,CACL,IAAAuf,EAAAjxE,KAAAwgC,SAAAxgC,KAAA24D,MAAA34D,KAAAu1E,SAAAv1E,KAAAw1E,SAAAx1E,KAAAy1E,YACA59E,EAAAo5E,EAAAp5E,MAAAmI,KAAAyrB,WACA,OAAAkqD,GACA,KAAalxD,GAAA,EAAYjpB,MACzB,KAAaipB,GAAA,EAAY7oB,YAEzBlM,GADAF,EAAAyhD,EAAA30B,sBACAl2B,OACA,MACA,KAAaq+B,GAAA,EAAYhpB,YACzBjM,EAAkF,EAAAmrE,kBAClF,MACA,KAAal2C,GAAA,EAAYzoB,OACzBxM,EAA8E,EAAAzC,YAC9E,MACA,KAAa03B,GAAA,EAAY5oB,kBAEzBnM,GADAF,EAAuF,EAAAsrE,oBACvF10E,OACA,MACA,KAAaq+B,GAAA,EAAY9oB,QAEzB,GADAnM,EAA+E,EAAAq2B,wBAC/E+1C,EAAA/M,UAAAr/D,EAAA,GAAAwQ,KAAAtP,WAAAmH,EACA,OAEAlI,EAAA,EACA,MACA,KAAa80B,GAAA,EAAY3oB,cACzB,IAAAo5C,EAAuF,EAAAgmB,wBAEvF,IADA1rE,EAAA,GACAtJ,EAAA,EAAAgI,EAAAgnD,EAAA9uD,OAAiDF,EAAAgI,EAAQhI,GAAA,GACzD01E,EAAA/M,UAAA3Z,EAAAhvD,EAAA,GAAA8Z,KAAAtP,YAAAmH,IACArI,EAAAlJ,KAAA4uD,EAAAhvD,GAAAgvD,EAAAhvD,EAAA,IAIA,OADAwJ,EAAAF,EAAApJ,QAEA,OAKAsJ,EAAAsQ,KAAAutE,sBAAA/9E,EAAA,EAAAE,EAAAC,GAAA,OACAisE,EAAAuU,gBAAAvU,EAAAwU,oBACApwE,KAAA82D,mBAAA8E,EAAAuU,eAAAvU,EAAAwU,kBACAxU,EAAAuU,iBACAnwE,KAAA0xE,gBAAA1xE,KAAAu+B,MAAAv+B,KAAAuxE,WAAAtgC,GACAjxC,KAAAksE,yBAAA5lF,KAAA0Z,KAAAuxE,WAAAvxE,KAAAu+B,MAAA0S,KAEA2qB,EAAAwU,mBACApwE,KAAA4xE,kBAAA5xE,KAAAu+B,MAAAv+B,KAAAwxE,aACAxxE,KAAAksE,yBAAA5lF,KAAA0Z,KAAAyxE,aAAAzxE,KAAAu+B,UAGAv+B,KAAAquE,cAAAp9B,EAAAygB,GACA1xD,KAAAi2E,eAAAhF,EAAAppE,EAAAnY,GACAsQ,KAAAyuE,YAAAx9B,EAAAygB,MAWAyjB,EAAA3uF,UAAAg6C,SAAA,SAAArpC,EAAAs5E,EAAAH,EAAAC,GACA,IAAAU,EACAtmF,EAAA4lF,EAAAE,EAAAt5E,EAAAm5E,EAAAtwE,KAAAyrB,WAEA,IAASswC,GAAA,EAAUp8B,YAAAh1C,GAAA,CACnB,IAAA0wE,EAAAkV,EAAAvwE,KAAAs1E,aAAA/E,IAAAvwE,KAAAk5D,iBAAA,KACAiC,EAAAmV,EAAAtwE,KAAAq1E,WAAA/E,IAAAtwE,KAAAi5D,eAAA,KACA2C,EAAA57D,KAAA6wE,WAAAJ,IAAAzwE,KAAAm5D,WACA1tC,EAAAzrB,KAAAyrB,WACA5xB,EAAA+hE,EAAA/hE,MAAA4xB,EACAyqD,EAAkBpL,GAAUlP,EAAAE,WAAwBC,GAAA,GACpDyU,EAAAD,GAAAlV,EAAAnnC,UAAAmnC,EAAAnnC,UAAA,EAEAiiD,EAAAh/E,EAAA+c,MAAA,MACAkiE,EAAAD,EAAA/vF,OACAiwF,EAAA,GACAx+E,EA+PO,SAAAR,EAAA8+E,EAAAE,GAGP,IAFA,IAAAD,EAAAD,EAAA/vF,OACAyR,EAAA,EACA3R,EAAA,EAAiBA,EAAAkwF,IAAclwF,EAAA,CAC/B,IAAAowF,EAAuB/vF,OAAAw1E,GAAA,EAAAx1E,CAAgB8Q,EAAA8+E,EAAAjwF,IACvC2R,EAAAhI,KAAAE,IAAA8H,EAAAy+E,GACAD,EAAA/vF,KAAAgwF,GAEA,OAAAz+E,EAvQA0+E,CAAA3a,EAAAvkE,KAAA8+E,EAAAE,GACAG,EAAuBjwF,OAAAw1E,GAAA,EAAAx1E,CAAiBq1E,EAAAvkE,MACxCmB,EAAAg+E,EAAAJ,EACAK,EAAA5+E,EAAA24E,EACAl5E,EAAoB/Q,OAAAo9C,GAAA,EAAAp9C,CACpBsJ,KAAAk5B,KAAA0tD,EAAA58E,GACAhK,KAAAk5B,MAAAvwB,EAAAg4E,GAAA32E,IACAo3E,EAAA35E,EAAA2T,OACM8wD,GAAA,EAAU39D,IAAAzT,EAAAsmF,GAChB,GAAAp3E,GACAvC,EAAAuC,WAEAvC,EAAAD,KAAAukE,EAAAvkE,KACAk5E,IACAj5E,EAAA28B,YAAAonC,EAAApnC,YACA38B,EAAA48B,UAAAs8C,EACAl5E,EAAAikE,QAAmDF,EAAA,QACnD/jE,EAAAokE,SAAqDL,EAAA,SACrD/jE,EAAAqkE,WAAAN,EAAAM,WACYlsD,EAAA,GAAgB4rD,EAAAG,SAAAp1E,SAC5BkR,EAAAoY,YAAA2rD,EAAAG,UACAlkE,EAAAmkE,eAAAJ,EAAAI,iBAGA6U,IACAh5E,EAAAssC,UAAAu3B,EAAAv3B,WAEAtsC,EAAA0kE,aAAA,SACA1kE,EAAAwkE,UAAA,SACA,IAEA51E,EAFAwwF,EAAA,GAAAR,EACA9nF,EAAA8nF,EAAAjF,EAAAp5E,MAAAgC,EAAA68E,EAAAlG,EAEA,GAAAD,EACA,IAAArqF,EAAA,EAAmBA,EAAAkwF,IAAclwF,EACjCoR,EAAAuiE,WAAAsc,EAAAjwF,GAAAkI,EAAAsoF,EAAAL,EAAAnwF,GAAA,IAAAsqF,EAAAgG,GAAAtwF,EAAAswF,GAGA,GAAAlG,EACA,IAAApqF,EAAA,EAAmBA,EAAAkwF,IAAclwF,EACjCoR,EAAAwiE,SAAAqc,EAAAjwF,GAAAkI,EAAAsoF,EAAAL,EAAAnwF,GAAA,IAAAsqF,EAAAgG,GAAAtwF,EAAAswF,GAIA,OAAWza,GAAA,EAAU9xE,IAAAU,IASrBwqF,EAAA3uF,UAAAyvF,eAAA,SAAAhF,EAAAppE,EAAAnY,GACA,IAAAksE,EAAA57D,KAAAm5D,WACAkC,EAAAr7D,KAAAk5D,iBACAztC,EAAAzrB,KAAAyrB,WACAyqD,EAAgBpL,GAAUlP,EAAAE,WAAwBC,GAAA,GAClDsU,EAAmBvF,GAAUlP,EAAAI,cAC7BwU,EAAAnV,KAAAnnC,UAAAmnC,EAAAnnC,UAAA,EAEA5c,EAAA4+D,EAAAjF,EAAAp5E,MAAA4zB,EAAA,MAAAyqD,GAAA1F,EACAj5D,EAAA84D,EAAAY,EAAAz4E,OAAAizB,EAAA,MAAA4kD,GAAAG,EACAxwE,KAAA+rE,aAAAzlF,KAAA,CAA4BskF,GAAiBX,WAAApiE,EAAAnY,EAC7CuhF,GAAA35D,EAAAtX,KAAA44D,cAAAntC,GAAAlU,EAAAvX,KAAA64D,cAAAptC,EACAzrB,KAAAuyE,gBAAAtB,EAAAz4E,OAAA,MAAAwH,KAAA84D,oBAAA94D,KAAA+4D,cACA,EAAAkY,EAAAp5E,MACA+jE,EAAAhjE,SAA2BmjE,GAAA,EACnBA,GAAA,EAAcH,EAAAhjE,QAAAiY,IAAA,SAAAvoB,GACtB,OAAAA,EAAAmjC,MAEAmwC,EAAAuU,iBAAAvU,EAAAwU,mBAEApwE,KAAAksE,yBAAA5lF,KAAA,CAAwCskF,GAAiBX,WAAApiE,EAAAnY,EACzDuhF,GAAA35D,EAAAtX,KAAA44D,cAAAntC,GAAAlU,EAAAvX,KAAA64D,cAAAptC,EACAzrB,KAAAuyE,gBAAAtB,EAAAz4E,OAAA,MAAAwH,KAAA84D,oBAAA94D,KAAA+4D,cACA,EAAAttC,EAAAwlD,EAAAp5E,MAAA+jE,EAAAhjE,UACAgjE,EAAAuU,iBAAAvU,EAAAwU,oBAUA+E,EAAA3uF,UAAAwvF,WAAA,SAAAnuE,EAAAnY,EAAAi9E,GACA,IAAAtR,EAAAr7D,KAAAk5D,iBACA0C,EAAA57D,KAAAm5D,WACAgC,EAAAn7D,KAAAi5D,eAEAsX,EAAAvwE,KAAAy1E,WACApa,IACAkV,KAAAvwE,KAAAs1E,eACAt1E,KAAAs1E,aAAA/E,GAAqF,CACrFt8C,YAAAonC,EAAApnC,YACAsnC,QAAAF,EAAAE,QACAE,eAAAJ,EAAAI,eACAvnC,UAAAmnC,EAAAnnC,UACAwnC,SAAAL,EAAAK,SACAC,WAAAN,EAAAM,WACAH,SAAAH,EAAAG,YAIA,IAAAiV,EAAAzwE,KAAAu1E,SACAv1E,KAAAu1E,YAAAv1E,KAAA6wE,aACA7wE,KAAA6wE,WAAA7wE,KAAAu1E,UAAmF,CACnFl+E,KAAAukE,EAAAvkE,KACAykE,UAAAF,EAAAE,WAA0CC,GAAA,EAC1CliE,MAAA+hE,EAAA/hE,QAGA,IAAAy2E,EAAAtwE,KAAAw1E,SACAra,IACAmV,KAAAtwE,KAAAq1E,aACAr1E,KAAAq1E,WAAA/E,GAA+E,CAC/E1sC,UAAAu3B,EAAAv3B,aAKA,IAAAnY,EAAAzrB,KAAAyrB,WACA4kD,EAAmBvF,GAAUlP,EAAAI,cAE7B7iE,EAAA6G,KAAA64D,aAAAptC,EACAt0B,EAAA6I,KAAA24D,MACAthE,EAAAukE,EAAAvkE,KACAonE,EAAA7C,EAAA/hE,MACA22E,EAAAnV,IAAAnnC,UAAAuqC,EAAA,IACA4X,EAAAr2E,KAAA01E,QAAAr+E,GACAg/E,IACAr2E,KAAA01E,QAAAr+E,GAAAg/E,EAAA,IAEAr2E,KAAA+rE,aAAAzlF,KAAA,CAA4BskF,GAAiBZ,WAC7CniE,EAAAnY,EAAA2gF,EAAA1D,EACA/Q,EAAA/M,SAAAyhB,EAAA1U,EAAAkN,SACA,SAAA3xE,GACA,IAAAU,EAAAw+E,EAAAl/E,GAIA,OAHAU,IACAA,EAAAw+E,EAAAl/E,GAAiC5Q,OAAAw1E,GAAA,EAAAx1E,CAAgB8Q,EAAAF,IAEjDU,EAAA4mE,EAAAhzC,GAEAtyB,EAAAo3E,EAAAC,EAAA/kD,EAAAt0B,EAAAs5E,EAAA,IAEAzwE,KAAAksE,yBAAA5lF,KAAA,CAAwCskF,GAAiBZ,WACzDniE,EAAAnY,EAAA2gF,EAAA1D,EACA/Q,EAAA/M,SAAAyhB,EAAA1U,EAAAkN,SACA,SAAA3xE,GACA,IAAAU,EAAAw+E,EAAAl/E,GAIA,OAHAU,IACAA,EAAAw+E,EAAAl/E,GAAiC5Q,OAAAw1E,GAAA,EAAAx1E,CAAgB8Q,EAAAF,IAEjDU,EAAA4mE,GAEAtlE,EAAAo3E,EAAAC,EAAAr5E,EAAAs5E,EAAA,EAAAhlD,KAOA0pD,EAAA3uF,UAAA0wE,aAAA,SAAAC,EAAAwV,GACA,IAAA/Q,EAAAT,EAAAE,EACA,GAAAlE,EAEK,CACLn3D,KAAAuyE,gBAA8E,EAE9E,IAAAhV,EAAApG,EAAAiD,UACAmD,IAGApC,EAAAn7D,KAAAi5D,kBAEAkC,EAAAn7D,KAAAi5D,eAAwF,IAExFkC,EAAAv3B,UAA8Br9C,OAAA41E,GAAA,EAAA51E,CAC9Bg3E,EAAArB,YAAsCH,GAAA,IAPtCZ,EAAAn7D,KAAAi5D,eAAA,KAUA,IAAAwE,EAAAtG,EAAAkD,YACA,GAAAoD,EAEO,EACPpC,EAAAr7D,KAAAk5D,oBAEAmC,EAAAr7D,KAAAk5D,iBAA8F,IAE9F,IAAAsC,EAAAiC,EAAAjB,cACAf,EAAAgC,EAAAf,oBACAxoC,EAAAupC,EAAAnwE,WACAquE,EAAA8B,EAAAV,gBACA1B,EAAAE,QAAAkC,EAAAnB,cAA8DP,GAAA,EAC9DV,EAAAG,aAAAlwE,QAA6DywE,GAAA,EAC7DV,EAAAI,oBACApyE,IAAAoyE,EAA2CM,GAAA,EAAqBN,EAChEJ,EAAAK,SAAA+B,EAAAb,eAAgEb,GAAA,EAChEV,EAAAnnC,eACA7qC,IAAA6qC,EAAsC6nC,GAAA,EAAgB7nC,EACtDmnC,EAAAM,gBACAtyE,IAAAsyE,EAAuCI,GAAA,EAAiBJ,EACxDN,EAAApnC,YAAkC1tC,OAAA41E,GAAA,EAAA51E,CAClCk3E,EAAAvB,YAAwCH,GAAA,QApBxCV,EAAAr7D,KAAAk5D,iBAAA,KAuBA0C,EAAA57D,KAAAm5D,WACA,IAAA9hE,EAAA8/D,EAAA+G,WAAwCnC,GAAA,EAClCx1E,OAAAw1E,GAAA,EAAAx1E,CAAS8Q,GACf,IAAAonE,EAAAtH,EAAAmG,WACA1B,EAAA/M,SAAAsI,EAAAwf,cACA/a,EAAAvkE,OACAukE,EAAAkN,SAAA3R,EAAAyf,cACAhb,EAAAga,UAAAze,EAAA0f,eACAjb,EAAAE,UAAA3E,EAAAyH,eACAhD,EAAAI,aAAA7E,EAAA2H,mBAA8D/C,GAAA,EAC9DH,EAAAuU,eAAAhZ,EAAA2f,oBACAlb,EAAAwU,iBAAAjZ,EAAA4f,sBACAnb,EAAAhjE,QAAAu+D,EAAA6f,cAAoDjb,GAAA,EACpDH,EAAA/hE,WAAAxQ,IAAAo1E,EAAA,EAAAA,EAEA,IAAAN,EAAAhH,EAAAiH,aACAC,EAAAlH,EAAAmH,aACAC,EAAApH,EAAAkG,oBACAmB,EAAArH,EAAAzlD,cACA1R,KAAA24D,MAAAxB,EAAAmD,WAAA,GACAt6D,KAAA44D,kBAAAvvE,IAAA80E,EAAA,EAAAA,EACAn+D,KAAA64D,kBAAAxvE,IAAAg1E,EAAA,EAAAA,EACAr+D,KAAA84D,yBAAAzvE,IAAAk1E,KACAv+D,KAAA+4D,mBAAA1vE,IAAAm1E,EAAA,EAAAA,EAEAx+D,KAAAy1E,WAAApa,GACA,iBAAAA,EAAApnC,YAAAonC,EAAApnC,YAAgF1tC,OAAA+zB,EAAA,EAAA/zB,CAAM80E,EAAApnC,cACtFonC,EAAAE,QAAAF,EAAAI,eAAA,IAAAJ,EAAAnnC,UACAmnC,EAAAK,SAAAL,EAAAM,WAAA,IAAAN,EAAAG,SAAAxmD,OAAA,IACA,GACAhV,KAAAu1E,SAAA3Z,EAAAvkE,KAAAukE,EAAA/hE,OAAA+hE,EAAAE,WAAA,KACA97D,KAAAw1E,SAAAra,EACA,iBAAAA,EAAAv3B,UAAAu3B,EAAAv3B,UAAA,IAA+Er9C,OAAA+zB,EAAA,EAAA/zB,CAAM40E,EAAAv3B,WACrF,QA1EA5jC,KAAA24D,MAAA,IA8EAwc,EAlfoB,CAmflB9J,KCleE4L,GAAiB,SAAAC,GACrB,SAAAC,EACAj8D,EACAqwD,EACA76E,EACA+6B,EACA+/C,EACAC,EACA2L,GAEAF,EAAAxwF,KAAAsZ,MAMAA,KAAAq3E,eAAA5L,EAMAzrE,KAAAuyE,gBAAA,KAMAvyE,KAAAs3E,WAAAp8D,EAMAlb,KAAAu3E,WAAAhM,EAMAvrE,KAAAw3E,UAAAhM,EAMAxrE,KAAAugC,YAAA9U,EAMAzrB,KAAAy3E,YAAA/mF,EAMAsP,KAAA03E,cAAAN,EAMAp3E,KAAA23E,iBAAA,GAMA33E,KAAA43E,qBAAgCrxF,OAAAo9C,GAAA,EAAAp9C,CAAqB,KAMrDyZ,KAAA63E,uBAAkCtxF,OAAAwzB,GAAA,EAAAxzB,GAiSlC,OA9RA2wF,IAAAC,EAAAp0E,UAAAm0E,GACAC,EAAA3wF,UAAAD,OAAAmE,OAAAwsF,KAAA1wF,WACA2wF,EAAA3wF,UAAAwc,YAAAm0E,EAKAA,EAAA3wF,UAAA6hF,aAAA,SAAAC,GACA,IAAAwP,EAAA,KAUA,OATA93E,KAAAq3E,iBACA/O,GACAwP,EAAA93E,KAAAuyE,iBAC0B,MAE1BuF,EAAA93E,KAAAuyE,gBAA2ChsF,OAAAqgB,GAAA,EAAArgB,IAC3CD,KAAA,IAGAwxF,GAOAX,EAAA3wF,UAAAutC,KAAA,SAAAz8B,EAAAgC,GACA,IAAAy+E,EAAA/3E,KAAAg4E,cAAA1+E,GACAhC,EAAAm8B,YACAn8B,EAAAu8B,OAAAkkD,EAAA,GAAAA,EAAA,IACAzgF,EAAAw8B,OAAAikD,EAAA,GAAAA,EAAA,IACAzgF,EAAAw8B,OAAAikD,EAAA,GAAAA,EAAA,IACAzgF,EAAAw8B,OAAAikD,EAAA,GAAAA,EAAA,IACAzgF,EAAAy8B,QAOAojD,EAAA3wF,UAAAyxF,WAAA,SAAAC,GACA,QAAAv2D,KAAA3hB,KAAA23E,iBAEA,IADA,IAAAQ,EAAAn4E,KAAA23E,iBAAAh2D,GACAz7B,EAAA,EAAAgI,EAAAgqF,EAAA9xF,OAA0CF,EAAAgI,IAAQhI,EAClD,GAAAgyF,EAAAhyF,KAAAiyF,EACA,SAIA,UAMAhB,EAAA3wF,UAAAkoF,OAAA,WACA,QAAA1pC,KAAAhlC,KAAA23E,iBAAA,CACA,IAAAO,EAAAl4E,KAAA23E,iBAAA3yC,GACA,QAAAozC,KAAAF,EACAA,EAAAE,GAAA1J,WAgBAyI,EAAA3wF,UAAA+qE,2BAAA,SACA/iE,EACAkC,EACAC,EACA0gE,EACA6d,EACAl/E,EACAqoF,GAIA,IAkBAC,EAlBAC,EAAA,GADAlnB,EAAAxhE,KAAAo6B,MAAAonC,IACA,EACA/3D,EAAoB/S,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAA63E,uBACpCxmB,EAAA,GAAAA,EAAA,GACA,EAAA3gE,GAAA,EAAAA,GACAC,GACAnC,EAAA,IAAAA,EAAA,IACA8I,EAAA0I,KAAA43E,qBAEAtgF,EAAA2T,OAAApT,QAAA0gF,GAAAjhF,EAAA2T,OAAAzS,SAAA+/E,GACAjhF,EAAA2T,OAAApT,MAAA0gF,EACAjhF,EAAA2T,OAAAzS,OAAA+/E,GAEAjhF,EAAAsqE,UAAA,IAAA2W,UAOAlvF,IAAA2W,KAAA03E,gBACAY,EAAkB/xF,OAAAqgB,GAAA,EAAArgB,GACZA,OAAAqgB,GAAA,EAAArgB,CAAgB+xF,EAAA9pF,GAChBjI,OAAAqgB,GAAA,EAAArgB,CAAM+xF,EAAA5nF,GAAAsP,KAAA03E,cAAArmB,GAAAinB,IAGZ,IACAE,EAOApQ,EARAtzD,EA4NO,SAAAiS,GACP,QAAA19B,IAAAovF,GAAA1xD,GACA,OAAA0xD,GAAA1xD,GAKA,IAFA,IAAA2xD,EAAA,EAAA3xD,EAAA,EACAtf,EAAA,IAAArK,MAAAs7E,GACAxyF,EAAA,EAAiBA,EAAAwyF,EAAexyF,IAChCuhB,EAAAvhB,GAAA,IAAAkX,MAAAs7E,GAGA,IAAAtqF,EAAA24B,EACA14B,EAAA,EACAnF,EAAA,EAEA,KAAAkF,GAAAC,GACAsqF,GAAAlxE,EAAAsf,EAAA34B,EAAA24B,EAAA14B,GACAsqF,GAAAlxE,EAAAsf,EAAA14B,EAAA04B,EAAA34B,GACAuqF,GAAAlxE,EAAAsf,EAAA14B,EAAA04B,EAAA34B,GACAuqF,GAAAlxE,EAAAsf,EAAA34B,EAAA24B,EAAA14B,GACAsqF,GAAAlxE,EAAAsf,EAAA34B,EAAA24B,EAAA14B,GACAsqF,GAAAlxE,EAAAsf,EAAA14B,EAAA04B,EAAA34B,GACAuqF,GAAAlxE,EAAAsf,EAAA14B,EAAA04B,EAAA34B,GACAuqF,GAAAlxE,EAAAsf,EAAA34B,EAAA24B,EAAA14B,GAIA,IADAnF,GAAA,MADAmF,GAEAD,GAAA,MAEAlF,GAAA,KADAkF,GAAA,IAMA,OADAqqF,GAAA1xD,GAAAtf,EACAA,EA9PAmxE,CAAAvnB,GAcA,SAAA8d,EAAAzd,GAEA,IADA,IAAA8S,EAAAltE,EAAAmtE,aAAA,IAAA8T,KAAA1yF,KACAK,EAAA,EAAqBA,EAAAqyF,EAAiBryF,IACtC,QAAA+W,EAAA,EAAuBA,EAAAs7E,EAAiBt7E,IACxC,GAAA6X,EAAA5uB,GAAA+W,IACAunE,EAAA,GAAAvnE,EAAAs7E,EAAAryF,GAAA,MACA,IAAA0wC,OAAA,EAKA,QAJA4hD,GAAApQ,GAA0DI,GAAUxvD,OAAAovD,GAAwBI,GAAUE,OACtG,IAAA8P,EAAA/jF,QAAAi9D,MACA96B,EAAA5mC,EAAA0hE,IAEA96B,QAGAt/B,EAAAsqE,UAAA,IAAA2W,MA1BAv4E,KAAAq3E,iBACAmB,EAAAx4E,KAAAq3E,eAAA7tF,MAAAqnB,IAAA,SAAA+uB,GACA,OAAAA,EAAAv1C,SAkCA,IAGAnE,EAAA+W,EAAAi7E,EAAA/G,EAAAv6C,EAHAixC,EAAAthF,OAAA2N,KAAA8L,KAAA23E,kBAAA9mE,IAAA4D,QAIA,IAHAozD,EAAAr/D,KAAY+P,EAAA,GAGZryB,EAAA2hF,EAAAzhF,OAAA,EAA2BF,GAAA,IAAQA,EAAA,CACnC,IAAA2yF,EAAAhR,EAAA3hF,GAAA2wB,WAEA,IADAqhE,EAAAl4E,KAAA23E,iBAAAkB,GACA57E,EAAe4tE,GAAKzkF,OAAA,EAAY6W,GAAA,IAAQA,EAGxC,QAAA5T,KADA8nF,EAAA+G,EADA9P,EAAqByC,GAAK5tE,KAG1B,IAAAo7E,GACAjQ,GAA6BI,GAAUxvD,OAAAovD,GAAwBI,GAAUE,MAUzE,GAFA9xC,EAAAu6C,EAAAC,mBAAA95E,EAAAgC,EAAA3I,EACAu+E,EAAAC,EAAAmJ,GAEA,OAAA1hD,MAXyE,CACzE,IAAAkhD,EAAAO,EAAAQ,GACAf,EAGAA,EAAAxxF,KAAA6qF,EAAA73E,EAAAhO,MAAA,IAFA+sF,EAAAQ,GAAA,CAAA1H,EAAA73E,EAAAhO,MAAA,OAqBA6rF,EAAA3wF,UAAAwxF,cAAA,SAAA1+E,GACA,IAAAiyE,EAAAvrE,KAAAu3E,WACA5oF,EAAA48E,EAAA,GACA38E,EAAA28E,EAAA,GACA18E,EAAA08E,EAAA,GACAz8E,EAAAy8E,EAAA,GACAwM,EAAA,CAAAppF,EAAAC,EAAAD,EAAAG,EAAAD,EAAAC,EAAAD,EAAAD,GAGA,OAFIrI,OAAAs1B,GAAA,EAAAt1B,CACJwxF,EAAA,MAAAz+E,EAAAy+E,GACAA,GAMAZ,EAAA3wF,UAAA2hF,UAAA,SAAAxmD,EAAAymD,GACA,IAAAyQ,OAAAxvF,IAAAs4B,IAAA9K,WAAA,IACAqhE,EAAAl4E,KAAA23E,iBAAAkB,QACAxvF,IAAA6uF,IACAA,EAAA,GACAl4E,KAAA23E,iBAAAkB,GAAAX,GAEA,IAAA/G,EAAA+G,EAAA9P,QACA/+E,IAAA8nF,IAEAA,EAAA,IAAA2H,EADAhE,GAAA1M,IACApoE,KAAAs3E,WAAAt3E,KAAAu3E,WACAv3E,KAAAy3E,YAAAz3E,KAAAugC,YAAAvgC,KAAAw3E,UAAAx3E,KAAAq3E,gBACAa,EAAA9P,GAAA+I,GAEA,OAAAA,GAMAgG,EAAA3wF,UAAAuyF,WAAA,WACA,OAAA/4E,KAAA23E,kBAMAR,EAAA3wF,UAAAgH,QAAA,WACA,OAAWjH,OAAAwO,GAAA,EAAAxO,CAAOyZ,KAAA23E,mBAalBR,EAAA3wF,UAAA2qF,OAAA,SACA75E,EACAgC,EACAk+D,EACA0X,EACAtC,EACAoM,EACAC,GAIA,IAAApR,EAAAthF,OAAA2N,KAAA8L,KAAA23E,kBAAA9mE,IAAA4D,QACAozD,EAAAr/D,KAAY+P,EAAA,GAIZjhB,EAAAk8B,OACAxzB,KAAA+zB,KAAAz8B,EAAAgC,GAEA,IACApT,EAAAgI,EAAA+O,EAAAgiB,EAAAi5D,EAAA/G,EADA+H,EAAAF,GAA0DnO,GAE1D,IAAA3kF,EAAA,EAAAgI,EAAA25E,EAAAzhF,OAA+BF,EAAAgI,IAAQhI,EAAA,CACvC,IAAA2yF,EAAAhR,EAAA3hF,GAAA2wB,WAEA,IADAqhE,EAAAl4E,KAAA23E,iBAAAkB,GACA57E,EAAA,EAAAgiB,EAAAi6D,EAAA9yF,OAA0C6W,EAAAgiB,IAAQhiB,EAAA,CAClD,IAAAmrE,EAAA8Q,EAAAj8E,GAEA,GADAk0E,EAAA+G,EAAA9P,QACA/+E,IAAA8nF,EACA,IAAA8H,GACA7Q,GAA6BI,GAAUxvD,OAAAovD,GAAwBI,GAAUE,KAQzEyI,SAAA75E,EAAAgC,EAAAk+D,EAAA0X,EAAAtC,OARyE,CACzE,IAAAkL,EAAAmB,EAAAJ,GACAf,EAGAA,EAAAxxF,KAAA6qF,EAAA73E,EAAAhO,MAAA,IAFA2tF,EAAAJ,GAAA,CAAA1H,EAAA73E,EAAAhO,MAAA,MAWAgM,EAAA08B,WAGAmjD,EA7WqB,CA8WnB5O,IAQFkQ,GAAA,CACA1xF,EAAA,QAWA,SAAA4xF,GAAApgE,EAAAnqB,EAAAC,GACA,IAAAnI,EACA6gC,EAAAl3B,KAAAy3B,MAAA/O,EAAAnyB,OAAA,GACA,GAAAgI,GAAA24B,EACA,IAAA7gC,EAAA6gC,EAAoB7gC,EAAAkI,EAAOlI,IAC3BqyB,EAAAryB,GAAAmI,IAAA,OAEG,GAAAD,EAAA24B,EACH,IAAA7gC,EAAAkI,EAAA,EAAmBlI,EAAA6gC,EAAY7gC,IAC/BqyB,EAAAryB,GAAAmI,IAAA,EAwEe,IAAA8qF,GAAA,GCvefC,GAAA,GASAC,GAAA,CACApzD,MAoOA,SAAAqzD,EAAAroC,EAAAv4C,EAAAg5D,GACA,IAAAsF,EAAAt+D,EAAA8nC,WACA,GAAAw2B,EAAA,CACA,GAAAA,EAAAuiB,iBAAsC7kB,GAAA,EAAU92D,OAChD,OAEA,IAAA47E,EAAAF,EAAAnR,UAAAzvE,EAAAgpB,YAA+D8mD,GAAUxvD,OACzEwgE,EAAAziB,cAAAC,EAAAsiB,EAAAjR,cAAA,IACAmR,EAAA/iB,UAAAxlB,EAAAygB,GAEA,IAAAyF,EAAAz+D,EAAA4hE,UACA,GAAAnD,EAAA,CACA,IAAAsiB,EAAAH,EAAAnR,UAAAzvE,EAAAgpB,YAA8D8mD,GAAUE,MACxE+Q,EAAAviB,aAAAC,EAAAmiB,EAAAjR,eAAArR,IACAyiB,EAAA5iB,SAAA5lB,EAAAygB,KAjPAujB,WAgKA,SAAAqE,EAAAroC,EAAAv4C,EAAAg5D,GACA,IAAAz9B,EAAAv7B,EAAA2hE,YACA,GAAApmC,EAAA,CACA,IAAAylD,EAAAJ,EAAAnR,UAAAzvE,EAAAgpB,YAAoE8mD,GAAU/sE,aAC9Ei+E,EAAA5iB,mBAAA,KAAA7iC,GACAylD,EAAAzjB,eAAAhlB,EAAAygB,GAEA,IAAAyF,EAAAz+D,EAAA4hE,UACA,GAAAnD,EAAA,CACA,IAAAsiB,EAAAH,EAAAnR,UAAAzvE,EAAAgpB,YAA8D8mD,GAAUE,MACxE+Q,EAAAviB,aAAAC,EAAAmiB,EAAAjR,cAAA,IACAoR,EAAA5iB,SAAA5lB,EAAAygB,KA1KA1sC,QAoRA,SAAAs0D,EAAAroC,EAAAv4C,EAAAg5D,GACA,IAAA9tB,EAAAlrC,EAAA0hE,UACAnmC,EAAAv7B,EAAA2hE,YACA,GAAAz2B,GAAA3P,EAAA,CACA,IAAA0lD,EAAAL,EAAAnR,UAAAzvE,EAAAgpB,YAAiE8mD,GAAU7sE,SAC3Eg+E,EAAA7iB,mBAAAlzB,EAAA3P,GACA0lD,EAAAhjB,YAAA1lB,EAAAygB,GAEA,IAAAyF,EAAAz+D,EAAA4hE,UACA,GAAAnD,EAAA,CACA,IAAAsiB,EAAAH,EAAAnR,UAAAzvE,EAAAgpB,YAA8D8mD,GAAUE,MACxE+Q,EAAAviB,aAAAC,EAAAmiB,EAAAjR,cAAA,IACAoR,EAAA5iB,SAAA5lB,EAAAygB,KA/RAkoB,WA0PA,SAAAN,EAAAroC,EAAAv4C,EAAAg5D,GACA,IAAAsF,EAAAt+D,EAAA8nC,WACA,GAAAw2B,EAAA,CACA,GAAAA,EAAAuiB,iBAAsC7kB,GAAA,EAAU92D,OAChD,OAEA,IAAA47E,EAAAF,EAAAnR,UAAAzvE,EAAAgpB,YAA+D8mD,GAAUxvD,OACzEwgE,EAAAziB,cAAAC,EAAAsiB,EAAAjR,cAAA,IACAmR,EAAAnjB,eAAAplB,EAAAygB,GAEA,IAAAyF,EAAAz+D,EAAA4hE,UACA,GAAAnD,EAAA,CACA,IAAAsiB,EAAAH,EAAAnR,UAAAzvE,EAAAgpB,YAA8D8mD,GAAUE,MACxE+Q,EAAAviB,aAAAC,EAAAmiB,EAAAjR,eAAArR,IACAyiB,EAAA5iB,SAAA5lB,EAAAygB,KAvQAmoB,gBAmLA,SAAAP,EAAAroC,EAAAv4C,EAAAg5D,GACA,IAAAz9B,EAAAv7B,EAAA2hE,YACA,GAAApmC,EAAA,CACA,IAAAylD,EAAAJ,EAAAnR,UAAAzvE,EAAAgpB,YAAoE8mD,GAAU/sE,aAC9Ei+E,EAAA5iB,mBAAA,KAAA7iC,GACAylD,EAAAvjB,oBAAAllB,EAAAygB,GAEA,IAAAyF,EAAAz+D,EAAA4hE,UACA,GAAAnD,EAAA,CACA,IAAAsiB,EAAAH,EAAAnR,UAAAzvE,EAAAgpB,YAA8D8mD,GAAUE,MACxE+Q,EAAAviB,aAAAC,EAAAmiB,EAAAjR,cAAA,IACAoR,EAAA5iB,SAAA5lB,EAAAygB,KA7LAooB,aAwMA,SAAAR,EAAAroC,EAAAv4C,EAAAg5D,GACA,IAAA9tB,EAAAlrC,EAAA0hE,UACAnmC,EAAAv7B,EAAA2hE,YACA,GAAApmC,GAAA2P,EAAA,CACA,IAAA+1C,EAAAL,EAAAnR,UAAAzvE,EAAAgpB,YAAiE8mD,GAAU7sE,SAC3Eg+E,EAAA7iB,mBAAAlzB,EAAA3P,GACA0lD,EAAApjB,iBAAAtlB,EAAAygB,GAEA,IAAAyF,EAAAz+D,EAAA4hE,UACA,GAAAnD,EAAA,CACA,IAAAsiB,EAAAH,EAAAnR,UAAAzvE,EAAAgpB,YAA8D8mD,GAAUE,MACxE+Q,EAAAviB,aAAAC,EAAAmiB,EAAAjR,cAAA,IACAoR,EAAA5iB,SAAA5lB,EAAAygB,KAnNAqoB,mBA0IA,SAAAT,EAAAroC,EAAAv4C,EAAAg5D,GACA,IACAxrE,EAAAgI,EADAssE,EAAAvpB,EAAAwpB,qBAEA,IAAAv0E,EAAA,EAAAgI,EAAAssE,EAAAp0E,OAAqCF,EAAAgI,IAAQhI,EAAA,CAC7C,IAAA8zF,EACAX,GAAA7e,EAAAt0E,GAAAm1B,WACA2+D,EAAAV,EAAA9e,EAAAt0E,GAAAwS,EAAAg5D,KA/IAqjB,OAyCA,SAAAuE,EAAAroC,EAAAv4C,EAAAg5D,GACA,IAAA9tB,EAAAlrC,EAAA0hE,UACAnmC,EAAAv7B,EAAA2hE,YACA,GAAAz2B,GAAA3P,EAAA,CACA,IAAAgmD,EAAAX,EAAAnR,UAAAzvE,EAAAgpB,YAAgE8mD,GAAUxsE,QAC1Ei+E,EAAAnjB,mBAAAlzB,EAAA3P,GACAgmD,EAAArkB,WAAA3kB,EAAAygB,GAEA,IAAAyF,EAAAz+D,EAAA4hE,UACA,GAAAnD,EAAA,CACA,IAAAsiB,EAAAH,EAAAnR,UAAAzvE,EAAAgpB,YAA8D8mD,GAAUE,MACxE+Q,EAAAviB,aAAAC,EAAAmiB,EAAAjR,cAAA,IACAoR,EAAA5iB,SAAA5lB,EAAAygB,MA5CO,SAAAwoB,GAAAC,EAAAC,GACP,OAAA9tD,SAAkB/lC,OAAA+zB,EAAA,EAAA/zB,CAAM4zF,GAAA,IAAA7tD,SAA2B/lC,OAAA+zB,EAAA,EAAA/zB,CAAM6zF,GAAA,IASlD,SAAAC,GAAA3pF,EAAA+6B,GACP,IAAAvQ,EAAAo/D,GAAA5pF,EAAA+6B,GACA,OAAAvQ,IASO,SAAAo/D,GAAA5pF,EAAA+6B,GACP,OAAA2tD,GAAA1oF,EAAA+6B,EAqCO,SAAA8uD,GAAAjB,EAAA5nB,EAAAh5D,EAAA0iB,EAAA/nB,EAAA4sE,GACP,IAAAj+B,GAAA,EACAg1B,EAAAt+D,EAAA8nC,WACA,GAAAw2B,EAAA,CACA,IAAAqM,EAAArM,EAAAuiB,gBACAlW,GAAsB3O,GAAA,EAAU92D,QAAAylE,GAAyB3O,GAAA,EAAUj6D,MACnEu8D,EAAAwjB,oBAAAnnF,EAAA4sE,IAEAoD,GAAwB3O,GAAA,EAAUh3D,MAClCs5D,EAAAhgC,OAEAqsC,EAAArM,EAAAuiB,gBACAviB,EAAAyjB,kBAAApnF,EAAA4sE,GACAj+B,GAAA,GAKA,OAUA,SAAAs3C,EAAA5nB,EAAAh5D,EAAA0iB,GACA,IAAA61B,EAAAv4C,EAAA6hE,qBAAA7hE,CAAAg5D,GACA,IAAAzgB,EACA,OAEA,IAAAx0B,EAAAw0B,EAAA91B,sBAAAC,GAEA,GADA1iB,EAAA05D,eAgBA,SAAAsoB,EAAApB,EAAAroC,EAAAv4C,EAAAg5D,GACA,GAAAzgB,EAAA51B,WAA4BoJ,GAAA,EAAY1oB,oBAAA,CAExC,IADA,IAAAy+D,EAAgF,EAAAmgB,gBAChFz0F,EAAA,EAAAgI,EAAAssE,EAAAp0E,OAA2CF,EAAAgI,IAAQhI,EACnDw0F,EAAApB,EAAA9e,EAAAt0E,GAAAwS,EAAAg5D,GAEA,OAEA,IAAAyf,EAAAmI,EAAAnR,UAAAzvE,EAAAgpB,YAAwD8mD,GAAUC,SAClE0I,EAAA3b,WAA2E,EAAA9D,EAAAh5D,EAAA05D,eAvB3EsoB,CAAApB,EAAA78D,EAAA/jB,EAAAg5D,OACG,CACH,IAAAsoB,EAAAX,GAAA58D,EAAApB,WACA2+D,EAAAV,EAAA78D,EAAA/jB,EAAAg5D,IAvBAkpB,CAAAtB,EAAA5nB,EAAAh5D,EAAA0iB,GAEA4mB,EC9FA,IAAI64C,GAAyB,SAAAzY,GAC7B,SAAA0Y,EAAAC,GAEA3Y,EAAA17E,KAAAsZ,KAAA+6E,GAMA/6E,KAAAq3E,eAAA0D,EAAAC,eAAuDC,KAAK,OAAA5xF,GAAA,KAM5D2W,KAAAk7E,QAAA,EAMAl7E,KAAAm7E,mBAAA,EAMAn7E,KAAAo7E,oBAAAxgE,IAMA5a,KAAAqmE,gBAA2B9/E,OAAAqgB,GAAA,EAAArgB,GAM3ByZ,KAAAq7E,qBAAA,KAMAr7E,KAAAs7E,aAAA,KAMAt7E,KAAAwlE,oBAAA,EAKAxlE,KAAA1I,QAAmB/Q,OAAAo9C,GAAA,EAAAp9C,GAEfA,OAAAugE,EAAA,EAAAvgE,CAAOw1E,GAAA,EAAYxQ,GAAA,EAASrxD,MAAA8F,KAAAu7E,oBAAAv7E,MA6UhC,OAzUAoiE,IAAA0Y,EAAA/3E,UAAAq/D,GACA0Y,EAAAt0F,UAAAD,OAAAmE,OAAA03E,KAAA57E,WACAs0F,EAAAt0F,UAAAwc,YAAA83E,EAKAA,EAAAt0F,UAAAg4B,gBAAA,WACIj4B,OAAAugE,EAAA,EAAAvgE,CAASw1E,GAAA,EAAYxQ,GAAA,EAASrxD,MAAA8F,KAAAu7E,oBAAAv7E,MAClCoiE,EAAA57E,UAAAg4B,gBAAA93B,KAAAsZ,OAQA86E,EAAAt0F,UAAAyX,QAAA,SAAA3G,EAAAsqB,EAAAJ,GACA,IAAAvzB,EAAA2zB,EAAA3zB,OACAw9B,EAAA7J,EAAA6J,WACAooC,EAAAryC,EAAAC,QACAG,EAAAiyC,mBAAA,GACA7Z,EAAAp4B,EAAAo4B,UACA/0C,EAAA+0C,EAAA/0C,WACAtU,EAAAqpD,EAAArpD,SACAi4B,EAAA3jB,EAAA9D,YACAq6E,EAA2Ex7E,KAAA4iE,WAAAzhD,YAE3E7nB,EAAA0G,KAAAyG,aAAAmb,EAAA,GAGA65D,EAAAj6D,EAAAvzB,OACAi2E,OAAA76E,IAAAoyF,EACAvX,GACAlkE,KAAA+zB,KAAAz8B,EAAAsqB,EAAiF,GAEjF,IAAA03D,EAAAt5E,KAAAs7E,aACA,GAAAhC,MAAA9rF,UAAA,CACAwS,KAAAq3E,gBACAr3E,KAAAq3E,eAAAr/E,QAEA,IAGA0jF,EAHAl9C,EAAqEx+B,KAAA4iE,WACrE+Y,EAAA,EACAC,EAAA,EAEAC,EAAA,IAAAr6D,EAAAjoB,QACAuiF,EAAAt9C,EAAA/f,YAAiDq0C,EAAA,EAAex5C,QAChE,GAAAuiE,GAAAC,EAAA,CACA,IAAAC,EAAAzkF,EAAA2T,OAAApT,MACAmkF,EAAA1kF,EAAA2T,OAAAzS,OACA,GAAA7H,EAAA,CACA,IAAAsrF,EAAApsF,KAAAo6B,MAAAp6B,KAAA4zB,KAAAs4D,IAAAC,MACAL,GAAAM,EAAAF,GAAA,EACAH,GAAAK,EAAAD,GAAA,EACAD,EAAAC,EAAAC,EAGAj8E,KAAA1I,QAAA2T,OAAApT,MAAAkkF,EACA/7E,KAAA1I,QAAA2T,OAAAzS,OAAAwjF,EACAN,EAAA17E,KAAA1I,aAEAokF,EAAApkF,EAGA,IAAAwC,EAAA4hF,EAAA3hF,YACA8hF,IAIAH,EAAA3hF,YAAAynB,EAAAjoB,SAGAmiF,GAAApkF,GACAokF,EAAAtiF,UAAAuiF,EAAAC,GAGA,IAAA/oB,EAAAjxC,EAAAixC,UACA+Z,IAAA/Z,EAAoCjkB,GAAA,EAAQ9kC,YAAA+oD,EAAyBjkB,GAAA,EAAQ7kC,cAC7ElS,EAAA+pB,EAAAhxB,KAAA,GAAA66B,EACAjzB,EAAAopB,EAAAhxB,KAAA,GAAA66B,EAIA,GAHMllC,OAAAw1E,GAAA,EAAAx1E,CAAcm1F,GAAA/qF,EACpBkH,EAAA,EAAAW,EAAA,GACA8gF,EAAAnI,OAAAuK,EAAApiF,EAAA3I,EAAAkjE,EAAA+Y,GACA4O,EAAAn5C,YAAAp9B,EAAAhE,aACW1a,OAAAqgB,GAAA,EAAArgB,CAAcqiC,EAAA36B,GAAA,CAKzB,IAJA,IAGAiL,EAHA/G,EAAAlE,EAAA,GACA46B,EAAyBtiC,OAAAqgB,GAAA,EAAArgB,CAAQqiC,GACjCszD,EAAA,EAEA/pF,EAAAy2B,EAAA,IAEA1vB,EAAA2vB,IADAqzD,EAEA5iF,EAAA0G,KAAAyG,aAAAmb,EAAA1oB,GACAogF,EAAAnI,OAAAuK,EAAApiF,EAAA3I,EAAAkjE,EAAA+Y,GACAz6E,GAAA02B,EAIA,IAFAqzD,EAAA,EACA/pF,EAAAlE,EAAA,GACAkE,EAAAy2B,EAAA,IAEA1vB,EAAA2vB,IADAqzD,EAEA5iF,EAAA0G,KAAAyG,aAAAmb,EAAA1oB,GACAogF,EAAAnI,OAAAuK,EAAApiF,EAAA3I,EAAAkjE,EAAA+Y,GACAz6E,GAAA02B,EASA,GANMtiC,OAAAw1E,GAAA,EAAAx1E,CAAcm1F,EAAA/qF,EACpBkH,EAAA,EAAAW,EAAA,GAEAsjF,GACA97E,KAAAgzD,oBAAA0oB,EAAA95D,EAAAtoB,GAEAoiF,GAAApkF,EAAA,CACA,GAAAukF,EAAA,CACA,IAAAM,EAAA7kF,EAAAyC,YACAzC,EAAAyC,YAAAynB,EAAAjoB,QACAjC,EAAAlB,UAAAslF,EAAAzwE,QAAA0wE,GAAAC,GACAtkF,EAAAyC,YAAAoiF,OAEA7kF,EAAAlB,UAAAslF,EAAAzwE,QAAA0wE,GAAAC,GAEAF,EAAAtiF,WAAAuiF,GAAAC,GAGAC,IACAH,EAAA3hF,YAAAD,GAIAoqE,GACA5sE,EAAA08B,WAOA8mD,EAAAt0F,UAAAs7E,aAAA,SAAAlgD,EAAAJ,EAAAlqB,GACA,IAAAgC,EAAA0G,KAAAyG,aAAAmb,EAAA,GACA5hB,KAAA8iE,WAAAxrE,EAAAsqB,EAAAtoB,GACA0G,KAAA/B,QAAA3G,EAAAsqB,EAAAJ,GACAxhB,KAAA6iE,YAAAvrE,EAAAsqB,EAAAJ,EAAAloB,IAMAwhF,EAAAt0F,UAAA+qE,2BAAA,SAAA/iE,EAAAozB,EAAAyvC,EAAArhE,EAAAiwE,GACA,GAAAjgE,KAAAs7E,aAEK,CACL,IAAA5qF,EAAAkxB,EAAAo4B,UAAAtpD,WACAC,EAAAixB,EAAAo4B,UAAArpD,SACA6tC,EAAqEx+B,KAAA4iE,WAErEnR,EAAA,GAaA,OAZAzxD,KAAAs7E,aAAA/pB,2BAAA/iE,EAAAkC,EAAAC,EAAA0gE,EAAA,GAKA,SAAAK,GACA,IAAA/mE,EAAoBpE,OAAA+zB,EAAA,EAAA/zB,CAAMmrE,GAC1B,KAAA/mE,KAAA8mE,GAEA,OADAA,EAAA9mE,IAAA,EACAqF,EAAAtJ,KAAAu5E,EAAAvO,EAAAlzB,IAES,QAQTs8C,EAAAt0F,UAAA+0F,oBAAA,SAAA9yF,GACA,IAAA+1C,EAAAx+B,KAAA4iE,WACApkC,EAAAG,cAAA3+B,KAAAs7E,cACA98C,EAAArhB,WASA29D,EAAAt0F,UAAA41F,wBAAA,SAAA3zF,GACAuX,KAAAmjE,2BAMA2X,EAAAt0F,UAAAq7E,aAAA,SAAAjgD,EAAAJ,GACA,IAAAu5D,EAAyE/6E,KAAA4iE,WACzE4Y,EAA2ET,EAAA55D,YAE3Ek7D,EAAAz6D,EAAAixC,UAAyCjkB,GAAA,EAAQ9kC,WACjDwyE,EAAA16D,EAAAixC,UAA2CjkB,GAAA,EAAQ7kC,aACnDwyE,EAAAxB,EAAAyB,0BACAC,EAAA1B,EAAA2B,4BAEA,IAAA18E,KAAAk7E,SAAAqB,GAAAF,IACAI,GAAAH,EACA,SAGA,IAAAK,EAAA/6D,EAAA3zB,OACA+rD,EAAAp4B,EAAAo4B,UACA/0C,EAAA+0C,EAAA/0C,WACAvU,EAAAspD,EAAAtpD,WACA+6B,EAAA7J,EAAA6J,WACAmxD,EAAA7B,EAAAhgE,cACA8hE,EAAA9B,EAAA+B,kBACAC,EAAAhC,EAAAiC,sBAEA3zF,IAAA0zF,IACAA,EAA+B7C,IAG/B,IAAAjsF,EAAiB1H,OAAAqgB,GAAA,EAAArgB,CAAMo2F,EACvBE,EAAAnsF,GACAk4B,EAAAoxB,EAAA/0C,WAAA9D,YAEA,GAAAq6E,EAAAn5C,YAAA2X,EAAA/0C,WAAAhE,aACS1a,OAAAqgB,GAAA,EAAArgB,CAAcqiC,EAAAhH,EAAA3zB,QAAA,CAMvB,IAAA46B,EAAuBtiC,OAAAqgB,GAAA,EAAArgB,CAAQqiC,GAC/BsJ,EAAAriC,KAAAE,IAA4BxJ,OAAAqgB,GAAA,EAAArgB,CAAQ0H,GAAA,EAAA46B,GACpC56B,EAAA,GAAA26B,EAAA,GAAAsJ,EACAjkC,EAAA,GAAA26B,EAAA,GAAAsJ,EAGA,IAAAlyB,KAAAk7E,QACAl7E,KAAAo7E,qBAAA1qF,GACAsP,KAAAm7E,mBAAAyB,GACA58E,KAAAq7E,sBAAA0B,GACQx2F,OAAAqgB,GAAA,EAAArgB,CAAcyZ,KAAAqmE,gBAAAp4E,GAEtB,OADA+R,KAAAwlE,oBAAA,GACA,EAGAxlE,KAAAs7E,aAAA,KAEAt7E,KAAAk7E,QAAA,EAEA,IAAA5B,EAAA,IAA0BH,GACpBmB,GAAkB5pF,EAAA+6B,GAAAx9B,EAAAyC,EACxB+6B,EAAA+vD,EAAAyB,cAAAj9E,KAAAq3E,eAAA0D,EAAA+B,mBACAtB,EAAA0B,aAAAjvF,EAAAyC,EAAAuU,GAKA,IAAA8c,EAAA,SAAA2vC,GACA,IAAAyrB,EACAC,EAAA1rB,EAAA2rB,oBAAAtC,EAAAsC,mBAIA,GAHAD,IACAD,EAAAC,EAAA1rB,EAAAhhE,IAEAysF,EAAA,CACA,IAAAG,EAAAt9E,KAAAu6E,cACA7oB,EAAAhhE,EAAA+6B,EAAA0xD,EAAA7D,GACAt5E,KAAAk7E,OAAAl7E,KAAAk7E,QAAAoC,IAEK1yF,KAAAoV,MACL,GAAA+8E,EAAA,CAEA,IAAAtrB,EAAA,GACA+pB,EAAA+B,uBAAAtvF,EAIA,SAAAyjE,GACAD,EAAAnrE,KAAAorE,KAEAD,EAAAjpD,KAAAu0E,GACA,QAAA72F,EAAA,EAAAgI,EAAAujE,EAAArrE,OAA2CF,EAAAgI,IAAQhI,EACnD67B,EAAA0vC,EAAAvrE,SAGAs1F,EAAA+B,uBAAAtvF,EAAA8zB,GAWA,OATAu3D,EAAA5K,SAEA1uE,KAAAo7E,oBAAA1qF,EACAsP,KAAAm7E,kBAAAyB,EACA58E,KAAAq7E,qBAAA0B,EACA/8E,KAAAqmE,gBAAAp4E,EACA+R,KAAAs7E,aAAAhC,EAEAt5E,KAAAwlE,oBAAA,GACA,GAWAsV,EAAAt0F,UAAA+zF,cAAA,SAAA7oB,EAAAhhE,EAAA+6B,EAAA0xD,EAAA7D,GACA,IAAA6D,EACA,SAEA,IAAAn7C,GAAA,EACA,GAAA5kC,MAAA2K,QAAAo1E,GACA,QAAAj3F,EAAA,EAAAgI,EAAAivF,EAAA/2F,OAAyCF,EAAAgI,IAAQhI,EACjD87C,EAAkBu4C,GAClBjB,EAAA5nB,EAAAyrB,EAAAj3F,GACUm0F,GAAyB3pF,EAAA+6B,GACnCzrB,KAAAo8E,wBAAAp8E,OAAAgiC,OAGAA,EAAgBu4C,GAChBjB,EAAA5nB,EAAAyrB,EACQ9C,GAAyB3pF,EAAA+6B,GACjCzrB,KAAAo8E,wBAAAp8E,MAEA,OAAAgiC,GAGA84C,EAvY6B,CAwY3B5Y,IAQF2Y,GAAyB,iBAAAr8C,GACzB,OAAAA,EAAAnjB,YAA6B2pD,GAAA,EAAS7rD,QAUtC0hE,GAAyB,gBAAA/U,EAAAtnC,GACzB,WAAaq8C,GAA6E,IAI3E,IAAA2C,GAAA,GCraAC,GAAA,CACfzkE,MAAA,QACA0kE,OAAA,SACAvkE,OAAA,4BCaAwkE,GAAA,CACAnkF,MAAA,CAAYgvE,GAAU7sE,QAAU6sE,GAAUxsE,OACtCwsE,GAAU/sE,YAAc+sE,GAAUxvD,MAAQwvD,GAAUE,MACxDkV,OAAA,CAAapV,GAAU7sE,QAAU6sE,GAAU/sE,cAO3CoiF,GAAA,CACArkF,MAAA,CAAYgvE,GAAUC,SACtBmV,OAAA,CAAapV,GAAUxvD,MAAQwvD,GAAUE,KAAOF,GAAUC,SAC1DqV,OAAYjT,IASRkT,GAA6B,SAAA9X,GACjC,SAAA+X,EAAAx/C,GAEAynC,EAAAv/E,KAAAsZ,KAAAw+B,GAAA,GAMAx+B,KAAAq3E,eAAA74C,EAAAw8C,eAAiDC,KAAK,OAAA5xF,GAAA,KAMtD2W,KAAAk7E,QAAA,EAMAl7E,KAAAi+E,uBAMAj+E,KAAAk+E,cAAyB33F,OAAAwzB,GAAA,EAAAxzB,GAEzB,IAAA43F,EAAA3/C,EAAAonC,gBAGA5lE,KAAA2mE,WAAAwX,IAAqCV,GAAoBtkE,OAAA,IAEzDglE,IAAuBV,GAAoBtkE,SAC3CnZ,KAAA1I,QAAqB/Q,OAAAo9C,GAAA,EAAAp9C,IAIjBA,OAAAugE,EAAA,EAAAvgE,CAAOw1E,GAAA,EAAYxQ,GAAA,EAASrxD,MAAA8F,KAAAu7E,oBAAAv7E,MAuYhC,OAnYAimE,IAAA+X,EAAAj7E,UAAAkjE,GACA+X,EAAAx3F,UAAAD,OAAAmE,OAAAu7E,KAAAz/E,WACAw3F,EAAAx3F,UAAAwc,YAAAg7E,EAKAA,EAAAx3F,UAAAg4B,gBAAA,WACIj4B,OAAAugE,EAAA,EAAAvgE,CAASw1E,GAAA,EAAYxQ,GAAA,EAASrxD,MAAA8F,KAAAu7E,oBAAAv7E,MAClCimE,EAAAz/E,UAAAg4B,gBAAA93B,KAAAsZ,OAMAg+E,EAAAx3F,UAAA+hD,QAAA,SAAAp0B,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,GACA,IAAAg+B,EAAAgjC,EAAAz/E,UAAA+hD,QAAA7hD,KAAAsZ,KAAAmU,EAAA/lB,EAAAC,EAAAo9B,EAAAxmB,GAOA,OANAg+B,EAAA5hB,aAA4B6hB,EAAA,EAAStlC,SACrCoC,KAAAo+E,mBAAoF,EAAA3yD,EAAAxmB,GACpFjF,KAAA1I,SACA0I,KAAAq+E,iBAAoF,EAAA5yD,EAAAxmB,IAGpFg+B,GAMA+6C,EAAAx3F,UAAAuhF,aAAA,SAAA9kC,GACA,IAAAijC,EAAqElmE,KAAA4iE,WACrE,OAAiE,EAAApiC,SAAA0lC,IAMjE8X,EAAAx3F,UAAAq7E,aAAA,SAAAjgD,EAAAJ,GACA,IACA88D,EADmEt+E,KAAA4iE,WACnE7nD,cAKA,OAJA/a,KAAAi+E,wBAAAK,IACAt+E,KAAAumE,cAAAngF,OAAA,GAEA4Z,KAAAi+E,uBAAAK,EACArY,EAAAz/E,UAAAq7E,aAAAn7E,KAAAsZ,KAAA4hB,EAAAJ,IASAw8D,EAAAx3F,UAAA43F,mBAAA,SAAAn7C,EAAAxX,EAAAxmB,GACA,IAAAs5E,EAAAv+E,KAEAw+B,EAAmEx+B,KAAA4iE,WACnE4b,EAAAhgD,EAAAzjB,cACA0jE,EAAyEjgD,EAAAw+C,kBAAA,KAEzE0B,EAAAz7C,EAAA07C,eAAAngD,GACA,GAAAkgD,EAAApB,OAAAoB,EAAApY,kBAAAkY,GACAE,EAAAE,qBAAAH,EADA,CAyEA,IApEA,IAAA/5E,EAAyE85B,EAAArd,YACzEmkB,EAAA5gC,EAAA8jC,cAEA93C,EADAgU,EAAA+jC,yBAAAxjC,GACA8M,cAAAkxB,EAAA1uB,UAAA,IACAmzD,EAAAzkC,EAAAh1C,OAEA4wF,EAAA,SAAAv0F,EAAAw0F,GACA,IAAAC,EAAA97C,EAAAsF,QAAAtF,EAAA+7C,SAAA10F,IACA,GAAAy0F,EAAA19D,YAAmC6hB,EAAA,EAAStlC,OAA5C,CAIA,IAAAqhF,EAAAF,EAAAxqE,UACA2qE,EAAA55C,EAAAc,mBAAA64C,GACAE,EAAyB54F,OAAAqgB,GAAA,EAAArgB,CAAemhF,EAAAwX,GACxCE,EAA2B74F,OAAAqgB,GAAA,EAAArgB,CAAM24F,EAAAC,GAAA,KACzB54F,OAAAqgB,GAAA,EAAArgB,CAAM44F,EAAA3gD,EAAAs+C,kBAAApsF,EAAA6tF,EAAA9X,WACd4Y,EAAAN,EAAA38C,gBACAk9C,GAAA,EACW/4F,OAAAi1B,GAAA,EAAAj1B,CAAoB0e,EAAAo6E,KAC/BC,GAAA,EACAP,EAAAQ,cAAAt6E,IAEAy5E,EAAApB,OAAA,EACA,IAAAhE,EAAA,IAA4BH,GAAiB,EAAAgG,EAAAzuF,EAC7C+6B,EAAA/mB,EAAAu4E,cAAAsB,EAAAlH,eAAA74C,EAAAs+C,mBACA1hE,EAA6Bi/D,GAAyB3pF,EAAA+6B,GAMtD1J,EAAA,SAAA2vC,GACA,IAAAyrB,EACAC,EAAA1rB,EAAA2rB,oBAAA7+C,EAAA6+C,mBAIA,GAHAD,IACAD,EAAAC,EAAA1rB,EAAAhhE,IAEAysF,EAAA,CACA,IAAAG,EAAAt9E,KAAAu6E,cAAA7oB,EAAAt2C,EAAA+hE,EAAA7D,GACAt5E,KAAAk7E,OAAAl7E,KAAAk7E,QAAAoC,EACAoB,EAAApB,MAAAoB,EAAApB,WAIA7rB,EAAAstB,EAAAS,cACAf,OAAAC,EAAAE,qBACAntB,EAAAjpD,KAAAi2E,GAEA,QAAAv4F,EAAA,EAAAgI,EAAAujE,EAAArrE,OAA2CF,EAAAgI,IAAQhI,EAAA,CACnD,IAAAwrE,EAAAD,EAAAvrE,GACAo5F,IACAD,EAAAj+E,YAA2CE,GAAA,EAAKkR,cAEhD6sE,EAAAt9E,eAAAm9E,GAEAG,EAAAv9E,UAAAi9E,EAAA59E,cAEAuwD,EAAAl2B,cAAAliC,UAAA+lF,EAAAp6E,IAEAm6E,IAA+B74F,OAAAqgB,GAAA,EAAArgB,CAAU64F,EAAA1tB,EAAAl2B,cAAAr6B,cACzC4gB,EAAAr7B,KAAA63F,EAAA7sB,GAGA4nB,EAAA5K,SACAqQ,EAAAU,eAAAjhD,EAAAyE,EAAA1uB,UAAAsC,WAAAyiE,KAGAhvF,EAAA,EAAAw0F,EAAA77C,EAAA+7C,SAAA54F,OAA8CkE,EAAAw0F,IAAQx0F,EAAAu0F,EAAAv0F,GACtDo0F,EAAApY,iBAAAkY,EACAE,EAAAE,oBAAAH,IAMAT,EAAAx3F,UAAA+qE,2BAAA,SAAA/iE,EAAAozB,EAAAyvC,EAAArhE,EAAAiwE,GACA,IAAAvvE,EAAAkxB,EAAAo4B,UAAAtpD,WACAC,EAAAixB,EAAAo4B,UAAArpD,SACA0gE,EAAAhoE,MAAAgoE,EAAA,EAAAA,EACA,IAMA+tB,EAAA73E,EACArhB,EAAAgI,EAPAswC,EAAAx+B,KAAA4iE,WAEAnR,EAAA,GAEA8U,EAAqFvmE,KAAA,cAIrF,IAAA9Z,EAAA,EAAAgI,EAAAq4E,EAAAngF,OAA0CF,EAAAgI,IAAQhI,EAAA,CAClD,IAAA+8C,EAAAsjC,EAAArgF,GAEA,GADAk5F,EAAuB74F,OAAAqgB,GAAA,EAAArgB,CAAM08C,EAAAh1C,OAAAojE,EAAA3gE,EAAA0uF,GAClB74F,OAAAqgB,GAAA,EAAArgB,CAAkB64F,EAAA5wF,GAG7B,QAAAlE,EAAA,EAAAw0F,EAAA77C,EAAA+7C,SAAA54F,OAAgDkE,EAAAw0F,IAAQx0F,EAAA,CACxD,IAAAy0F,EAAA97C,EAAAsF,QAAAtF,EAAA+7C,SAAA10F,IACA,GAAAy0F,EAAA19D,YAAqC6hB,EAAA,EAAStlC,OAA9C,CAGA,IAAA07E,EAAuDyF,EAAAW,eAAAlhD,EACvDyE,EAAA1uB,UAAAsC,YACAtP,KAAA+xE,EAAA/nB,2BAAA/iE,EAAAkC,EAAAC,EAAA0gE,EAAA,GAKA,SAAAK,GACA,IAAA/mE,EAAsBpE,OAAA+zB,EAAA,EAAA/zB,CAAMmrE,GAC5B,KAAA/mE,KAAA8mE,GAEA,OADAA,EAAA9mE,IAAA,EACAqF,EAAAtJ,KAAAu5E,EAAAvO,EAAAlzB,IAEW,QAGX,OAAAj3B,GASAy2E,EAAAx3F,UAAAm5F,oBAAA,SAAA18C,EAAArhB,GACA,IAEA/f,EAFA7B,KAAA4iE,WACyEzhD,YACzEqnB,cACAj0B,EAAA0uB,EAAA1uB,UACAg+C,EAAA1wD,EAAAkQ,cAAAwC,EAAA,IACAylC,EAAAp4B,EAAAo4B,UACAvuB,EAAA7J,EAAA6J,WACAm0D,EAAA5lC,EAAAtpD,WAAA+6B,EACAi8C,EAAA7lE,EAAAukC,mBAAA7xB,EAAAvU,KAAAymE,WACAh2E,EAAAupD,EAAAvpD,OACA83B,EAAiBhiC,OAAAqgB,GAAA,EAAArgB,CAAUmhF,GAC3B92E,EAAAgxB,EAAAhxB,KACAsI,EAAArJ,KAAAo6B,MAAAwB,EAAA76B,EAAA,MACAuI,EAAAtJ,KAAAo6B,MAAAwB,EAAA76B,EAAA,MACA,OAAWrK,OAAAwzB,GAAA,EAAAxzB,CAAgByZ,KAAAk+E,cAC3BhlF,EAAAC,EACAo5D,EAAAqtB,EAAArtB,EAAAqtB,EACA5lC,EAAArpD,UACA43B,EAAA,GAAA93B,EAAA,IAAA8hE,GACA9hE,EAAA,GAAA83B,EAAA,IAAAgqC,IAMAyrB,EAAAx3F,UAAA+0F,oBAAA,SAAA9yF,GACA,IAAA+1C,EAAAx+B,KAAA4iE,WACApkC,EAAAG,mBAAAt1C,IAAA2W,KAAAi+E,wBACAz/C,EAAArhB,WASA6gE,EAAAx3F,UAAA41F,wBAAA,SAAA3zF,GACAuX,KAAAmjE,2BAMA6a,EAAAx3F,UAAAq8E,YAAA,SAAAvrE,EAAAsqB,EAAAJ,GACA,IAAAgd,EAAmEx+B,KAAA4iE,WACnEub,EAAA3/C,EAAAonC,gBACA,GAAAuY,GAAsBV,GAAoBzkE,MAAA,CAC1C,IAMA9f,EAAAC,EANAk/E,EAAA75C,EAAAw8C,eAAA,GAAsD,KACtDt2E,EAA2E85B,EAAArd,YAC3E+3D,EAAA2E,GAAAM,GACA1yD,EAAA7J,EAAA6J,WACA96B,EAAAixB,EAAAo4B,UAAArpD,SACAC,EAAAgxB,EAAAhxB,KAEAD,IACAuI,EAAArJ,KAAAo6B,MAAAwB,EAAA76B,EAAA,MACAuI,EAAAtJ,KAAAo6B,MAAAwB,EAAA76B,EAAA,MACQrK,OAAAw1E,GAAA,EAAAx1E,CAAc+Q,GAAA3G,EAAAuI,EAAAC,IAEtBk/E,GACAr4E,KAAAq3E,eAAAr/E,QAQA,IANA,IAAA66D,EAAAjxC,EAAAixC,UACA+Z,IAAA/Z,EAAoCjkB,GAAA,EAAQ9kC,YAAA+oD,EAAyBjkB,GAAA,EAAQ7kC,cAC7Ek5D,EAAAjjE,KAAAumE,cACA1kE,EAAA6C,EAAA+jC,yBAAA7mB,EAAAo4B,UAAA/0C,YACA46E,EAAA,GACAhY,EAAA,GACA3hF,EAAA+8E,EAAA78E,OAAA,EAAoCF,GAAA,IAAQA,EAAA,CAC5C,IAAA+8C,EAAyEggC,EAAA/8E,GACzE,GAAA+8C,EAAA5hB,YAA+B6hB,EAAA,EAASplC,MAMxC,IAHA,IAAAyW,EAAA0uB,EAAA1uB,UACAurE,EAAAj+E,EAAAukC,mBAAA7xB,EAAAvU,KAAAymE,WAAA,GAAAxjC,EAAAh1C,OAAA,GACAqL,OAAAjQ,EACAiB,EAAA,EAAAw0F,EAAA77C,EAAA+7C,SAAA54F,OAAkDkE,EAAAw0F,IAAQx0F,EAAA,CAC1D,IAAAy0F,EAAA97C,EAAAsF,QAAAtF,EAAA+7C,SAAA10F,IACA,GAAAy0F,EAAA19D,YAAuC6hB,EAAA,EAAStlC,OAAhD,CAGA,IAAA07E,EAAyDyF,EAAAW,eAAAlhD,EAAAjqB,EAAAsC,YACzD,GAAAyiE,KAAArB,WAAAiB,GAAA,CAKA5/E,IACAA,EAAA0G,KAAAyG,aAAAmb,EAAAk+D,IAEA,IAAAnc,EAAAob,EAAAxqE,UAAA,GACAwrE,EAAAzG,EAAAtB,cAAA1+E,GACAhC,EAAAk8B,OACAl8B,EAAAyC,YAAAynB,EAAAjoB,QAGA,QAAA0D,EAAA,EAAAgiB,EAAA4gE,EAAAz5F,OAA4C6W,EAAAgiB,IAAQhiB,EAAA,CACpD,IAAA82B,EAAA8rD,EAAA5iF,GACA0mE,EAAAkE,EAAA5qE,KACA3F,EAAAm8B,YAEAn8B,EAAAu8B,OAAAksD,EAAA,GAAAA,EAAA,IACAzoF,EAAAw8B,OAAAisD,EAAA,GAAAA,EAAA,IACAzoF,EAAAw8B,OAAAisD,EAAA,GAAAA,EAAA,IACAzoF,EAAAw8B,OAAAisD,EAAA,GAAAA,EAAA,IAEAzoF,EAAAu8B,OAAAE,EAAA,GAAAA,EAAA,IACAz8B,EAAAw8B,OAAAC,EAAA,GAAAA,EAAA,IACAz8B,EAAAw8B,OAAAC,EAAA,GAAAA,EAAA,IACAz8B,EAAAw8B,OAAAC,EAAA,GAAAA,EAAA,IACAz8B,EAAAy8B,QAGAulD,EAAAnI,OAAA75E,EAAAgC,EAAA3I,EAAA,GAA6Di8E,EAAAsM,EAAAb,GAC7D/gF,EAAA08B,UACA6rD,EAAAv5F,KAAAy5F,GACAlY,EAAAvhF,KAAAq9E,MAGA0U,GJ6EO,SAAAA,EAAA/gF,EAAA3G,EAAAi8E,GAGP,IAFA,IAAA/E,EAAAthF,OAAA2N,KAAAmkF,GAAAxnE,IAAA4D,QAAAjM,KAA0D+P,EAAA,GAC1Ds7C,EAAA,GACA1/C,EAAA,EAAA6rE,EAAAnY,EAAAzhF,OAAiC+tB,EAAA6rE,IAAQ7rE,EAEzC,IADA,IAAA8rE,EAAA5H,EAAAxQ,EAAA1zD,GAAA0C,YACA3wB,EAAA,EAAAgI,EAAA+xF,EAAA75F,OAA2CF,EAAAgI,GAAQ,CACnD,IAAAijF,EAAA8O,EAAA/5F,KACAoT,EAAA2mF,EAAA/5F,KACAirF,SAAA75E,EAAAgC,EAAA3I,EAAAkjE,EAAA+Y,IIpFQsT,CAAe7H,EAAA/gF,EAAA3G,EAAAi8E,GAEvBj8E,GACQpK,OAAAw1E,GAAA,EAAAx1E,CAAc+Q,EAAA3G,EACM,EAAiC,GAG7Ds1E,EAAAz/E,UAAAq8E,YAAAn8E,KAAAsZ,KAAA1I,EAAAsqB,EAAAJ,IAUAw8D,EAAAx3F,UAAA+zF,cAAA,SAAA7oB,EAAAt2C,EAAA+hE,EAAA7D,GACA,IAAA6D,EACA,SAEA,IAAAn7C,GAAA,EACA,GAAA5kC,MAAA2K,QAAAo1E,GACA,QAAAj3F,EAAA,EAAAgI,EAAAivF,EAAA/2F,OAAyCF,EAAAgI,IAAQhI,EACjD87C,EAAkBu4C,GAClBjB,EAAA5nB,EAAAyrB,EAAAj3F,GAAAk1B,EACApb,KAAAo8E,wBAAAp8E,OAAAgiC,OAGAA,EAAgBu4C,GAChBjB,EAAA5nB,EAAAyrB,EAAA/hE,EACApb,KAAAo8E,wBAAAp8E,MAEA,OAAAgiC,GASAg8C,EAAAx3F,UAAA63F,iBAAA,SAAAp7C,EAAAxX,EAAAxmB,GACA,IAAAu5B,EAAmEx+B,KAAA4iE,WACnE8b,EAAAz7C,EAAA07C,eAAAngD,GACAggD,EAAAhgD,EAAAzjB,cACAm9D,EAAAyF,GAAAn/C,EAAAonC,iBACA,GAAAsS,GAAAwG,EAAAyB,uBAAA3B,EAAA,CACAE,EAAAyB,qBAAA3B,EACA,IAAAjqE,EAAA0uB,EAAAuC,iBACArxB,EAAAI,EAAA,GACA7P,EAA2E85B,EAAArd,YAC3Etf,EAAA6C,EAAA+jC,yBAAAxjC,GACAvU,EAAAmR,EAAAkQ,cAAAoC,GACA7c,EAAA2rC,EAAA/3B,WAAAszB,GACA5tC,EAAA8T,EAAAokC,iBAAA30B,EAAAsX,EAAAxmB,GACA3N,EAAA2T,OAAApT,MAAAjH,EAAA,GACA0G,EAAA2T,OAAAzS,OAAA5H,EAAA,GAEA,IADA,IAAA82E,EAAA7lE,EAAAukC,mBAAA7xB,EAAAvU,KAAAymE,WACAvgF,EAAA,EAAAgI,EAAA+0C,EAAA+7C,SAAA54F,OAAgDF,EAAAgI,IAAQhI,EAAA,CACxD,IAAA64F,EAAA97C,EAAAsF,QAAAtF,EAAA+7C,SAAA94F,IACA,GAAA64F,EAAA19D,YAAqC6hB,EAAA,EAAStlC,OAA9C,CAGA,IAAAwiF,EAAA30D,EAAA/6B,EACA4I,EAAwB/S,OAAAwzB,GAAA,EAAAxzB,CAAcyZ,KAAAk+E,eAC9B33F,OAAAwzB,GAAA,EAAAxzB,CAAc+S,EAAA8mF,MACd75F,OAAAwzB,GAAA,EAAAxzB,CAAkB+S,GAAAouE,EAAA,IAAAA,EAAA,IAC6BqX,EAAAW,eAAAlhD,EACvDyE,EAAA1uB,UAAAsC,YACAs6D,OAAA75E,EAAAgC,EAAA,MAAoD,EAAA4+E,OAKpD8F,EA9aiC,CA+a/B/V,IAQF8V,GAA6B,iBAAAv/C,GAC7B,OAAAA,EAAAnjB,YAA6B2pD,GAAA,EAAS9rD,aAUtC6kE,GAA6B,gBAAAjY,EAAAtnC,GAC7B,WAAau/C,GAAqF,IAInF,IAAAsC,GAAA,GC9bXC,GAAG,SAAAlzB,GACP,SAAAmzB,EAAAxgF,IACAA,EAAcxZ,OAAAwO,GAAA,EAAAxO,CAAM,GAAGwZ,IACvBwtD,WACAxtD,EAAAwtD,SAAyBhnE,OAAAi6F,GAAA,EAAAj6F,IAEzBwZ,EAAAk+C,eACAl+C,EAAAk+C,aAA6B13D,OAAAiqE,GAAA,EAAAjqE,IAG7B6mE,EAAA1mE,KAAAsZ,KAAAD,GAkBA,OAfAqtD,IAAAmzB,EAAAx9E,UAAAqqD,GACAmzB,EAAA/5F,UAAAD,OAAAmE,OAAA0iE,KAAA5mE,WACA+5F,EAAA/5F,UAAAwc,YAAAu9E,EAEAA,EAAA/5F,UAAAmpE,eAAA,WACA,IAAA8F,EAAA,IAAuB2L,GAAiBphE,MAOxC,OANAy1D,EAAAoK,uBAAA,CACMkG,GACAkC,GACAuV,GACA6C,KAEN5qB,GAGA8qB,EA5BO,CA6BLpzB,IAGa3hE,EAAA,qGC6OR,SAAAu2B,EAAA0+D,GACPzgF,KAAA0gF,eAAAD,EAAA7+D,YAIe,IAAA++D,EArSA,SAAAh0D,GACf,SAAAi0D,EAAA/qE,GAEA,IAAA9V,EAAA8V,GAAA,GAEA8W,EAAAjmC,KAAAsZ,KAAA,CACA6X,QAAAhwB,SAAAG,cAAA,OACA+5B,OAAAhiB,EAAAgiB,UACA94B,OAAA8W,EAAA9W,SAOA+W,KAAA6gF,WAAAh5F,SAAAG,cAAA,MAMAgY,KAAA8gF,gBAAAz3F,IAAA0W,EAAAghF,WAAAhhF,EAAAghF,UAMA/gF,KAAAghF,0BAAA33F,IAAA0W,EAAAkhF,YAMAjhF,KAAAkhF,kBAAA73F,IAAA0W,EAAAkhF,aACAlhF,EAAAkhF,YAEAjhF,KAAAkhF,eACAlhF,KAAA8gF,YAAA,GAGA,IAAA5lD,OAAA7xC,IAAA0W,EAAAm7B,UAAAn7B,EAAAm7B,UAAA,iBAEAimD,OAAA93F,IAAA0W,EAAAohF,SAAAphF,EAAAohF,SAAA,eAEAC,OAAA/3F,IAAA0W,EAAAqhF,cAAArhF,EAAAqhF,cAAA,IAEA,iBAAAA,GAKAphF,KAAAqhF,eAAAx5F,SAAAG,cAAA,QACAgY,KAAAqhF,eAAA5oF,YAAA2oF,GAEAphF,KAAAqhF,eAAAD,EAGA,IAAAnQ,OAAA5nF,IAAA0W,EAAAkxE,MAAAlxE,EAAAkxE,MAAA,IAEA,iBAAAA,GAKAjxE,KAAAshF,OAAAz5F,SAAAG,cAAA,QACAgY,KAAAshF,OAAA7oF,YAAAw4E,GAEAjxE,KAAAshF,OAAArQ,EAIA,IAAAsQ,EAAAvhF,KAAAkhF,eAAAlhF,KAAA8gF,WACA9gF,KAAAqhF,eAAArhF,KAAAshF,OACAt0E,EAAAnlB,SAAAG,cAAA,UACAglB,EAAA5kB,aAAA,iBACA4kB,EAAAw0E,MAAAL,EACAn0E,EAAAzjB,YAAAg4F,GAEIh7F,OAAAo+C,EAAA,EAAAp+C,CAAMymB,EAAS+1B,EAAA,EAAS3oC,MAAA4F,KAAAyhF,aAAAzhF,MAE5B,IAAA0hF,EAAAxmD,EAAA,IAAuCqmC,EAAA,EAAkB,IAASA,EAAA,GAClEvhE,KAAA8gF,YAAA9gF,KAAAkhF,aAAA,IAAsD3f,EAAA,EAAe,KACrEvhE,KAAAkhF,aAAA,wBACArpE,EAAA7X,KAAA6X,QACAA,EAAAqjB,UAAAwmD,EACA7pE,EAAAtuB,YAAAyW,KAAA6gF,YACAhpE,EAAAtuB,YAAAyjB,GAOAhN,KAAA2hF,sBAAA,GAMA3hF,KAAA0hE,kBAAA,EAmLA,OA/KA/0C,IAAAi0D,EAAA79E,UAAA4pB,GACAi0D,EAAAp6F,UAAAD,OAAAmE,OAAAiiC,KAAAnmC,WACAo6F,EAAAp6F,UAAAwc,YAAA49E,EAQAA,EAAAp6F,UAAAo7F,2BAAA,SAAAhgE,GAeA,IAVA,IAAAigE,EAAA,GAMAC,EAAA,GAEAjgE,EAAAD,EAAAC,iBACAnxB,EAAAkxB,EAAAo4B,UAAAtpD,WACAxK,EAAA,EAAAgI,EAAA2zB,EAAAz7B,OAAiDF,EAAAgI,IAAQhI,EAAA,CACzD,IAAAs7B,EAAAK,EAAA37B,GACA,GAAWK,OAAA+5B,EAAA,EAAA/5B,CAAmBi7B,EAAA9wB,GAA9B,CAIA,IAAAgU,EAAkE8c,EAAA,MAAAL,YAClE,GAAAzc,EAAA,CAIA,IAAAq9E,EAAAr9E,EAAAw9B,kBACA,GAAA6/C,EAAA,CAIA,IAAA/gD,EAAA+gD,EAAAngE,GACA,GAAAof,EAQA,GAJAhhC,KAAAghF,uBAAA,IAAAt8E,EAAAy9B,8BACAniC,KAAAgiF,gBAAA,GAGA5kF,MAAA2K,QAAAi5B,GACA,QAAA/jC,EAAA,EAAAgiB,EAAA+hB,EAAA56C,OAAiD6W,EAAAgiB,IAAQhiB,EACzD+jC,EAAA/jC,KAAA4kF,IACAC,EAAAx7F,KAAA06C,EAAA/jC,IACA4kF,EAAA7gD,EAAA/jC,KAAA,QAIA+jC,KAAA6gD,IACAC,EAAAx7F,KAAA06C,GACA6gD,EAAA7gD,IAAA,MAIA,OAAA8gD,GAOAlB,EAAAp6F,UAAAk6F,eAAA,SAAA9+D,GACA,GAAAA,EAAA,CAQA,IAAAof,EAAAhhC,KAAA4hF,2BAAAhgE,GAEAI,EAAAgf,EAAA56C,OAAA,EAMA,GALA4Z,KAAA0hE,kBAAA1/C,IACAhiB,KAAA6X,QAAAnf,MAAA4oE,QAAAt/C,EAAA,UACAhiB,KAAA0hE,iBAAA1/C,IAGQz7B,OAAAgyB,EAAA,EAAAhyB,CAAMy6C,EAAAhhC,KAAA2hF,uBAAd,CAIIp7F,OAAAo9C,EAAA,EAAAp9C,CAAcyZ,KAAA6gF,YAGlB,QAAA36F,EAAA,EAAAgI,EAAA8yC,EAAA56C,OAA6CF,EAAAgI,IAAQhI,EAAA,CACrD,IAAA2xB,EAAAhwB,SAAAG,cAAA,MACA6vB,EAAAoqE,UAAAjhD,EAAA96C,GACA8Z,KAAA6gF,WAAAt3F,YAAAsuB,GAGA7X,KAAA2hF,sBAAA3gD,QA5BAhhC,KAAA0hE,mBACA1hE,KAAA6X,QAAAnf,MAAA4oE,QAAA,OACAthE,KAAA0hE,kBAAA,IAiCAkf,EAAAp6F,UAAAi7F,aAAA,SAAAh5F,GACAA,EAAA6qB,iBACAtT,KAAAkiF,iBAMAtB,EAAAp6F,UAAA07F,cAAA,WACAliF,KAAA6X,QAAAsqE,UAAAC,OAAkC7gB,EAAA,GAClCvhE,KAAA8gF,WACMv6F,OAAAo9C,EAAA,EAAAp9C,CAAWyZ,KAAAqhF,eAAArhF,KAAAshF,QAEX/6F,OAAAo9C,EAAA,EAAAp9C,CAAWyZ,KAAAshF,OAAAthF,KAAAqhF,gBAEjBrhF,KAAA8gF,YAAA9gF,KAAA8gF,YAQAF,EAAAp6F,UAAA67F,eAAA,WACA,OAAAriF,KAAAkhF,cAQAN,EAAAp6F,UAAAw7F,eAAA,SAAAf,GACAjhF,KAAAkhF,eAAAD,IAGAjhF,KAAAkhF,aAAAD,EACAjhF,KAAA6X,QAAAsqE,UAAAC,OAAA,qBACAnB,GAAAjhF,KAAA8gF,YACA9gF,KAAAkiF,kBAWAtB,EAAAp6F,UAAA87F,aAAA,SAAAvB,GACA/gF,KAAAkhF,cAAAlhF,KAAA8gF,aAAAC,GAGA/gF,KAAAkiF,iBASAtB,EAAAp6F,UAAA+7F,aAAA,WACA,OAAAviF,KAAA8gF,YAGAF,EAtRe,CAuRb4B,EAAA,WCvKK,SAASC,EAAMhC,GACtB,IAAA7+D,EAAA6+D,EAAA7+D,WACA,GAAAA,EAAA,CAGA,IAAAjxB,EAAAixB,EAAAo4B,UAAArpD,SACA,GAAAA,GAAAqP,KAAAgzE,UAAA,CACA,IAAA15E,EAAA,UAAA3I,EAAA,OACA,GAAAqP,KAAA0iF,UAAA,CACA,IAAAl9D,EAAAxlB,KAAA6X,QAAAsqE,UAAA38D,SAAqD+7C,EAAA,GACrD/7C,GAAA,IAAA70B,EAEO60B,GAAA,IAAA70B,GACPqP,KAAA6X,QAAAsqE,UAAAn6E,OAAsCu5D,EAAA,GAFtCvhE,KAAA6X,QAAAsqE,UAAAj9E,IAAmCq8D,EAAA,GAKnCvhE,KAAAshF,OAAA5oF,MAAAiqF,YAAArpF,EACA0G,KAAAshF,OAAA5oF,MAAAkqF,gBAAAtpF,EACA0G,KAAAshF,OAAA5oF,MAAAY,YAEA0G,KAAAgzE,UAAAriF,GAGe,IAAAkyF,EAjJL,SAAAl2D,GACV,SAAAm2D,EAAAjtE,GAEA,IAAA9V,EAAA8V,GAAA,GAEA8W,EAAAjmC,KAAAsZ,KAAA,CACA6X,QAAAhwB,SAAAG,cAAA,OACA+5B,OAAAhiB,EAAAgiB,QAAgC0gE,EAChCx5F,OAAA8W,EAAA9W,SAGA,IAAAiyC,OAAA7xC,IAAA0W,EAAAm7B,UAAAn7B,EAAAm7B,UAAA,YAEA+1C,OAAA5nF,IAAA0W,EAAAkxE,MAAAlxE,EAAAkxE,MAAA,IAMAjxE,KAAAshF,OAAA,KAEA,iBAAArQ,GACAjxE,KAAAshF,OAAAz5F,SAAAG,cAAA,QACAgY,KAAAshF,OAAApmD,UAAA,aACAl7B,KAAAshF,OAAA7oF,YAAAw4E,IAEAjxE,KAAAshF,OAAArQ,EACAjxE,KAAAshF,OAAAa,UAAAj9E,IAAA,eAGA,IAAAi8E,EAAAphF,EAAAohF,SAAAphF,EAAAohF,SAAA,iBAEAn0E,EAAAnlB,SAAAG,cAAA,UACAglB,EAAAkuB,YAAA,SACAluB,EAAA5kB,aAAA,iBACA4kB,EAAAw0E,MAAAL,EACAn0E,EAAAzjB,YAAAyW,KAAAshF,QAEI/6F,OAAAo+C,EAAA,EAAAp+C,CAAMymB,EAAS+1B,EAAA,EAAS3oC,MAAA4F,KAAAyhF,aAAAzhF,MAE5B,IAAA0hF,EAAAxmD,EAAA,IAAuCqmC,EAAA,EAAkB,IAASA,EAAA,EAClE1pD,EAAA7X,KAAA6X,QACAA,EAAAqjB,UAAAwmD,EACA7pE,EAAAtuB,YAAAyjB,GAEAhN,KAAA+iF,gBAAAhjF,EAAAijF,WAAAjjF,EAAAijF,gBAAA35F,EAMA2W,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAMApR,KAAA0iF,eAAAr5F,IAAA0W,EAAAkjF,UAAAljF,EAAAkjF,SAMAjjF,KAAAgzE,eAAA3pF,EAEA2W,KAAA0iF,WACA1iF,KAAA6X,QAAAsqE,UAAAj9E,IAAiCq8D,EAAA,GA8CjC,OAzCA50C,IAAAm2D,EAAA//E,UAAA4pB,GACAm2D,EAAAt8F,UAAAD,OAAAmE,OAAAiiC,KAAAnmC,WACAs8F,EAAAt8F,UAAAwc,YAAA8/E,EAMAA,EAAAt8F,UAAAi7F,aAAA,SAAAh5F,GACAA,EAAA6qB,sBACAjqB,IAAA2W,KAAA+iF,gBACA/iF,KAAA+iF,kBAEA/iF,KAAAkjF,eAOAJ,EAAAt8F,UAAA08F,YAAA,WACA,IACApyE,EADA9Q,KAAA0Q,SACA6qB,UACAzqB,QAKAznB,IAAAynB,EAAAY,gBACA1R,KAAAo7B,UAAA,EACAtqB,EAAAK,QAAA,CACAxgB,SAAA,EACAygB,SAAApR,KAAAo7B,UACA/pB,OAAkBA,EAAA,IAGlBP,EAAAm9B,YAAA,KAKA60C,EAhHU,CAiHRN,EAAA,GCVaW,EAxGP,SAAAx2D,GACR,SAAAy2D,EAAAvtE,GAEA,IAAA9V,EAAA8V,GAAA,GAEA8W,EAAAjmC,KAAAsZ,KAAA,CACA6X,QAAAhwB,SAAAG,cAAA,OACAiB,OAAA8W,EAAA9W,SAGA,IAAAiyC,OAAA7xC,IAAA0W,EAAAm7B,UAAAn7B,EAAAm7B,UAAA,UAEAnqB,OAAA1nB,IAAA0W,EAAAgR,MAAAhR,EAAAgR,MAAA,EAEAsyE,OAAAh6F,IAAA0W,EAAAsjF,YAAAtjF,EAAAsjF,YAAA,IACAC,OAAAj6F,IAAA0W,EAAAujF,aAAAvjF,EAAAujF,aAAA,IAEAC,OAAAl6F,IAAA0W,EAAAwjF,eACAxjF,EAAAwjF,eAAA,UACAC,OAAAn6F,IAAA0W,EAAAyjF,gBACAzjF,EAAAyjF,gBAAA,WAEAC,EAAA57F,SAAAG,cAAA,UACAy7F,EAAAvoD,YAAA,MACAuoD,EAAAr7F,aAAA,iBACAq7F,EAAAjC,MAAA+B,EACAE,EAAAl6F,YACA,iBAAA85F,EAAAx7F,SAAA67F,eAAAL,MAGI98F,OAAAo+C,EAAA,EAAAp+C,CAAMk9F,EAAY1gD,EAAA,EAAS3oC,MAAA4F,KAAAyhF,aAAA72F,KAAAoV,KAAA+Q,IAE/B,IAAA4yE,EAAA97F,SAAAG,cAAA,UACA27F,EAAAzoD,YAAA,OACAyoD,EAAAv7F,aAAA,iBACAu7F,EAAAnC,MAAAgC,EACAG,EAAAp6F,YACA,iBAAA+5F,EAAAz7F,SAAA67F,eAAAJ,MAGI/8F,OAAAo+C,EAAA,EAAAp+C,CAAMo9F,EAAa5gD,EAAA,EAAS3oC,MAAA4F,KAAAyhF,aAAA72F,KAAAoV,MAAA+Q,IAEhC,IAAA2wE,EAAAxmD,EAAA,IAAuCqmC,EAAA,EAAkB,IAASA,EAAA,EAClE1pD,EAAA7X,KAAA6X,QACAA,EAAAqjB,UAAAwmD,EACA7pE,EAAAtuB,YAAAk6F,GACA5rE,EAAAtuB,YAAAo6F,GAMA3jF,KAAAo7B,eAAA/xC,IAAA0W,EAAAqR,SAAArR,EAAAqR,SAAA,IAgDA,OA5CAub,IAAAy2D,EAAArgF,UAAA4pB,GACAy2D,EAAA58F,UAAAD,OAAAmE,OAAAiiC,KAAAnmC,WACA48F,EAAA58F,UAAAwc,YAAAogF,EAOAA,EAAA58F,UAAAi7F,aAAA,SAAA1wE,EAAAtoB,GACAA,EAAA6qB,iBACAtT,KAAA4jF,aAAA7yE,IAOAqyE,EAAA58F,UAAAo9F,aAAA,SAAA7yE,GACA,IACAD,EADA9Q,KAAA0Q,SACA6qB,UACA,GAAAzqB,EAAA,CAKA,IAAAgB,EAAAhB,EAAAiB,gBACA,GAAAD,EAAA,CACA,IAAAisC,EAAAjtC,EAAAe,oBAAAC,EAAAf,GACA/Q,KAAAo7B,UAAA,GACAtqB,EAAA+9B,gBACA/9B,EAAAi+B,mBAEAj+B,EAAAK,QAAA,CACAzgB,WAAAqtD,EACA3sC,SAAApR,KAAAo7B,UACA/pB,OAAkBA,EAAA,KAGlBP,EAAAuB,cAAA0rC,MAKAqlC,EApGQ,CAqGNZ,EAAA,GC9FK,SAAAxkC,EAAAnoC,GAEP,IAAA9V,EAAA8V,GAAA,GAEA03C,EAAA,IAAqBz1C,EAAA,EAkBrB,YAhBAzuB,IAAA0W,EAAA8P,MAAA9P,EAAA8P,OAEA09C,EAAAjnE,KAAA,IAAsB68F,EAAIpjF,EAAA8jF,oBAG1Bx6F,IAAA0W,EAAA1G,QAAA0G,EAAA1G,SAEAk0D,EAAAjnE,KAAA,IAAsBu8F,EAAM9iF,EAAA+jF,sBAG5Bz6F,IAAA0W,EAAAgkF,aACAhkF,EAAAgkF,cAEAx2B,EAAAjnE,KAAA,IAAsBq6F,EAAW5gF,EAAAikF,qBAGjCz2B,EA/DAvmE,EAAA2C,EAAA6B,EAAA,sBAAAwyD,8BCC6D92D,EAAAD,QAG5D,WAAqB,aA8CtB,SAAAg9F,EAAAx8E,EAAAvhB,EAAA+W,GACA,IAAAD,EAAAyK,EAAAvhB,GACAuhB,EAAAvhB,GAAAuhB,EAAAxK,GACAwK,EAAAxK,GAAAD,EAGA,SAAAknF,EAAA1mF,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,IAGA,OAtDA,SAAAgK,EAAAtK,EAAArE,EAAAu3B,EAAArnB,IAIA,SAAAm7E,EAAA18E,EAAAtK,EAAArE,EAAAu3B,EAAArnB,GAEA,KAAAqnB,EAAAv3B,GAAA,CACA,GAAAu3B,EAAAv3B,EAAA,KACA,IAAAjO,EAAAwlC,EAAAv3B,EAAA,EACArP,EAAA0T,EAAArE,EAAA,EACAqb,EAAAtkB,KAAA4T,IAAA5Y,GACAU,EAAA,GAAAsE,KAAA6M,IAAA,EAAAyX,EAAA,GACAiwE,EAAA,GAAAv0F,KAAA4zB,KAAAtP,EAAA5oB,GAAAV,EAAAU,GAAAV,IAAApB,EAAAoB,EAAA,UACAw5F,EAAAx0F,KAAAE,IAAA+I,EAAAjJ,KAAAy3B,MAAAnqB,EAAA1T,EAAA8B,EAAAV,EAAAu5F,IACAE,EAAAz0F,KAAAC,IAAAugC,EAAAxgC,KAAAy3B,MAAAnqB,GAAAtS,EAAApB,GAAA8B,EAAAV,EAAAu5F,IACAD,EAAA18E,EAAAtK,EAAAknF,EAAAC,EAAAt7E,GAGA,IAAA1e,EAAAmd,EAAAtK,GACAjX,EAAA4S,EACAmE,EAAAozB,EAKA,IAHA4zD,EAAAx8E,EAAA3O,EAAAqE,GACA6L,EAAAvB,EAAA4oB,GAAA/lC,GAAA,GAAA25F,EAAAx8E,EAAA3O,EAAAu3B,GAEAnqC,EAAA+W,GAAA,CAIA,IAHAgnF,EAAAx8E,EAAAvhB,EAAA+W,GACA/W,IACA+W,IACA+L,EAAAvB,EAAAvhB,GAAAoE,GAAA,GAAApE,IACA,KAAA8iB,EAAAvB,EAAAxK,GAAA3S,GAAA,GAAA2S,IAGA,IAAA+L,EAAAvB,EAAA3O,GAAAxO,GAAA25F,EAAAx8E,EAAA3O,EAAAmE,GAGAgnF,EAAAx8E,IADAxK,EACAozB,GAGApzB,GAAAE,IAAArE,EAAAmE,EAAA,GACAE,GAAAF,IAAAozB,EAAApzB,EAAA,IAvCAknF,CAAA18E,EAAAtK,EAAArE,GAAA,EAAAu3B,GAAA5oB,EAAArhB,OAAA,EAAA4iB,GAAAk7E,IAN6DK,uDCM9CC,EACf,UADeA,EAEf,iCCkCIC,EAAS,SAAAnkE,GACb,SAAA2nD,EAAApyD,GACA,IAAA9V,EAAA8V,GAAA,GAEA2K,EAAsBj6B,OAAAwO,EAAA,EAAAxO,CAAM,GAAGwZ,UAE/BygB,EAAAojD,eACApjD,EAAAqmD,uBACAvmD,EAAA55B,KAAAsZ,KAAAwgB,GAEAxgB,KAAA0kF,gBAAAr7F,IAAA0W,EAAA6jE,QAAA7jE,EAAA6jE,QAAA,GACA5jE,KAAA2kF,+BAAAt7F,IAAA0W,EAAA8mE,wBACA9mE,EAAA8mE,wBAOA7mE,KAAAjX,KAAgBi8E,EAAA,EAAS/rD,KAgDzB,OA5CAqH,IAAA2nD,EAAAllE,UAAAud,GACA2nD,EAAAzhF,UAAAD,OAAAmE,OAAA41B,KAAA95B,WACAyhF,EAAAzhF,UAAAwc,YAAAilE,EAQAA,EAAAzhF,UAAAugF,WAAA,WACA,OAA6B/mE,KAAA/V,IAAcu6F,IAS3Cvc,EAAAzhF,UAAAk+F,WAAA,SAAA9gB,GACA5jE,KAAA5B,IAAaomF,EAAY5gB,IASzBqE,EAAAzhF,UAAAsgF,0BAAA,WACA,OAA8B9mE,KAAA/V,IAAcu6F,IAS5Cvc,EAAAzhF,UAAAm+F,0BAAA,SAAA9d,GACA7mE,KAAA5B,IAAaomF,EAAY3d,IAGzBoB,EAnEa,CAoEX2c,EAAA,GASFH,EAASj+F,UAAA26B,UAGM31B,EAAA,8IC5Gfq5F,EAAA,QAOWC,EAAK,CAChB5gF,QAAA,UACA6gF,SAAA,WACAC,SAAA,WACAC,OAAA,SACAC,GAAA,MAQAC,EAAA,QA4PO,SAAApjE,EAAA0+D,GACP,IAAA7+D,EAAA6+D,EAAA7+D,WAIA5hB,KAAAolF,WAHAxjE,EAGAA,EAAAo4B,UAFA,KAIAh6C,KAAA0gF,iBAIe,IAAA2E,EA5OF,SAAA14D,GACb,SAAA24D,EAAAzvE,GAEA,IAAA9V,EAAA8V,GAAA,GAEAqlB,OAAA7xC,IAAA0W,EAAAm7B,UAAAn7B,EAAAm7B,UAAA,gBAEAvO,EAAAjmC,KAAAsZ,KAAA,CACA6X,QAAAhwB,SAAAG,cAAA,OACA+5B,OAAAhiB,EAAAgiB,UACA94B,OAAA8W,EAAA9W,SAOA+W,KAAAulF,cAAA19F,SAAAG,cAAA,OACAgY,KAAAulF,cAAArqD,YAAA,SAEAl7B,KAAA6X,QAAAqjB,YAAA,IAA+CqmC,EAAA,EAC/CvhE,KAAA6X,QAAAtuB,YAAAyW,KAAAulF,eAMAvlF,KAAAolF,WAAA,KAMAplF,KAAAwlF,eAAAn8F,IAAA0W,EAAA0lF,SAAA1lF,EAAA0lF,SAAA,GAMAzlF,KAAA0hE,kBAAA,EAMA1hE,KAAA0lF,oBAAAr8F,EAMA2W,KAAA2lF,cAAA,GAEIp/F,OAAAo+C,EAAA,EAAAp+C,CACJyZ,KAAYzZ,OAAAu1B,EAAA,EAAAv1B,CAAkBs+F,GAC9B7kF,KAAA4lF,oBAAA5lF,MAEAA,KAAA6lF,SAAmC9lF,EAAA,OAAuB+kF,EAAKG,QA8J/D,OA1JAt4D,IAAA24D,EAAAviF,UAAA4pB,GACA24D,EAAA9+F,UAAAD,OAAAmE,OAAAiiC,KAAAnmC,WACA8+F,EAAA9+F,UAAAwc,YAAAsiF,EASAA,EAAA9+F,UAAA4a,SAAA,WACA,OAAApB,KAAA/V,IAAA46F,IAMAS,EAAA9+F,UAAAo/F,oBAAA,WACA5lF,KAAA0gF,kBASA4E,EAAA9+F,UAAAq/F,SAAA,SAAAljF,GACA3C,KAAA5B,IAAAymF,EAAAliF,IAMA2iF,EAAA9+F,UAAAk6F,eAAA,WACA,IAAA1mC,EAAAh6C,KAAAolF,WAEA,GAAAprC,EAAA,CAQA,IAAAvpD,EAAAupD,EAAAvpD,OACAwU,EAAA+0C,EAAA/0C,WACAtC,EAAA3C,KAAAoB,WACA0kF,EAAAnjF,GAAwCmiF,EAAK5gF,QACvC5C,EAAA,EAAS4C,QACT5C,EAAA,EAASsB,OACf0C,EACQ/e,OAAAi1B,EAAA,EAAAj1B,CAAkB0e,EAAA+0C,EAAAtpD,WAAAD,EAAAq1F,GAC1B7gF,EAAA7D,YAAiCE,EAAA,EAAS4C,SAAAe,EAAA5D,oBAC1CykF,GAAiCxkF,EAAA,EAASsB,SAC1C0C,GAAAL,EAAA5D,oBAGA,IAAA0kF,EAAA/lF,KAAAwlF,UAAAlgF,EACA0gF,EAAA,GACA,GAAArjF,GAAiBmiF,EAAK5gF,QAAA,CACtB,IAAA+hF,EAA4B3kF,EAAA,EAAgBA,EAAA,EAAS4C,SACrDe,EAAA7D,YAAmCE,EAAA,EAAS4C,QAC5C6hF,GAAAE,EAEA3gF,GAAA2gF,EAEAF,EAAAE,EAAA,IACAD,EAAA,IACA1gF,GAAA,MACOygF,EAAAE,GACPD,EAAA,IACA1gF,GAAA,IAEA0gF,EAAA,SAEKrjF,GAAmBmiF,EAAKC,SAC7BgB,EAAA,OACAC,EAAA,KACA1gF,GAAA,OACOygF,EAAA,UACPC,EAAA,KACA1gF,GAAA,QAEA0gF,EAAA,KACA1gF,GAAA,UAEK3C,GAAmBmiF,EAAKE,UAC7B1/E,GAAA,KACA0gF,EAAA,MACKrjF,GAAmBmiF,EAAKG,OAC7Bc,EAAA,MACAC,EAAA,KACA1gF,GAAA,KACOygF,EAAA,GACPC,EAAA,KACA1gF,GAAA,KACOygF,EAAA,IACPC,EAAA,KAEAA,EAAA,KACA1gF,GAAA,KAEK3C,GAAmBmiF,EAAKI,GAC7Ba,EAAA,OACAC,EAAA,KACA1gF,GAAA,OACOygF,EAAA,UACPC,EAAA,KACA1gF,GAAA,YAEA0gF,EAAA,KACA1gF,GAAA,WAGM/e,OAAA4pD,EAAA,EAAA5pD,EAAM,MAMZ,IAHA,IAEAg+D,EAAA1sD,EAFA3R,EAAA,EAAA2J,KAAAy3B,MACAz3B,KAAA4T,IAAAzD,KAAAwlF,UAAAlgF,GAAAzV,KAAA4T,IAAA,OAEA,CAIA,GAHA8gD,EAAA4gC,GAAAj/F,EAAA,QACA2J,KAAA2jB,IAAA,GAAA3jB,KAAAy3B,MAAAphC,EAAA,IACA2R,EAAAhI,KAAAo6B,MAAAs6B,EAAAj/C,GACAmsC,MAAA55C,GAGA,OAFAmI,KAAA6X,QAAAnf,MAAA4oE,QAAA,YACAthE,KAAA0hE,kBAAA,GAEO,GAAA7pE,GAAAmI,KAAAwlF,UACP,QAEAt/F,EAGA,IAAAggG,EAAA3hC,EAAA,IAAAyhC,EACAhmF,KAAA2lF,eAAAO,IACAlmF,KAAAulF,cAAAtD,UAAAiE,EACAlmF,KAAA2lF,cAAAO,GAGAlmF,KAAA0lF,gBAAA7tF,IACAmI,KAAAulF,cAAA7sF,MAAAb,QAAA,KACAmI,KAAA0lF,eAAA7tF,GAGAmI,KAAA0hE,mBACA1hE,KAAA6X,QAAAnf,MAAA4oE,QAAA,GACAthE,KAAA0hE,kBAAA,QA9GA1hE,KAAA0hE,mBACA1hE,KAAA6X,QAAAnf,MAAA4oE,QAAA,OACAthE,KAAA0hE,kBAAA,IAiHA4jB,EAvNa,CAwNX9C,EAAA,oBC9OE2D,EAAU,SAAA7lE,GACd,SAAAylD,EAAAlwD,GACA,IAAA9V,EAAA8V,GAAA,GACAyK,EAAA55B,KAAAsZ,KAAAD,GAOAC,KAAAjX,KAAgBi8E,EAAA,EAAShsD,MAQzB,OAJAsH,IAAAylD,EAAAhjE,UAAAud,GACAylD,EAAAv/E,UAAAD,OAAAmE,OAAA41B,KAAA95B,WACAu/E,EAAAv/E,UAAAwc,YAAA+iE,EAEAA,EAlBc,OAmBZ,GASFogB,EAAU3/F,UAAA26B,UACK,IAAAilE,EAAA,kBCzDfC,EAAA,CACA,4IAGEtnC,EAAA,GAOFunC,EAAA,CACAC,QAAA,CACAz+E,UAAA,MACAo5B,QAAA,GAEAslD,qBAAA,CACA1+E,UAAA,MACAo5B,QAAA,GAEAulD,iBAAA,CACA3+E,UAAA,MACAo5B,QAAA,GAEAwlD,gBAAA,CACA5+E,UAAA,MACAo5B,QAAA,GAEAylD,mBAAA,CACA7+E,UAAA,MACAo5B,QAAA,GAEA0lD,MAAA,CACA9+E,UAAA,MACAo5B,QAAA,GAEA2lD,eAAA,CACA/+E,UAAA,MACAo5B,QAAA,GAEA4lD,eAAA,CACAh/E,UAAA,MACAo5B,QAAA,GAEA6lD,cAAA,CACAj/E,UAAA,MACAo5B,QAAA,GAEA8lD,aAAA,CACAl/E,UAAA,MACAo5B,QAAA,GAEA+lD,WAAA,CACAn/E,UAAA,MACAo5B,QAAA,IAQAgmD,EAAA,CACAX,QAAA,CACAp9D,QAAA,EACAC,QAAA,IAEAw9D,MAAA,CACAz9D,QAAA,EACAC,QAAA,IAEA69D,WAAA,CACA99D,QAAA,EACAC,QAAA,KAgEe+9D,EAlCf,SAAAx0E,GACA,SAAAy0E,EAAArnF,GACA,IAAA7Z,EAAA6Z,EAAAy+B,MAAA/pC,QAAA,KACA4yF,GAAA,GAAAnhG,EAAA6Z,EAAAy+B,MAAAz+B,EAAAy+B,MAAAlzC,MAAA,EAAApF,GACAohG,EAAAJ,EAAAG,GAEAE,EAAAjB,EAAAvmF,EAAAy+B,OAEA1S,OAAAziC,IAAA0W,EAAA+rB,IAAA/rB,EAAA+rB,IACA,+CAAiC/rB,EAAAy+B,MACjC,gBAAqB+oD,EAAAz/E,UAErB6K,EAAAjsB,KAAAsZ,KAAA,CACAghC,aAAAqlD,EACAviE,UAAA/jB,EAAA+jB,UACAmd,YAAA,YACA7X,QAAA//B,MAAA0W,EAAAqpB,QAAArpB,EAAAqpB,QAAAk+D,EAAAl+D,QACAD,QAAA9/B,MAAA0W,EAAAopB,QAAAppB,EAAAopB,QAAAm+D,EAAAn+D,QACA+X,OAAAqmD,EAAArmD,OACAC,2BAAAphC,EAAAohC,2BACAC,iBAAArhC,EAAAqhC,iBACAtV,MACArE,MAAA1nB,EAAA0nB,QASA,OAJA9U,IAAAy0E,EAAArkF,UAAA4P,GACAy0E,EAAA5gG,UAAAD,OAAAmE,OAAAioB,KAAAnsB,WACA4gG,EAAA5gG,UAAAwc,YAAAokF,EAEAA,EA/BA,CAgCEz0E,EAAA,6DCoIa60E,EAzLH,SAAAzmD,GACZ,SAAA0mD,EAAA1nF,GAEA,IAAA2nF,OAAAr+F,IAAA0W,EAAA2nF,OAAA3nF,EAAA2nF,MAEA3mD,EAAAr6C,KAAAsZ,KAAA,CACA8jB,UAAA/jB,EAAA+jB,UACAmd,YAAA,YACAC,QAAA,EACAj8B,WAAkB1e,OAAAi1B,EAAA,EAAAj1B,CAAa,aAC/B46C,2BAAAphC,EAAAohC,2BACA5C,MAAa0uB,EAAA,EAAWtvD,QACxByjC,iBAAArhC,EAAAqhC,iBACAC,eAAAqmD,EAAA,IACAjgE,WAAAp+B,IAAA0W,EAAA0nB,OAAA1nB,EAAA0nB,MACA8Z,WAAAxhC,EAAAwhC,aAOAvhC,KAAA2nF,OAAAD,EAOA1nF,KAAA4nF,cAAAv+F,IAAA0W,EAAA8nF,QAAA9nF,EAAA8nF,QAAA,QAMA7nF,KAAA8nF,cAAAz+F,IAAA0W,EAAAqpB,QAAArpB,EAAAqpB,SAAA,EAMAppB,KAAA+nF,QAAAhoF,EAAApV,IAMAqV,KAAAgoF,YAAAjoF,EAAAkoF,WC5HO,SAAAn8D,EAAA97B,EAAAk4F,EAAAC,GACP,IAAApgG,EAAAF,SAAAG,cAAA,UACA2C,EAAA,OAAqBpE,OAAA6hG,EAAA,EAAA7hG,CAAMyJ,GAC3B,SAAAqvD,WACAj0D,OAAAT,GACA5C,EAAAwjB,WAAAtS,YAAAlR,GAEAA,EAAAsgG,OAAA,EACAtgG,EAAAM,IAAAyjC,IAAA,GAAAA,EAAAr3B,QAAA,eACA0zF,GAAA,gBAAAx9F,EACA,IAAA29F,EAAAh/F,WAAA,WACA+1D,IACA6oC,GACAA,KAEG,KACH98F,OAAAT,GAAA,SAAA9E,GACA+C,aAAA0/F,GACAjpC,IACArvD,EAAAnK,IAEAgC,SAAAC,qBAAA,WAAAyB,YAAAxB,GD8GIwgG,CALJ,yDACAvoF,KAAAgoF,YACA,iDAAAhoF,KAAA+nF,QACA,MAAA/nF,KAAA4nF,SAEgB5nF,KAAAwoF,8BAAA59F,KAAAoV,WAAA3W,EAChB,SA+HA,OA3HA03C,IAAA0mD,EAAA1kF,UAAAg+B,GACA0mD,EAAAjhG,UAAAD,OAAAmE,OAAAq2C,KAAAv6C,WACAihG,EAAAjhG,UAAAwc,YAAAykF,EAQAA,EAAAjhG,UAAAiiG,UAAA,WACA,OAAAzoF,KAAA+nF,SASAN,EAAAjhG,UAAAkiG,cAAA,WACA,OAAA1oF,KAAAgoF,aAMAP,EAAAjhG,UAAAgiG,8BAAA,SAAAG,GACA,QAAAA,EAAAC,YACA,MAAAD,EAAAE,mBACA,oBAAAF,EAAAG,0BACA,GAAAH,EAAAI,aAAA3iG,QACA,GAAAuiG,EAAAI,aAAA,GAAAC,UAAA5iG,OAJA,CASA,IAAA6iG,EAAAN,EAAAI,aAAA,GAAAC,UAAA,GACA5/D,GAAA,GAAAppB,KAAA8nF,SAAAmB,EAAAC,QAAAlpF,KAAA8nF,SAEAzhF,EAAArG,KAAAoiC,gBACAn0C,EAAiB1H,OAAAkkD,EAAA,EAAAlkD,CAAoB8f,GACrCxM,EAAAmG,KAAA2nF,OAAA,IACAn/D,EAAAygE,EAAAE,YAAAF,EAAAG,YACAH,EAAAE,WAAAtvF,EACA,CAAAovF,EAAAE,WAAAtvF,EAAAovF,EAAAG,YAAAvvF,GAEAgI,EAAmBtb,OAAAkkD,EAAA,EAAAlkD,CAAS,CAC5B0H,SACAk7B,QAAA8/D,EAAAI,QACAjgE,UACAZ,aAEAxoB,KAAA6B,WAEA,IAAAgmF,EAAA7nF,KAAA4nF,SACAF,EAAA1nF,KAAA2nF,OA6BA,GA5BA3nF,KAAAshC,gBAA2B/6C,OAAAokD,EAAA,EAAApkD,CAC3B0iG,EAAAK,mBAAAz4E,IAAA,SAAA04E,GACA,IAAAC,EAAA,QACAC,EAAAR,EAAAQ,SACA/9D,QAAA,cAA+B69D,GAC/B79D,QAAA,YAA6Bm8D,GAC7B,gBAOAtzE,EAAAkX,EAAAxmB,GACA,GAAAsP,EAEa,CACChuB,OAAA2+C,EAAA,EAAA3+C,CAAcguB,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAAAi1E,GAC5B,IAAA19D,EAAA29D,EAIA,OAHA/B,IACA57D,GAAA,yBAEAA,EAAAJ,QAAA,YAA8CnlC,OAAA2+C,EAAA,EAAA3+C,CAAOijG,SAMrDP,EAAAS,iBAAA,CACA,IAAApwF,EAAsB/S,OAAAi1B,EAAA,EAAAj1B,CACdA,OAAAi1B,EAAA,EAAAj1B,CAAa,aAAAyZ,KAAAoiC,iBAErBpiC,KAAAuiC,gBAAA,SAAA3gB,GACA,IAAAof,EAAA,GACAgZ,EAAAp4B,EAAAo4B,UAGAnqC,EAFA7P,KAAAwoC,cACAqL,kCAAAmG,EAAAvpD,OAAAupD,EAAAtpD,YACA,GAsBA,OArBAu4F,EAAAS,iBAAA74E,IAAA,SAAA84E,GAGA,IAFA,IAAAC,GAAA,EACAC,EAAAF,EAAAE,cACA3jG,EAAA,EAAAgI,EAAA27F,EAAAzjG,OAAoDF,EAAAgI,IAAQhI,EAAA,CAC5D,IAAA4jG,EAAAD,EAAA3jG,GACA,GAAA2pB,GAAAi6E,EAAAT,SAAAx5E,GAAAi6E,EAAAZ,QAAA,CACA,IAAAvyD,EAAAmzD,EAAAnzD,KACAozD,EAAA,CAAApzD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA1oC,EAA2B1H,OAAAqgB,EAAA,EAAArgB,CAAcwjG,EAAAzwF,GACzC,GAAkB/S,OAAAqgB,EAAA,EAAArgB,CAAU0H,EAAA2zB,EAAA3zB,QAAA,CAC5B27F,GAAA,EACA,QAIAA,GACA5oD,EAAA16C,KAAAqjG,EAAA5F,eAIA/iD,EAAA16C,KAxPA,gHAyPA06C,GACOp2C,KAAAoV,OAGPA,KAAAwiC,SAAkByqB,EAAA,EAAW3vC,YAvF7Btd,KAAAwiC,SAAoByqB,EAAA,EAAWxyD,QA0F/BgtF,EAtLY,CAuLVuC,EAAA,mBE7QaC,EAAA,CACfC,IAAA,MACAC,KAAA,QC0CAC,EAAA,SAAA13C,GACA,SAAA03C,EAAArqF,GACA2yC,EAAAhsD,KAAAsZ,KAAA,CACA/R,OAAA8R,EAAA9R,OACAs6B,OAAAxoB,EAAAwoB,OACAoqB,QAAA5yC,EAAA4yC,QACA3gC,YAAAjS,EAAAiS,YACAwW,SAAAzoB,EAAAyoB,SACAuqB,UAAAhzC,EAAAgzC,UACAI,MAAApzC,EAAAozC,QAOAnzC,KAAAqqF,WAAAtqF,EAAAuqF,UAwBA,OArBA53C,IAAA03C,EAAArnF,UAAA2vC,GACA03C,EAAA5jG,UAAAD,OAAAmE,OAAAgoD,KAAAlsD,WACA4jG,EAAA5jG,UAAAwc,YAAAonF,EAMAA,EAAA5jG,UAAA+jG,YAAA,SAAAp2E,GACA,OAAAnU,KAAAqqF,WAAAl2E,IAQAi2E,EAAA5jG,UAAAgkG,aAAA,WACA,OAAAxqF,KAAAqqF,YAGAD,EAxCA,OAyCE,GAGaK,EAAA,ECnFR,SAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAA,GAEAtkG,OAAA2N,KAAA02F,GAAA/kF,QAAA,SAAA1I,GACA,OAAAytF,EAAAztF,SAAA9T,IAAAuhG,EAAAztF,IACA0tF,EAAAvkG,KAAA6W,EAAA,IAAA2tF,mBAAAF,EAAAztF,OAGA,IAAA4tF,EAAAF,EAAA71E,KAAA,KAKA,OADA21E,GAAA,KAFAA,IAAAj/D,QAAA,aAEAj3B,QAAA,KAAAk2F,EAAA,IAAAA,EAAA,KACAI,ECqCA,IAyMeC,EAzMP,SAAAjqD,GACR,SAAAkqD,EAAAlrF,GAIA,IAAAmrF,OAAA7hG,IAAA0W,EAAAmrF,gBAC4DnrF,EAAA,gBACtDkqF,EAAmBC,IAIzBroF,EAAA9B,EAAA8B,SAEAkqB,EAAAhsB,EAAAgsB,UACA1iC,IAAA0iC,QAAA1iC,IAAA0W,EAAA+rB,MACAC,EAAaxlC,OAAAokD,EAAA,EAAApkD,CAASwZ,EAAA+rB,MAGtBiV,EAAAr6C,KAAAsZ,KAAA,CACAghC,aAAAjhC,EAAAihC,aACAld,UAAA/jB,EAAA+jB,UACAmd,YAAAlhC,EAAAkhC,YACAh8B,WAAAlF,EAAAkF,WACAk8B,2BAAAphC,EAAAohC,2BACAsI,UAAA1pC,EAAA0pC,UACA5nC,WACAu/B,iBAAArhC,EAAAqhC,iBACAC,eAAAthC,EAAAshC,eACAC,gBAAuBqJ,EAAA,EACvB5e,OACAtE,WAAAp+B,IAAA0W,EAAA0nB,OAAA1nB,EAAA0nB,MACA8Z,WAAAxhC,EAAAwhC,aAOAvhC,KAAAmrF,cAAA9hG,IAAA0W,EAAAqrF,QAAArrF,EAAAqrF,QAAA,QAMAprF,KAAAqrF,aAAAhiG,IAAA0W,EAAAs1B,OAAAt1B,EAAAs1B,OAAA,aAMAr1B,KAAAsrF,iBAAAjiG,IAAA0W,EAAAwrF,WAAAxrF,EAAAwrF,WAAA,GAMAvrF,KAAA+iE,OAAAhjE,EAAAy+B,MAMAx+B,KAAAwrF,WAAAzrF,EAAA0rF,UAMAzrF,KAAA0rF,OAAA3rF,EAAArH,MASAsH,KAAA2rF,iBAAAT,EAEAlrF,KAAAqoC,OAAAroC,KAAA4rF,wBAEA7/D,KAAA3lC,OAAA,IACA4Z,KAAAshC,gBAA6B/6C,OAAAokD,EAAA,EAAApkD,CAA0BwlC,EAAAlb,IAAAg7E,EAAAjhG,KAAAoV,SAoHvD,OA/GA+gC,IAAAkqD,EAAAloF,UAAAg+B,GACAkqD,EAAAzkG,UAAAD,OAAAmE,OAAAq2C,KAAAv6C,WACAykG,EAAAzkG,UAAAwc,YAAAioF,EAOAA,EAAAzkG,UAAAokD,QAAA,SAAA7e,GACA/rB,KAAA+rB,OACA,IAAAphC,EAAAohC,EAAA/W,KAAA,MACAhV,KAAA8qC,mBAA4BvkD,OAAAokD,EAAA,EAAApkD,CAA0BwlC,EAAAlb,IAAAg7E,EAAAjhG,KAAAoV,QAAArV,IAUtDsgG,EAAAzkG,UAAAslG,cAAA,WACA,OAAA9rF,KAAAsrF,aASAL,EAAAzkG,UAAAulG,UAAA,WACA,OAAA/rF,KAAAqrF,SASAJ,EAAAzkG,UAAAo8E,SAAA,WACA,OAAA5iE,KAAA+iE,QASAkoB,EAAAzkG,UAAAwlG,aAAA,WACA,OAAAhsF,KAAAwrF,YASAP,EAAAzkG,UAAAylG,mBAAA,WACA,OAAAjsF,KAAA2rF,kBASAV,EAAAzkG,UAAA0lG,SAAA,WACA,OAAAlsF,KAAA0rF,QASAT,EAAAzkG,UAAA2lG,WAAA,WACA,OAAAnsF,KAAAmrF,UAQAF,EAAAzkG,UAAAolG,qBAAA,WACA,IAAA1lG,EAAA,EACAgjB,EAAA,GACA,QAAAve,KAAAqV,KAAAsrF,YACApiF,EAAAhjB,KAAAyE,EAAA,IAAAqV,KAAAsrF,YAAA3gG,GAEA,OAAAue,EAAA8L,KAAA,MASAi2E,EAAAzkG,UAAA4lG,iBAAA,SAAAb,GACIhlG,OAAAwO,EAAA,EAAAxO,CAAMyZ,KAAAsrF,YAAAC,GACVvrF,KAAAqoC,OAAAroC,KAAA4rF,yBAGAX,EAtMQ,CAuMNjB,EAAA,GA0MF,SAAA6B,EAAAzgE,GACA,IAAA8/D,EAAAlrF,KAAA2rF,iBAIAr0F,EAAA,CACAknC,MAAAx+B,KAAA+iE,OACArqE,MAAAsH,KAAA0rF,OACAW,cAAArsF,KAAAwrF,YAGAN,GAAyBjB,EAAmBC,KACxC3jG,OAAAwO,EAAA,EAAAxO,CAAM+Q,EAAA,CACVg1F,QAAA,OACAC,QAAA,UACAC,QAAAxsF,KAAAmrF,SACAsB,OAAAzsF,KAAAqrF,UAQAjgE,EAAA8/D,GAAiCjB,EAAmBC,IAChDQ,EAAYt/D,EAAA9zB,GAChB8zB,EAAAM,QAAA,cAAgC,SAAAjiC,EAAAnB,GAChC,OAAAA,EAAAinB,gBAAAjY,IAAAhP,EAAAinB,eAAA9lB,IAGA,IAAAoY,EACA7B,KAAA,SACAurF,EAAAvrF,KAAAsrF,YAEA,gBAOA/2E,EAAAkX,EAAAxmB,GACA,GAAAsP,EAEO,CACP,IAAAm4E,EAAA,CACAC,WAAA9qF,EAAA0oF,YAAAh2E,EAAA,IACAq4E,QAAAr4E,EAAA,GACAs4E,SAAAt4E,EAAA,MAEQhuB,OAAAwO,EAAA,EAAAxO,CAAMmmG,EAAAnB,GACd,IAAAz/D,EAAAV,EAQA,OANAU,EADAo/D,GAA+BjB,EAAmBC,IAClCQ,EAAY5+D,EAAA4gE,GAE5B5gE,EAAAJ,QAAA,cAAuC,SAAAjiC,EAAAnB,GACvC,OAAAokG,EAAApkG,OC/fA,IAAAwkG,EAAA,+BAOO,SAAAC,EAAArhF,GACP,OAAAA,EAAAshF,eAAAF,EAAA,QCcO,IAAAG,EAAAplG,SAAAqlG,eAAAC,eAAA,YA2BA,SAAAC,EAAA1hF,EAAA2hF,GACP,OAaO,SAAAC,EAAA5hF,EAAA2hF,EAAAE,GACP,GAAA7hF,EAAA8hF,UAAAC,KAAAC,oBACAhiF,EAAA8hF,UAAAC,KAAAE,UACAN,EACAE,EAAAjnG,KAAA2O,OAAAyW,EAAAkiF,WAAAliE,QAAA,qBAEA6hE,EAAAjnG,KAAAolB,EAAAkiF,eAEG,CACH,IAAA/iG,EACA,IAAAA,EAAA6gB,EAAAmiF,WAA6BhjG,EAAGA,IAAAijG,YAChCR,EAAAziG,EAAAwiG,EAAAE,GAGA,OAAAA,EA3BAD,CAAA5hF,EAAA2hF,EAAA,IAAAr4E,KAAA,IA+FO,SAAA+4E,EAAAC,EAAA/9F,GACP,gBAKAyb,EAAAuiF,GACA,IAAA5jG,EAAA2jG,EAAAtnG,UAAA2C,IAAA4G,IAAA+P,KAAA0L,EAAAuiF,QACA5kG,IAAAgB,GACwC4jG,IAAA7nG,OAAA,GACxCE,KAAA+D,IAsCO,SAAA6jG,EAAAF,EAAAG,EAAAl+F,GACP,gBAKAyb,EAAAuiF,GACA,IAAA5jG,EAAA2jG,EAAAtnG,UAAA2C,IAAA4G,IAAA+P,KAAA0L,EAAAuiF,GACA,QAAA5kG,IAAAgB,EAAA,CACA,IAAAS,EAAwCmjG,IAAA7nG,OAAA,GACxC2E,OAAA1B,IAAA8kG,IAAAziF,EAAA0iF,WAEArjG,KAAAD,EACAA,EAAAC,GAEAD,EAAAC,GAAA,IAEAzE,KAAA+D,KAcO,SAAAgkG,EAAAL,EAAAG,EAAAl+F,GACP,gBAKAyb,EAAAuiF,GACA,IAAA5jG,EAAA2jG,EAAAtnG,UAAA2C,IAAA4G,IAAA+P,KAAA0L,EAAAuiF,QACA5kG,IAAAgB,IACwC4jG,IAAA7nG,OAAA,QACxCiD,IAAA8kG,IAAAziF,EAAA0iF,WACA/jG,IAiEO,SAAAikG,GAAAC,EAAAC,GACP,IAAAC,EAAAF,EACA,gBAOAlkG,EAAA4jG,EAAAM,GACA,IACA7iF,EAD6CuiF,IAAA7nG,OAAA,GAC7CslB,KACAgjF,EAAAD,EAMA,YALAplG,IAAAqlG,IACAA,EAAAH,GAtRO,SAAAI,EAAAC,GACP,OAAA3B,EAAA4B,gBAAAF,EAAAC,GAyRAC,MADAxlG,IAAAmlG,IAAA9iF,EAAAijF,aAC6D,IAatDL,KAmCA,SAAAQ,GAAAC,EAAAC,EAAAC,GAIP,IACA/oG,EAAAgI,EADAghG,OAAA7lG,IAAA4lG,IAAA,GAEA,IAAA/oG,EAAA,EAAAgI,EAAA6gG,EAAA3oG,OAAwCF,EAAAgI,IAAQhI,EAChDgpG,EAAAH,EAAA7oG,IAAA8oG,EAEA,OAAAE,EAqCO,SAAAC,GAAArkG,EAAAskG,EAAA1jF,EAAAuiF,EAAAh+F,GAGP,OAFAg+F,EAAA3nG,KAAAwE,GA1BO,SAAAskG,EAAA1jF,EAAAuiF,EAAAh+F,GACP,IAAApF,EACA,IAAAA,EAAA6gB,EAAA2jF,kBAAkCxkG,EAAGA,IAAAykG,mBAAA,CACrC,IAAAC,EAAAH,EAAAvkG,EAAA8jG,cACA,QAAAtlG,IAAAkmG,EAAA,CACA,IAAAC,EAAAD,EAAA1kG,EAAAujG,gBACA/kG,IAAAmmG,GACAA,EAAA9oG,KAAAuJ,EAAApF,EAAAojG,KAoBAwB,CAAAL,EAAA1jF,EAAAuiF,EAAAh+F,GACsBg+F,EAAA31E,MC7ZtB,IAAIo3E,GAAG,aAEPA,GAAGlpG,UAAAmpG,KAAA,SAAAjrF,GACH,GAAAA,EAEG,qBAAAA,EAAA,CACH,IAAAkrF,GDmGOC,ECnGYnrF,GDoGnB,IAAAorF,WAAAC,gBAAAF,EAAA,oBCnGA,OAAA7vF,KAAAgwF,iBAAAJ,GACG,MD4EH,oBC5EuBlrF,EACvB1E,KAAAgwF,iBAAqD,GAErDhwF,KAAAiwF,aAAgD,GAPhD,YD+EO,IAsBAJ,GCrFPH,GAAGlpG,UAAAwpG,iBAAA,SAAAJ,KAOHF,GAAGlpG,UAAAypG,aAAA,SAAAvkF,KAEY,IAAAwkF,GAAA,YCnBR,SAAAC,GAAAC,GACP,IAAA3mG,EAAA,6BAAAwiC,KAAAmkE,GACA,OAAA3mG,OACAJ,IAAAI,EAAA,YAEA,EAoBO,SAAA4mG,GAAA3kF,GAEP,OAAA4kF,GADUlD,EAAiB1hF,GAAA,IASpB,SAAA4kF,GAAAF,GAEP,IAAA3mG,EAAA,4CAAAwiC,KAAAmkE,GACA,OAAA3mG,EACA4qE,WAAA5qE,EAAA,SAEA,EASO,SAAA8mG,GAAA7kF,GAEP,OAAA8kF,GADUpD,EAAiB1hF,GAAA,IASpB,SAAA8kF,GAAAJ,GACP,IAAA3mG,EAAA,gBAAAwiC,KAAAmkE,GACA,OAAA3mG,EACA6iC,SAAA7iC,EAAA,YAEA,EASO,SAAAgnG,GAAA/kF,GACP,OAAS0hF,EAAiB1hF,GAAA,GAAAglF,OClF1B,IAAAC,GAAA,CACA,KACA,8BAQAC,GAAc9B,GACd6B,GAAA,CACArE,QAAe+B,EA8Vf,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAG0B,GAAAnlF,EAAAuiF,KA9V3B6C,WAAkBzC,EAmVlB,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAG4B,GAAArlF,EAAAuiF,OA5U3B8C,GAAyBjC,GACzB6B,GAAA,CACApE,QAAe8B,EAqff,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAG6B,GAAAtlF,EAAAuiF,KArf3BgD,UAAiB5C,EA0XjB,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAA+B,GAAAxlF,EAAAuiF,KA1XxB3tE,MAAa+tE,EAmYb,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAGgC,GAAAzlF,EAAAuiF,OA1XvBmD,GAAe,SAAAC,GACnB,SAAAC,IACAD,EAAA3qG,KAAAsZ,MAKAA,KAAAorF,aAAA/hG,EA8BA,OA3BAgoG,IAAAC,EAAAvuF,UAAAsuF,GACAC,EAAA9qG,UAAAD,OAAAmE,OAAA2mG,KAAA7qG,WACA8qG,EAAA9qG,UAAAwc,YAAAsuF,EAKAA,EAAA9qG,UAAAwpG,iBAAA,SAAAJ,GACA,QAAA/kG,EAAA+kG,EAAA/B,WAAgChjG,EAAGA,IAAAijG,YACnC,GAAAjjG,EAAA2iG,UAAAC,KAAA8D,aACA,OAAAvxF,KAAAiwF,aAAAplG,GAGA,aAMAymG,EAAA9qG,UAAAypG,aAAA,SAAAvkF,GACA1L,KAAAorF,QAAA1/E,EAAA8lF,aAAA,WAAAd,OACA,IAAAe,EAA8BtC,GAAe,CAC7C/D,QAAAprF,KAAAorF,SACKwF,GAAAllF,EAAA,IACL,OAAA+lF,GAAA,MAGAH,EArCmB,CAsCjBpB,IAOFW,GAAsB/B,GACtB6B,GAAA,CACAe,KAAYrD,EAAyBoC,IACrCkB,MAAatD,EAAyBoC,IACtCmB,SAAgBvD,EAAyBoC,IACzCoB,YAAmBxD,EAAwByD,IAC3CC,eAAsB1D,EAAyBtB,GAC/CiF,mBAA0B3D,EA6R1B,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAG8C,GAAAvmF,EAAAuiF,KA7R3BiE,KAAY7D,EAAyBoC,IACrC0B,kBAAyB9D,EAAyBoC,IAClD2B,WAAkB/D,EAAyBkC,IAC3C8B,SAAgBhE,EAAyBkC,IACzC+B,UAAiBjE,EAAyBkC,MAQ1C0B,GAAkCnD,GAClC6B,GAAA,CACA4B,qBAA4BlE,EAwR5B,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAGqD,GAAA9mF,EAAAuiF,KAxR3BwE,gBAAuBpE,EAAyBoC,IAChDiC,eAAsBrE,EAgStB,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAGwD,GAAAjnF,EAAAuiF,KAhS3B2E,sBAA6BvE,EAAyBoC,IACtDoC,0BAAiCxE,EAAyBoC,IAC1DqC,6BAAoCzE,EAAyBoC,MAQ7D+B,GAA6B1D,GAC7B6B,GAAA,CACAoC,cAAqB1E,EAAyBoC,IAC9CuC,oBAA2B3E,EAAyBoC,MAQpDkC,GAA8B7D,GAC9B6B,GAAA,CACAsC,YAAmB5E,EAAyBoC,IAC5CyC,QAAe7E,EAAyBoC,IACxC0C,KAAY9E,EAAyBoC,IACrC2C,gBAAuB/E,EAAyBoC,IAChD4C,SAAgBhF,EAAyBoC,IACzC6C,QAAejF,EAAyBoC,MAQxCS,GAAwBpC,GACxB6B,GAAA,CACAlE,OAAcsB,EAAgB0C,MAQ9BU,GAAoBrC,GACpB6B,GAAA,CACAe,KAAYrD,EAAyBoC,IACrCkB,MAAatD,EAAyBoC,IACtCmB,SAAgBvD,EAAyBoC,IACzCoB,YAAmBxD,EAAwByD,IAC3CyB,IAAWrF,EAAyBuC,IACpC+C,yBAAgCnF,EAkKhC,SAAA3iF,EAAAuiF,GACA,IAAAwF,EAA8BtE,GAC9B,GACAuE,GACAhoF,EAAAuiF,GACA,IAAAwF,EACA,OAEA,IAAAE,EACAF,EAAA,mBACAG,EACAH,EAAA,mBACAI,EACAJ,EAAA,mBACAK,EACAL,EAAA,mBACA,QAAApqG,IAAAsqG,QAAAtqG,IAAAuqG,QACAvqG,IAAAwqG,QAAAxqG,IAAAyqG,EACA,OAEA,OACAH,EAAAC,EACAC,EAAAC,KAvLAC,YAAmB7F,EAuInB,SAAAxiF,EAAAuiF,GACA,IAAAhgG,EAAA,CACIqiG,GAAiB5kF,EAAA8lF,aAAA,SACjBlB,GAAiB5kF,EAAA8lF,aAAA,SACjBlB,GAAiB5kF,EAAA8lF,aAAA,SACjBlB,GAAiB5kF,EAAA8lF,aAAA,UAGrBx/E,EAAA,CACIs+E,GAAiB5kF,EAAA8lF,aAAA,SACjBlB,GAAiB5kF,EAAA8lF,aAAA,UAGrB,OACAwC,IAAAtoF,EAAA8lF,aAAA,OACAvjG,SACAib,IAAA8I,KAtJAiiF,UAAiB/F,EA8UjB,SAAAxiF,EAAAuiF,GAWA,MAVA,CACArkG,KAAA8hB,EAAA8lF,aAAA,QACA7uF,MAAA+I,EAAA8lF,aAAA,SACA0C,WAAAxoF,EAAA8lF,aAAA,cACAt8D,QAAAxpB,EAAA8lF,aAAA,WACA2C,eAAsBhE,GAAiBzkF,EAAA8lF,aAAA,mBACvC4C,aAAoBjE,GAAiBzkF,EAAA8lF,aAAA,iBACrC6C,QAAelE,GAAiBzkF,EAAA8lF,aAAA,YAChC/nF,OAAcgnF,GAAU/kF,MAtVxBk1E,YAAmByN,EA2HnB,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAGmF,GAAA5oF,EAAAuiF,KA3H3BsG,aAAoBrG,EAqapB,SAAAxiF,EAAAuiF,GACA,IAAAuG,EAAAC,GAAA/oF,EAAAuiF,GACA,GAAAuG,EAEA,OADAA,EAAA,KAAA9oF,EAAA8lF,aAAA,QACAgD,EAEA,SA1aAE,WAAkBxG,EAAyBuC,IAC3CkE,YAAmBzG,EAkbnB,SAAAxiF,EAAAuiF,GACA,IAAA2G,EAAAH,GAAA/oF,EAAAuiF,GACA,GAAA2G,EAEA,OADAA,EAAA,KAAAlpF,EAAA8lF,aAAA,QACAoD,EAEA,SAvbAC,QAAe3G,EAAwBuG,IACvCK,eAAsB5G,EAAwBuG,IAC9CM,MAAa7G,EA8bb,SAAAxiF,EAAAuiF,GACA,OAASkB,GAAe,GAAG6F,GAAAtpF,EAAAuiF,KA9b3BgH,oBAA2B5G,EAAyBgC,IACpD6E,oBAA2B7G,EAAyBgC,IACpD/vE,MAAa4tE,EA4Pb,SAAAxiF,EAAAuiF,GACA,IAAAkH,EAAwDlH,IAAA7nG,OAAA,GAExDgvG,EAAoBjG,GAAe,GAAGgC,GAAAzlF,EAAAuiF,GAEtC,IAAAmH,EACA,OAEA,IAAAC,EAAkBlF,GAAiBzkF,EAAA8lF,aAAA,mBACnCnoG,IAAAgsG,IACAA,EAAAF,EAAA,WAEAC,EAAA,eAAA/rG,IAAAgsG,KAEA,IAAAC,EAAiB9E,GACjB9kF,EAAA8lF,aAAA,kBACAnoG,IAAAisG,IACAA,EAAAH,EAAA,UAEAC,EAAA,SAAAE,EAEA,IAAAp0D,EAAeivD,GAAiBzkF,EAAA8lF,aAAA,gBAChCnoG,IAAA63C,IACAA,EAAAi0D,EAAA,QAEAC,EAAA,YAAA/rG,IAAA63C,KAEA,IAAAq0D,EAAkBpF,GAAiBzkF,EAAA8lF,aAAA,mBACnCnoG,IAAAksG,IACAA,EAAAJ,EAAA,WAEAC,EAAA,eAAA/rG,IAAAksG,KAEA,IAAAC,EAAmBlF,GAAiB5kF,EAAA8lF,aAAA,eACpCgE,IACAA,EAAAL,EAAA,YAEAC,EAAA,WAAAI,EAEA,IAAAC,EAAoBnF,GAAiB5kF,EAAA8lF,aAAA,gBACrCiE,IACAA,EAAAN,EAAA,aAEAC,EAAA,YAAAK,EAGA,+BACA5vF,QAAA,SAAAlb,GACA,GAAAA,KAAAwqG,EAAA,CACA,IAAAO,EAAAN,EAAAzqG,IAAA,GACAyqG,EAAAzqG,GAAA+qG,EAAAC,OAAAR,EAAAxqG,OAaA,MATA,sDACA,2DACAkb,QAAA,SAAAlb,GACA,KAAAA,KAAAyqG,GAAA,CACA,IAAAQ,EAAAT,EAAAxqG,GACAyqG,EAAAzqG,GAAAirG,KAIAR,MAnTAd,GAA0BxF,GAC1B6B,GAAA,CACAgB,MAAatD,EAAyBoC,IACtCsB,eAAsB1D,EAAyBtB,GAC/C8I,QAAexH,EAAwByH,MAQvCpC,GACI5E,GAAe6B,GAAA,CACnBgD,mBAA4BtF,EAAyBgC,IACrDwD,mBAA4BxF,EAAyBgC,IACrDuD,mBAA4BvF,EAAyBgC,IACrDyD,mBAA4BzF,EAAyBgC,MAQrDW,GAAsBlC,GACtB6B,GAAA,CACAoF,gBAAuB1H,EAAwB2H,IAC/CC,OAAc5H,EAAwB2H,IACtCE,eAAsB7H,EAAwB2H,MAQ9CG,GAA4BrH,GAC5B6B,GAAA,CACAlE,OAAcyB,EAAyBuC,IACvC2F,QAAelI,EA4Tf,SAAAxiF,EAAAuiF,GACA,OAASkB,GAAe,GAAGkH,GAAA3qF,EAAAuiF,OArT3BoI,GAAsBvH,GACtB6B,GAAA,CACA2F,KAAYjI,EA4TZ,SAAA3iF,EAAAuiF,GACA,OAASkB,GAAe,GAAGoH,GAAA7qF,EAAAuiF,OArT3BsI,GAAmBzH,GACnB6B,GAAA,CACA6F,IAAWnI,EAAwBoG,IACnCgC,KAAYpI,EAAwBoG,MAQpCO,GAAoBlG,GACpB6B,GAAA,CACAe,KAAYrD,EAAyBoC,IACrCkB,MAAatD,EAAyBoC,IACtCmB,SAAgBvD,EAAyBoC,IACzCiG,UAAiBxI,EAAwB4H,IACzCa,cAAqBtI,EAAwBoG,IAC7CmC,SAAgBvI,EAAwBoG,MAQxCoC,GACI/H,GAAe6B,GAAA,CACnBlE,OAAgB4B,EAAyBoC,IACzCsB,eAAwB1D,EAAyBtB,KAQjD+J,GAA0BhI,GAC1B6B,GAAA,CACAoG,QAAehJ,EAAgB0C,MA+O/B,SAAAgE,GAAA/oF,EAAAuiF,GACA,OAASkB,GAAe,GAAG0H,GAAAnrF,EAAAuiF,GAuC3B,SAAA+H,GAAAtqF,EAAAuiF,GACA,OAASkB,GAAe,GAAGgH,GAAAzqF,EAAAuiF,GAS3B,SAAA6H,GAAApqF,EAAAuiF,GACA,IAAA+I,EAAAvC,GAAA/oF,EAAAuiF,GACA,GAAA+I,EAAA,CACA,IAAApmG,EAAA,CACM4/F,GAA4B9kF,EAAA8lF,aAAA,UAC5BhB,GAA4B9kF,EAAA8lF,aAAA,YAGlC,OADAwF,EAAA,KAAApmG,EACAomG,GAmDA,SAAAlF,GAAApmF,EAAAuiF,GACA,OAASkB,GAAe,GAAA2H,GAAAprF,EAAAuiF,GAIT,IAAAgJ,GAAA,6BC9eAC,GAvHC,SAAA52D,GAChB,SAAA62D,EAAAlpG,EAAAyC,EAAA+6B,EAAApjC,EAAA44C,EAAAm2D,GAEA92D,EAAA55C,KAAAsZ,KAAA/R,EAAAyC,EAAA+6B,EAAyDipC,GAAA,EAAUh3D,MAMnEsC,KAAAikC,KAAA57C,EAMA2X,KAAAkkC,OAAA,IAAAC,MACA,OAAAlD,IACAjhC,KAAAkkC,OAAAjD,eAOAjhC,KAAAokC,mBAAA,KAMApkC,KAAAu+B,MAAiBm2B,GAAA,EAAUh3D,KAM3BsC,KAAAq3F,mBAAAD,EA+EA,OA3EA92D,IAAA62D,EAAAp0F,UAAAu9B,GACA62D,EAAA3wG,UAAAD,OAAAmE,OAAA41C,KAAA95C,WACA2wG,EAAA3wG,UAAAwc,YAAAm0F,EAMAA,EAAA3wG,UAAAg6C,SAAA,WACA,OAAAxgC,KAAAkkC,QAQAizD,EAAA3wG,UAAA+9C,kBAAA,WACAvkC,KAAAu+B,MAAiBm2B,GAAA,EAAUj6D,MAC3BuF,KAAAskC,iBACAtkC,KAAAmd,WAQAg6E,EAAA3wG,UAAAg+C,iBAAA,gBACAn7C,IAAA2W,KAAAtP,aACAsP,KAAAtP,WAAwBnK,OAAAqgB,EAAA,EAAArgB,CAASyZ,KAAA/R,QAAA+R,KAAAkkC,OAAA1rC,QAEjCwH,KAAAu+B,MAAiBm2B,GAAA,EAAU92D,OAC3BoC,KAAAskC,iBACAtkC,KAAAmd,WAUAg6E,EAAA3wG,UAAAwwC,KAAA,WACAh3B,KAAAu+B,OAAsBm2B,GAAA,EAAUh3D,MAAAsC,KAAAu+B,OAAuBm2B,GAAA,EAAUj6D,QACjEuF,KAAAu+B,MAAmBm2B,GAAA,EAAU/2D,QAC7BqC,KAAAmd,UACAnd,KAAAokC,mBAAA,CACQ79C,OAAAo+C,EAAA,EAAAp+C,CAAUyZ,KAAAkkC,OAAcnB,GAAA,EAAStoC,MACzCuF,KAAAukC,kBAAAvkC,MACQzZ,OAAAo+C,EAAA,EAAAp+C,CAAUyZ,KAAAkkC,OAAcnB,GAAA,EAASnoC,KACzCoF,KAAAwkC,iBAAAxkC,OAEAA,KAAAq3F,mBAAAr3F,UAAAikC,QAOAkzD,EAAA3wG,UAAA8wG,SAAA,SAAA99F,GACAwG,KAAAkkC,OAAA1qC,GAQA29F,EAAA3wG,UAAA89C,eAAA,WACAtkC,KAAAokC,mBAAAv+B,QAAoC8+B,EAAA,GACpC3kC,KAAAokC,mBAAA,MAGA+yD,EAnHgB,CAoHdpiC,GAAA,uCC+CawiC,GAxKA,SAAAj3D,GACf,SAAAk3D,EAAAj8E,EAAAwV,EAAAgB,EAAAd,EAAAxF,EAAAgsE,GACA,IAAAnxD,EAAA/qB,EAAApa,YACAklC,EAAAtV,EAAA5vB,YAEAolC,EAAAF,EACM9/C,OAAAqgB,EAAA,EAAArgB,CAAewrC,EAAAsU,GAAAtU,EAErBf,EAAuBzqC,OAAAqgB,EAAA,EAAArgB,CAASggD,GAChCpV,EAA2B5qC,OAAAkgD,GAAA,EAAAlgD,CAC3Bg1B,EAAAwV,EAAAC,EAAAC,GAEAyV,EAAiCC,GAAA,EAEjC3U,EAAA,IAA4B6U,GAAA,EAC5BtrB,EAAAwV,EAAAwV,EAAAD,EACAnV,EAAAuV,GAGAgxD,EAAAD,EADAzlE,EAAA+U,wBACA5V,EAAA1F,GACA8S,EAAgBm2B,GAAA,EAAU92D,OAC1B85F,IACAn5D,EAAcm2B,GAAA,EAAUh3D,MAExB,IAAAi6F,EAAAD,IAAAj3D,gBAAA,EAEAH,EAAA55C,KAAAsZ,KAAA+xB,EAAAd,EAAA0mE,EAAAp5D,GAMAv+B,KAAAu1C,YAAAxkB,EAMA/wB,KAAA21C,iBAAArP,EAMAtmC,KAAA4mC,eAAA5U,EAMAhyB,KAAA43F,kBAAA3mE,EAMAjxB,KAAA63F,cAAA9lE,EAMA/xB,KAAA83F,aAAAJ,EAMA13F,KAAA+3F,kBAAAJ,EAMA33F,KAAA6lC,QAAA,KAMA7lC,KAAAg4F,mBAAA,KAoFA,OAjFA13D,IAAAk3D,EAAAz0F,UAAAu9B,GACAk3D,EAAAhxG,UAAAD,OAAAmE,OAAA41C,KAAA95C,WACAgxG,EAAAhxG,UAAAwc,YAAAw0F,EAKAA,EAAAhxG,UAAAg4B,gBAAA,WACAxe,KAAAu+B,OAAsBm2B,GAAA,EAAU/2D,SAChCqC,KAAAi4F,kBAEA33D,EAAA95C,UAAAg4B,gBAAA93B,KAAAsZ,OAMAw3F,EAAAhxG,UAAAg6C,SAAA,WACA,OAAAxgC,KAAA6lC,SAMA2xD,EAAAhxG,UAAA47C,cAAA,WACA,OAAApiC,KAAAu1C,aAMAiiD,EAAAhxG,UAAA4gD,WAAA,WACA,IAAA1I,EAAA1+B,KAAA83F,aAAAz2E,WACA,GAAAqd,GAAuBg2B,GAAA,EAAU92D,OAAA,CACjC,IAAA/F,EAAkBtR,OAAAqgB,EAAA,EAAArgB,CAAQyZ,KAAA63F,eAAA73F,KAAA43F,kBAC1Bp/F,EAAmBjS,OAAAqgB,EAAA,EAAArgB,CAASyZ,KAAA63F,eAAA73F,KAAA43F,kBAE5B53F,KAAA6lC,QAAqBt/C,OAAAkgD,GAAA,EAAAlgD,CAAiBsR,EAAAW,EAAAwH,KAAA+3F,kBACtC/3F,KAAA83F,aAAA/lF,gBAAA/R,KAAA21C,iBACA31C,KAAA43F,kBAAA53F,KAAA63F,cAAA73F,KAAA4mC,eAAA,EACA34C,OAAA+R,KAAA83F,aAAA32F,YACA3H,MAAAwG,KAAA83F,aAAAt3D,aACS,GAETxgC,KAAAu+B,MAAAG,EACA1+B,KAAAmd,WAMAq6E,EAAAhxG,UAAAwwC,KAAA,WACA,GAAAh3B,KAAAu+B,OAAsBm2B,GAAA,EAAUh3D,KAAA,CAChCsC,KAAAu+B,MAAmBm2B,GAAA,EAAU/2D,QAC7BqC,KAAAmd,UAEA,IAAAuhB,EAAA1+B,KAAA83F,aAAAz2E,WACAqd,GAAyBg2B,GAAA,EAAU92D,QAAA8gC,GAA0Bg2B,GAAA,EAAUj6D,MACvEuF,KAAAonC,cAEApnC,KAAAg4F,mBAAkCzxG,OAAAo+C,EAAA,EAAAp+C,CAAMyZ,KAAA83F,aAC9B/0D,GAAA,EAAS9oC,OAAA,SAAA7S,GACnB,IAAAs3C,EAAA1+B,KAAA83F,aAAAz2E,WACAqd,GAA+Bg2B,GAAA,EAAU92D,QAAA8gC,GAA0Bg2B,GAAA,EAAUj6D,QAC7EuF,KAAAi4F,kBACAj4F,KAAAonC,eAEWpnC,MACXA,KAAA83F,aAAA9gE,UAQAwgE,EAAAhxG,UAAAyxG,gBAAA,WACI1xG,OAAAo+C,EAAA,EAAAp+C,CAA2DyZ,KAAA,oBAC/DA,KAAAg4F,mBAAA,MAGAR,EApKe,CAqKbziC,GAAA,YC5KFmjC,GAOA,iBAPAA,GAcA,eAdAA,GAqBA,iBAUAC,GAAA,SAAAxqF,GACA,SAAAwqF,EAAApvG,EAAAyQ,GAEAmU,EAAAjnB,KAAAsZ,KAAAjX,GAOAiX,KAAAxG,QAQA,OAJAmU,IAAAwqF,EAAAp1F,UAAA4K,GACAwqF,EAAA3xG,UAAAD,OAAAmE,OAAAijB,KAAAnnB,WACA2xG,EAAA3xG,UAAAwc,YAAAm1F,EAEAA,EAlBA,CAmBExqF,GAAA,GAoBEyqF,GAAW,SAAAz2D,GACf,SAAA02D,EAAAt4F,GACA4hC,EAAAj7C,KAAAsZ,KAAA,CACAghC,aAAAjhC,EAAAihC,aACA/7B,WAAAlF,EAAAkF,WACAs5B,MAAAx+B,EAAAw+B,QAOAv+B,KAAAgtC,kBAAA3jD,IAAA0W,EAAAiS,YACAjS,EAAAiS,YAAA,KAOAhS,KAAAs4F,kBAAA,KAOAt4F,KAAAu4F,qBAAA,EAkHA,OA/GA52D,IAAA02D,EAAAt1F,UAAA4+B,GACA02D,EAAA7xG,UAAAD,OAAAmE,OAAAi3C,KAAAn7C,WACA6xG,EAAA7xG,UAAAwc,YAAAq1F,EAMAA,EAAA7xG,UAAAyrB,eAAA,WACA,OAAAjS,KAAAgtC,cAQAqrD,EAAA7xG,UAAAgyG,sBAAA,SAAA9nG,GACA,GAAAsP,KAAAgtC,aAAA,CACA,IAAApkC,EAAgBriB,OAAAkyG,EAAA,EAAAlyG,CAAiByZ,KAAAgtC,aAAAt8C,EAAA,GACjCA,EAAAsP,KAAAgtC,aAAApkC,GAEA,OAAAlY,GAUA2nG,EAAA7xG,UAAAg6C,SAAA,SAAAvyC,EAAAyC,EAAA+6B,EAAAxmB,GACA,IAAAoB,EAAArG,KAAAoiC,gBACA,GAASuE,GAAA,GACTtgC,GACApB,IACQ1e,OAAAi1B,EAAA,EAAAj1B,CAAU8f,EAAApB,GAKb,CACL,GAAAjF,KAAAs4F,kBAAA,CACA,GAAAt4F,KAAAu4F,sBAAAv4F,KAAA+a,eACYx0B,OAAAi1B,EAAA,EAAAj1B,CACZyZ,KAAAs4F,kBAAAl2D,gBAAAn9B,IACAjF,KAAAs4F,kBAAAvmF,iBAAArhB,GACYnK,OAAAqgB,EAAA,EAAArgB,CAAMyZ,KAAAs4F,kBAAAn3F,YAAAlT,GAClB,OAAA+R,KAAAs4F,kBAEAt4F,KAAAs4F,kBAAAxoE,UACA9vB,KAAAs4F,kBAAA,KAWA,OARAt4F,KAAAs4F,kBAAA,IAAmCf,GACnClxF,EAAApB,EAAAhX,EAAAyC,EAAA+6B,EACA,SAAAx9B,EAAAyC,EAAA+6B,GACA,OAAAzrB,KAAA04F,iBAAAzqG,EAAAyC,EACA+6B,EAAAplB,IACSzb,KAAAoV,OACTA,KAAAu4F,qBAAAv4F,KAAA+a,cAEA/a,KAAAs4F,kBAtBA,OAHAjyF,IACApB,EAAAoB,GAEArG,KAAA04F,iBAAAzqG,EAAAyC,EAAA+6B,EAAAxmB,IAmCAozF,EAAA7xG,UAAAkyG,iBAAA,SAAAzqG,EAAAyC,EAAA+6B,EAAAxmB,GACA,OAAW1e,OAAA6hG,EAAA,EAAA7hG,IAQX8xG,EAAA7xG,UAAAmyG,kBAAA,SAAAlwG,GACA,IAAA+Q,EAAyD/Q,EAAA,OACzD,OAAA+Q,EAAA6nB,YACA,KAAWqzC,GAAA,EAAU/2D,QACrBqC,KAAAgiC,SAAA,EACAhiC,KAAAsO,cACA,IAAA6pF,GAAAD,GACA1+F,IACA,MACA,KAAWk7D,GAAA,EAAU92D,OACrBoC,KAAAgiC,SAAA,EACAhiC,KAAAsO,cACA,IAAA6pF,GAAAD,GACA1+F,IACA,MACA,KAAWk7D,GAAA,EAAUj6D,MACrBuF,KAAAgiC,SAAA,EACAhiC,KAAAsO,cACA,IAAA6pF,GAAAD,GACA1+F,MAOA6+F,EA7Ie,CA8IblvD,GAAA,GASK,SAAAyvD,GAAAp/F,EAAAnR,GACwCmR,EAAAgnC,WAAAn4C,MAIhC,ICzOAwwG,GACf,iBADeA,GAEf,YAFeA,GAGf,YAHeA,GAIf,OCUAC,GAAA,UA+WeC,GA3UH,SAAAV,GACZ,SAAAW,EAAAnjF,GAEA,IAAA9V,EAAA8V,GAAoD,GAEpDwiF,EAAA3xG,KAAAsZ,KAAA,CACAghC,aAAAjhC,EAAAihC,aACA/7B,WAAAlF,EAAAkF,WACA+M,YAAAjS,EAAAiS,cAOAhS,KAAAgkC,kBACA36C,IAAA0W,EAAAkhC,YAAAlhC,EAAAkhC,YAAA,KAMAjhC,KAAAi5F,KAAAl5F,EAAA+rB,IAMA9rB,KAAAq3F,wBAAAhuG,IAAA0W,EAAAq3F,kBACAr3F,EAAAq3F,kBAAkCwB,GAMlC54F,KAAAk5F,QAAAn5F,EAAA6qF,QAAA,GAMA5qF,KAAAm5F,MAAA,EACAn5F,KAAAo5F,aAMAp5F,KAAAq5F,YAAiFt5F,EAAA,WAMjFC,KAAA2nF,YAAAt+F,IAAA0W,EAAA2nF,OAAA3nF,EAAA2nF,MAMA1nF,KAAAkkC,OAAA,KAMAlkC,KAAAs5F,WAAA,MAMAt5F,KAAAm7E,kBAAA,EAMAn7E,KAAAu5F,YAAAlwG,IAAA0W,EAAAyd,MAAAzd,EAAAyd,MAAA,IAyPA,OArPA66E,IAAAW,EAAAj2F,UAAAs1F,GACAW,EAAAxyG,UAAAD,OAAAmE,OAAA2tG,KAAA7xG,WACAwyG,EAAAxyG,UAAAwc,YAAAg2F,EAgBAA,EAAAxyG,UAAAgzG,qBAAA,SAAAhrG,EAAAkC,EAAAuU,EAAA2lF,GACA,QAAAvhG,IAAA2W,KAAAi5F,KAAA,CAGA,IAAAQ,EAAwBlzG,OAAAi1B,EAAA,EAAAj1B,CAAa0e,GACrCy0F,EAAA15F,KAAAoiC,gBAEAs3D,OAAAD,IACA/oG,EAAmBnK,OAAAkgD,GAAA,EAAAlgD,CAAyBmzG,EAAAD,EAAAjrG,EAAAkC,GAC5ClC,EAAmBjI,OAAAi1B,EAAA,EAAAj1B,CAASiI,EAAAirG,EAAAC,IAG5B,IAAAzrG,EAAiB1H,OAAAqgB,EAAA,EAAArgB,CAAiBiI,EAAAkC,EAAA,EAClCooG,IAEAa,EAAA,CACAC,QAAA,MACA/kG,QCzKO,QD0KPglG,QAAA,iBACAC,OAAA,YACAC,aAAA,EACAC,aAAAh6F,KAAAk5F,QAAA,QAEI3yG,OAAAwO,EAAA,EAAAxO,CAAMozG,EAAA35F,KAAAk5F,QAAAtO,GAEV,IAAAx8F,EAAAyB,KAAAy3B,OAAA94B,EAAA,GAAAP,EAAA,IAAAyC,GACArC,EAAAwB,KAAAy3B,OAAAr5B,EAAA,GAAAO,EAAA,IAAAkC,GAIA,OAHAipG,EAAA35F,KAAAm5F,KAAA,SAAA/qG,EACAurG,EAAA35F,KAAAm5F,KAAA,SAAA9qG,EAEA2R,KAAAi6F,eACAhsG,EAAA6qG,GACA,EAAAY,GAAAD,EAAAE,KASAX,EAAAxyG,UAAA0zG,UAAA,WACA,OAAAl6F,KAAAk5F,SAMAF,EAAAxyG,UAAAkyG,iBAAA,SAAAzqG,EAAAyC,EAAA+6B,EAAAxmB,GAEA,QAAA5b,IAAA2W,KAAAi5F,KACA,YAGAvoG,EAAAsP,KAAAw4F,sBAAA9nG,GAEA,GAAA+6B,GAAAzrB,KAAA2nF,aAAAt+F,IAAA2W,KAAAq5F,cACA5tE,EAAA,GAGA,IAAAi6C,EAAAh1E,EAAA+6B,EAEAh7B,EAAiBlK,OAAAqgB,EAAA,EAAArgB,CAAS0H,GAC1BksG,EAAAtqG,KAAAk5B,KAA8BxiC,OAAAqgB,EAAA,EAAArgB,CAAQ0H,GAAAy3E,GACtC00B,EAAAvqG,KAAAk5B,KAA+BxiC,OAAAqgB,EAAA,EAAArgB,CAAS0H,GAAAy3E,GACxC20B,EAAqB9zG,OAAAqgB,EAAA,EAAArgB,CAAiBkK,EAAAi1E,EAAA,EACtC,CAAAy0B,EAAAC,IACAE,EAAAzqG,KAAAk5B,KAAA/oB,KAAAu5F,OAA+ChzG,OAAAqgB,EAAA,EAAArgB,CAAQ0H,GAAAy3E,GACvD60B,EAAA1qG,KAAAk5B,KAAA/oB,KAAAu5F,OAAgDhzG,OAAAqgB,EAAA,EAAArgB,CAAS0H,GAAAy3E,GACzD80B,EAAwBj0G,OAAAqgB,EAAA,EAAArgB,CAAiBkK,EAAAi1E,EAAA,EACzC,CAAA40B,EAAAC,IAEA/gG,EAAAwG,KAAAkkC,OACA,GAAA1qC,GACAwG,KAAAm7E,mBAAAn7E,KAAA+a,eACAvhB,EAAAuY,iBAAArhB,GACA8I,EAAAinC,iBAAAhV,GACQllC,OAAAqgB,EAAA,EAAArgB,CAAciT,EAAA2H,YAAAk5F,GACtB,OAAA7gG,EAGA,IAAAoxF,EAAA,CACAgP,QAAA,MACA/kG,QC3OO,QD4OPglG,QAAA,SACAC,OAAA,YACAC,aAAA,GAEIxzG,OAAAwO,EAAA,EAAAxO,CAAMqkG,EAAA5qF,KAAAk5F,SAEVl5F,KAAAs5F,WAAA,GAAAzpG,KAAAo6B,MAAoC1jC,OAAAqgB,EAAA,EAAArgB,CAAQi0G,GAAA90B,GAC5C1lE,KAAAs5F,WAAA,GAAAzpG,KAAAo6B,MAAoC1jC,OAAAqgB,EAAA,EAAArgB,CAASi0G,GAAA90B,GAE7C,IAAA55C,EAAA9rB,KAAAi6F,eAAAO,EAAAx6F,KAAAs5F,WAAA7tE,EACAxmB,EAAA2lF,GAUA,OARA5qF,KAAAkkC,OAAA,IAAsBgzD,GAAYsD,EAAA9pG,EAAA+6B,EAClCK,EAAA9rB,KAAAgkC,aAAAhkC,KAAAq3F,oBAEAr3F,KAAAm7E,kBAAAn7E,KAAA+a,cAEIx0B,OAAAo+C,EAAA,EAAAp+C,CAAMyZ,KAAAkkC,OAAcnB,GAAA,EAAS9oC,OACjC+F,KAAA24F,kBAAA34F,MAEAA,KAAAkkC,QASA80D,EAAAxyG,UAAAi0G,qBAAA,WACA,OAAAz6F,KAAAq3F,oBAYA2B,EAAAxyG,UAAAyzG,eAAA,SAAAhsG,EAAA2C,EAAA66B,EAAAxmB,EAAA2lF,GAUA,GARIrkG,OAAA4pD,EAAA,EAAA5pD,MAAM8C,IAAA2W,KAAAi5F,KAAA,GAEVrO,EAAA5qF,KAAAm5F,KAAA,aAAAl0F,EAAA/D,UAEA,WAAAlB,KAAAk5F,UACAtO,EAAA,WAGA,GAAAn/D,EACA,OAAAzrB,KAAAq5F,aACA,KAAaR,GACb,IAAA6B,EAAA,GAAAjvE,EAAA,KACA,mBAAAm/D,EACAA,EAAA,wBAA0C8P,EAE1C9P,EAAA,sBAAA8P,EAEA,MACA,KAAa7B,GACbjO,EAAA,kBAAAn/D,EACA,MACA,KAAaotE,GACb,KAAaA,GACbjO,EAAA,OAAAn/D,EACA,MACA,QACUllC,OAAA4pD,EAAA,EAAA5pD,EAAM,KAKhBqkG,EAAA,MAAAh6F,EAAA,GACAg6F,EAAA,OAAAh6F,EAAA,GAEA,IACA+lC,EADAn2B,EAAAyE,EAAAzD,qBASA,OANAm1B,EADA32B,KAAAm5F,MAAA,MAAA34F,EAAAm6F,OAAA,KACA,CAAA1sG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAEA28F,EAAA,KAAAj0D,EAAA3hB,KAAA,KAEW01E,EAA+B1qF,KAAA,KAAA4qF,IAQ1CoO,EAAAxyG,UAAAo0G,OAAA,WACA,OAAA56F,KAAAi5F,MAQAD,EAAAxyG,UAAAq0G,qBAAA,SAAAzD,GACAp3F,KAAAkkC,OAAA,KACAlkC,KAAAq3F,mBAAAD,EACAp3F,KAAAmd,WAQA67E,EAAAxyG,UAAAqkD,OAAA,SAAA/e,GACAA,GAAA9rB,KAAAi5F,OACAj5F,KAAAi5F,KAAAntE,EACA9rB,KAAAkkC,OAAA,KACAlkC,KAAAmd,YASA67E,EAAAxyG,UAAAs0G,aAAA,SAAAlQ,GACIrkG,OAAAwO,EAAA,EAAAxO,CAAMyZ,KAAAk5F,QAAAtO,GACV5qF,KAAAo5F,aACAp5F,KAAAkkC,OAAA,KACAlkC,KAAAmd,WAMA67E,EAAAxyG,UAAA4yG,WAAA,WACA,IAAAhO,EAAAprF,KAAAk5F,QAAA,SCvXO,QDwXPl5F,KAAAm5F,KAAgB5yG,OAAAw0G,GAAA,EAAAx0G,CAAe6kG,EAAA,WAG/B4N,EAvUY,CFuLG,sBIlPAgC,EAAA,WACf,IAAAC,EAQAD,EAAA,gBAAAE,MAEA,WACAD,IACAryG,aAAAqyG,GACAA,EAAA,MAEAD,EAAAh7F,MAAAm7F,YAAA,oBACAF,EAAA3xG,WAAA,WAEA,OAoBA0xG,EAAA,gBAAAI,SAAA,YApBA,GAhBA,KAoBA,WACAH,IACAryG,aAAAqyG,GACAA,EAAA,MAEAD,EAAAh7F,MAAAo7F,SAAA,oBACAH,EAAA3xG,WAAA,WAIA,OAUA0xG,EAAA,gBAAAG,YAAA,WAAArvF,SAVA,GA/BA,OA6CAkvF,EAAA,mBAAA/8D,GAAA,mBACA+8D,EAAA,gBAAAK,OACAL,EAAA,gBAAAG,YAAA,cCjDAn0G,EAAAsB,EAAuBgzG,QAAAC,SAAA,iBA2BvB,IAAAC,GAAA,uCACAC,GAAA,EAGA,MAAAC,GAAA,KAIEC,EAAAn+F,EAACo+F,GAAAC,UAAAC,WAAA,EAGHH,IAAC,WAmBD,SAAAI,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,OAEAC,GAAA,EACAC,EAAA,IAEU,GAADX,EAAAn+F,EAAC++F,QAAAN,EAJV,+BAKAG,EAAAH,GAEAC,IACAG,GAAA,EACAC,EAAA,qBAGA,IAAApW,EAAA,2BAAAkW,EAAA,IAAAE,EAAA,4BAEApW,GAAA8V,EAEAK,IACAnW,GAAA,8JAKAA,GAAA,SAEA,IAAAsW,EAAcb,IAACzV,GASf,OARIyV,IAAC,YAAAc,OAAAD,QAELnzG,IAAA8yG,GACA7yG,WAAA,WACQqyG,IAAC,UAAAe,MAAA,UACFP,GAGPK,EA+EA,SAAAG,IACA,IAAAC,EAAA,GACAC,WAAAhsF,IAAA27C,YAAA3mD,QAAA,SAAA24B,GAEA,IAAAA,EAAArwB,gBAAA1nB,eAAA,cACA,IAAA2uG,EAAA,CACA0H,aAAAt+D,EAAArwB,gBAAA2uF,aACAC,UAAAv+D,EAAArwB,gBAAA4uF,UACAvb,MAAAhjD,EAAArwB,gBAAAqzE,MACArE,OAAA3+C,EAAArd,YAAA+4E,YAAA8C,OACAC,kBAAAz+D,EAAArwB,gBAAA8uF,kBACArzG,KAAA40C,EAAArd,YAAA+4E,YAAAnuC,OACA/2D,OAAAwpC,EAAAxpC,aAGA3L,IAAAm1C,EAAA9c,cACAk7E,EAAAp+D,EAAA9c,aAAA0zE,MAMAwH,EAAA5zB,UAEA4zB,IAAArtD,OAAA1kD,MAEW,OAAD8wG,EAAAn+F,EAACo+F,GAAAC,UAAAqB,QAAA,mBACHvB,EAAAn+F,EAACo+F,GAAAC,UAAAqB,QAAA,kBAAAC,OAAAP,GAITQ,IAGA,IAAAC,EAAA,SAAA1wE,GACA,SAAA0wE,EAAAxnF,GACA,IAAA9V,EAAA8V,GAAA,GAEA7I,EAAAnlB,SAAAG,cAAA,UACAglB,EAAAkuB,UAAA,gBACAluB,EAAAw0E,MAAA8b,QAAA,cAEA,IAAAzlF,EAAAhwB,SAAAG,cAAA,OACA6vB,EAAAqjB,UAAA,0CACArjB,EAAAtuB,YAAAyjB,GAEA2f,EAAAjmC,KAAAsZ,KAAA,CACA6X,UACA5uB,OAAA8W,EAAA9W,SAGA+jB,EAAA1Y,iBAAA,QAAA0L,KAAAu9F,eAAA3yG,KAAAoV,OAAA,GA2BA,OAxBA2sB,IAAA0wE,EAAAt6F,UAAA4pB,GACA0wE,EAAA72G,UAAAD,OAAAmE,OAAAiiC,KAAAnmC,WACA62G,EAAA72G,UAAAwc,YAAAq6F,EAEAA,EAAA72G,UAAA+2G,eAAA,WACS5B,IAAC37F,KAAA6X,SAAA2lF,SAAA,WACF7B,IAAC37F,KAAA6X,SAAAsjF,YAAA,UAETn7F,KAAA0Q,SAAAogD,kBAAAjrD,QAAA,SAAA2qD,GACAA,aAAoCz1B,GAAA,IACpCy1B,EAAAnzB,WAAqCpC,GAAA,OAI7B0gE,IAAC37F,KAAA6X,SAAAujF,SAAA,UAETp7F,KAAA0Q,SAAAogD,kBAAAjrD,QAAA,SAAA2qD,GACAA,aAAoCz1B,GAAA,IACpCy1B,EAAAnzB,WAAqCpC,GAAA,OAMrCoiE,EA5CA,CA6CI7a,EAAA,GAEJib,EAAA,SAAA9wE,GACA,SAAA8wE,EAAA5nF,GACA,IAAA9V,EAAA8V,GAAA,GAEA7I,EAAAnlB,SAAAG,cAAA,UACAglB,EAAAkuB,UAAA,2BACAluB,EAAAw0E,MAAA8b,QAAA,YAEA,IAAAzlF,EAAAhwB,SAAAG,cAAA,OACA6vB,EAAAqjB,UAAA,4CACArjB,EAAAtuB,YAAAyjB,GAEA2f,EAAAjmC,KAAAsZ,KAAA,CACA6X,UACA5uB,OAAA8W,EAAA9W,SAGA+jB,EAAA1Y,iBAAA,QAAA0L,KAAA09F,mBAAA9yG,KAAAoV,OAAA,GAYA,OATA2sB,IAAA8wE,EAAA16F,UAAA4pB,GACA8wE,EAAAj3G,UAAAD,OAAAmE,OAAAiiC,KAAAnmC,WACAi3G,EAAAj3G,UAAAwc,YAAAy6F,EAEAA,EAAAj3G,UAAAk3G,mBAAA,WACA19F,KAAA0Q,SAAA6qB,UAAAjqB,UAAAkqF,IACAx7F,KAAA0Q,SAAA6qB,UAAAyS,QAAAytD,KAGAgC,EA7BA,CA8BIjb,EAAA,GAwBJ,GAtBAqa,WAAAhsF,IAAA,IAAuB0vE,EAAA,EAAG,CAC1Bt3F,OAAA,MACAskE,SAAchnE,OAAA+zB,EAAA,EAAA/zB,CAAe,CAC7Bs9F,YAAA,CACAN,eAAA+Z,QAAA,OACA9Z,gBAAA8Z,QAAA,WAEK9wG,OAAA,CACL,IAAU64F,EACV,IAAAgY,EACA,IAAAI,IAEA3sF,KAAA,IAAc46B,EAAA,EAAI,CAClBj7C,OAAA+qG,GACA3rF,KAAA4rF,OAKAoB,WAAAhsF,IAAA0qB,UAAA0C,GAAA,oBAAAm/D,GAGAP,WAAAp2G,eAAA,cACAo2G,WAAAc,UAAAd,WAAAc,UAAAzpF,MAAA,KAEA,QAAAhuB,EAAA,EAAmBA,EAAA22G,WAAAc,UAAAv3G,OAAiCF,IAAA,CACpD,IAAAy3G,EAAA,KACA,iBAAAd,WAAAc,UAAAz3G,GACAy3G,EAAA,IAAwBh7D,EAAA,EAAS,CACjCj+B,OAAA,IAAsBq6C,EAAA,SAGtB,sBAAA89C,WAAAc,UAAAz3G,GACAy3G,EAAA,IAAwBh7D,EAAA,EAAS,CACjCj+B,OAAA,IAAsByiF,EAAM,CAC5B3oD,MAAA,iBAIA,mBAAAq+D,WAAAc,UAAAz3G,IACA22G,WAAAp2G,eAAA,2BACAk3G,EAAA,IAAwBh7D,EAAA,EAAS,CACjCj+B,OAAA,IAAsBiO,EAAA,EAAG,CACzBmZ,IAAA,qEAAwE+wE,WAAAe,iCAIxE,mBAAAf,WAAAc,UAAAz3G,IACA,kBAAA22G,WAAAc,UAAAz3G,IACA,eAAA22G,WAAAc,UAAAz3G,KACA22G,WAAAp2G,eAAA,oBAeA,kBAAAo2G,WAAAc,UAAAz3G,IACA,eAAA22G,WAAAc,UAAAz3G,IACA,iBAAA22G,WAAAc,UAAAz3G,IACA,iBAAA22G,WAAAc,UAAAz3G,KACA22G,WAAAp2G,eAAA,mBAwCA,mBAAAo2G,WAAAc,UAAAz3G,KACAy3G,EAAA,IAAwBh7D,EAAA,EAAS,SAzCjC,CACA,IAMA3wB,EAAA,GACAs4E,EAAA,GACAuT,EAAuBt3G,OAAAi1B,EAAA,EAAAj1B,CAAa,aACpC27B,EAA4B37B,OAAAqgB,EAAA,EAAArgB,CAAQs3G,EAAA18F,aAAA,IAEpC,IAAAjb,EAAA,EAAuBA,EAAA,GAAQA,IAC/BokG,EAAApkG,KAAA2wB,WACA7E,EAAA9rB,GAAAg8B,EAAAryB,KAAA2jB,IAAA,EAAAttB,GAGA,IAAA2b,EAAA,IAA2B4oF,EAAY,CACvCliE,OAAA,qBACAvW,cACAs4E,cAGAwT,EAAA,IAA6B9S,EAAI,CACjCl/D,IAAA,2BAAA+wE,WAAAkB,gBAAA,QACAv/D,MAxBA,CACAw/D,WAAA,+BACAC,WAAA,kCACAC,aAAA,2BACAC,aAAA,4BAoBAtB,WAAAc,UAAAz3G,IACAulG,UAAA,KACAp2D,OAAA,aACApwB,WAAA,YACApD,WACAnJ,MAAA,SACAsoC,aAAA,oJAKA28D,EAAA,IAAwBh7D,EAAA,EAAS,CACjCj+B,OAAAo5F,QAxDA,CAMAH,EAAA,IAAwBh7D,EAAA,EAAS,CACjC3gB,SAAA,EACA4hD,QAAAt0E,IACAoV,OAAA,IAAsB8iF,EAAQ,CAC9B78F,IAAAkyG,WAAAuB,iBACAnW,WAVA,CACAoW,YAAA,OACAC,cAAA,SACAC,WAAA,oBAOA1B,WAAAc,UAAAz3G,QAqDA,GAAAy3G,EAAA,CACA,IAAAa,EAAyB7C,IAAC,oBAAA1zF,KAAA,aAAA/X,OAAA2sG,WAAAc,UAAAz3G,GAE1By3G,EAAA1vF,cAAA,CACAuzE,MAAAqb,WAAAc,UAAAz3G,GACA87B,QAAAw8E,EACAb,WAAA,IAGAd,WAAAhsF,IAAAkgD,SAAA4sC,KAomBA,SAAAP,IACA,IAAAqB,EAAA,GACAC,EAAA,GACA7kG,EAAA,IAAAgjG,WAAAhsF,IAAA0qB,UAAAxpB,gBAAA,GAAA3mB,OAAAokB,iBAAAksF,GAEAmB,WAAAhsF,IAAA27C,YAAA3mD,QAAA,SAAA24B,GACA,YAAAA,EAAAz1C,KAAA,CACA,IAAA41G,EAAAngE,EAAArd,YACAs9E,EAAAjgE,EAAA9c,aAAAi9E,EAAA/D,SAAA,6DAAA+D,EAAAzE,YAAAnuC,OAAA,UAAA4yC,EAAAzE,YAAA8C,OAAA,4IAAAnjG,KAIA,QAAA3T,EAAAu4G,EAAAr4G,OAAA,EAAoCF,GAAA,EAAQA,SAC5CmD,IAAAo1G,EAAAv4G,KACAw4G,GAAA,kBAAAD,EAAAv4G,GAAA,YAGA2B,SAAAolC,eAAA,kBAAAg1D,UAAAyc,EA0IA,SAAAE,IAGIjD,IAAC,uBAAA19D,GAAA,mBACL,GAAA4gE,QAAAvB,QAAA,gCACA,IAAAwB,EAAmBnD,IAAC37F,MAAA9P,MAEZyrG,EAAAn+F,EAACuhG,KAAA,CACTjzE,IAAAwvE,QAAA0D,kBACAj2G,KAAA,OACAlD,KAAA,CAAiB8wB,GAAAmoF,GACjBG,SAAA,OACAC,QAAA,SAAAr5G,GACAs5G,EAAAt5G,MAIA,WAGI81G,IAAC,uBAAAyD,MAAA,WACL,IAAAN,EAAiBnD,IAAC37F,MAAA9P,MAqDlB,OAnDMyrG,EAAAn+F,EAACuhG,KAAA,CACPjzE,IAAAwvE,QAAA+D,eACAt2G,KAAA,MACAlD,KAAA,CAAe8wB,GAAAmoF,GACfG,SAAA,OACAC,QAAA,SAAAI,GAGA,IADA,IAAApzC,EAAA2wC,WAAAhsF,IAAA27C,YAAAt0C,OACAhyB,EAAAgmE,EAAA9lE,OAAA,EAAyCF,GAAA,EAAQA,IACjDgmE,EAAAhmE,GAAAioB,gBAAA1nB,eAAA,cACAo2G,WAAAhsF,IAAA6iD,YAAAxH,EAAAhmE,IASA,GAJA22G,WAAAhsF,IAAA0qB,UAAAjqB,UAAAguF,EAAA7uG,QACAosG,WAAAhsF,IAAA0qB,UAAAyS,QAAAsxD,EAAAzvF,MAGAyvF,EAAApzC,OAAA9lE,OAAA,GACA,IAAAF,EAAA,EAA2BA,EAAAo5G,EAAApzC,OAAA9lE,OAA8BF,IAAA,CACzD,IAAAq5G,EAAAD,EAAApzC,OAAAhmE,GAEAs5G,EAAA,IAAiCpZ,EAAU,CAC3C5E,MAAA+d,EAAA/d,MACAsb,aAAAyC,EAAAzC,aACAC,UAAAwC,EAAAxC,UACAxjG,QAAAgmG,EAAAhmG,QACAo9B,KAAA4oE,EAAA5oE,KACA8oE,MAAAF,EAAAE,MACAz9E,QAAAu9E,EAAAv9E,QACAL,OAAA49E,EAAA59E,OACAM,cAAAs9E,EAAAt9E,cACAC,cAAA,MAAAq9E,EAAAr9E,cAAAq9E,EAAAr9E,cAAA5yB,IACAoV,OAAA,IAA4Bq0F,GAAQ,CACpCjtE,IAAAwvE,QAAAoE,IAAA,eAAAH,EAAAzC,aAAA,YAAAyC,EAAAxC,UACAnS,OAAA,CACA7+B,OAAAwzC,EAAA31G,KACAozG,OAAAuC,EAAA7mG,OAEAinG,WAAA,WAIA9C,WAAAhsF,IAAAkgD,SAAAyuC,GAEA7C,SAKA,IAIA,SAAAwC,EAAAS,GAEIjE,IAAC,yBAAAzV,KAAA0Z,GAEDjE,IAAC,gCAAAkE,OAAA,SAELjB,IAEIjD,IAAC,oBAAAzrG,IAAA,IAAA4vG,OAh1BHnE,IAAC,oBAAAoE,OAAA,WACH,IAAAC,EAA4BrE,IAAC37F,MAAAiI,KAAA,aAAA/X,MAC7B2sG,WAAAhsF,IAAA27C,YAAA3mD,QAAA,SAAA24B,GACAA,EAAArwB,gBAAAwvF,WACAn/D,EAAAO,WAAAP,EAAArwB,gBAAAqzE,OAAAwe,OAMAnD,WAAAp2G,eAAA,YACAo2G,WAAAhsF,IAAA0qB,UAAAwV,IAAiCxqD,OAAAi1B,EAAA,EAAAj1B,CAAes2G,WAAA5uG,OAAA,YAAA4uG,WAAAhsF,IAAA0qB,UAAAqG,cAEhD45D,GAAAqB,WAAAhsF,IAAA0qB,UAAAxuC,YACA0uG,GAAAoB,WAAAhsF,IAAA0qB,UAAAqS,WAeAivD,WAAAhsF,IAAAotB,GAAA,UAZA,SAAA1pC,GACOonG,IAAC,iBAAA6B,SAAA,YACF7B,IAAC,wBAAAR,YAAA,UAEP5mG,EAAAsc,IAAAigD,kBAAAjrD,QAAA,SAAA2qD,GACAA,aAAkCz1B,GAAA,IAClCy1B,EAAAnzB,WAAmCpC,GAAA,QASnC4hE,WAAAhsF,IAAAotB,GAAA,uBAAA1pC,GACA,IAAA4rE,EAAA08B,WAAAhsF,IAAA0qB,UAAAxpB,gBACA9M,EAAA43F,WAAAhsF,IAAA0qB,UAAA6G,gBACA69D,EAAA,GAEApD,WAAAhsF,IAAA27C,YAAA3mD,QAAA,SAAA24B,GACA,IAAAA,EAAArwB,gBAAA1nB,eAAA,sBAAA+3C,EAAAxwB,QAAAyxF,MAAA,CACA,IAAA3zE,EAAA0S,EAAArd,YAAAq4E,qBACAjlG,EAAA/F,WAAA2xE,EAAAl7D,EACA,CACAi7F,YAAA,YACAC,mBAAA,GACAC,kBAAA,GACAC,qBAAA,IAKAv0E,IACAm0E,EAAAzhE,EAAA9c,aAAAoK,MAOA,IADA,IAAAzkC,EAAA,GACAnB,EAAA+5G,EAAA75G,OAAA,EAA4CF,GAAA,EAAQA,SACpDmD,IAAA42G,EAAA/5G,IACAmB,EAAAf,KAAA,IAAAkB,QAAAC,GACUk0G,EAAAn+F,EAACvT,IAAAg2G,EAAA/5G,GAAA,SAAAo6G,GACX74G,EAAA64G,OAMA94G,QAAAgC,IAAAnC,GAAAk5G,KAAAC,IAEA,IADA,IAAAC,EAAA,GACAv6G,EAAA,EAAqBA,EAAAs6G,EAAAp6G,OAAoBF,IACzCu6G,GAAAD,EAAAt6G,GAGA2B,SAAAolC,eAAA,iBAAAg1D,UAAAwe,EAEA,IAAAA,GAEQ9E,IAAC,sBAAAR,YAAA,UACDQ,IAAC,sBAAA+E,IAAA,QACD/E,IAAC,sBAAA7vF,SAEE6vF,IAAC,kBAAA6B,SAAA,YACF7B,IAAC,sBAAAP,SAAA,UACDO,IAAC,SAAAN,YAMTM,IAAC,eAAAE,UAAA,CACH8E,WAAA,EACAj8F,OAAAm4F,WAAA+D,eACAC,WAAA,kBACAC,MAAA,CACAC,YAAA,GACAC,cAAA,GAEAC,MAAA,CAGAC,OAAA,WACArwF,IAAA,CACA++E,IAAA,sBACAuR,QAAA,sBACAC,OAAA,gBACAC,WAAA,uBAGAC,SAAA,SAAA74G,EAAA5C,GAEA,IAAAi3G,EAAAj3G,EAAA6lB,KAAA7lB,KAAA07G,WACAxE,EAAAl3G,EAAA6lB,KAAA7lB,KAAA27G,QACA11E,EAAAwvE,QAAAoE,IAAA,eAAA5C,EAAA,YAAAC,EAAA,qDACAvN,EAAA,IAAuByH,GAEvB,MAAA5vG,EAAA,CACA,IAAAG,QAAAC,GACUk0G,EAAAn+F,EAACvT,IAAA6hC,EAAA,SAAA21E,GACX,IACA/1F,EADA8jF,EAAAG,KAAA8R,GACA3Q,WAGAplF,EAAAjlB,eAAA,UACAgB,EAAAikB,EAAA4U,gBAIA,IAAA94B,QAAAC,GACUk0G,EAAAn+F,EAACkkG,QAAApG,QAAAqG,OAAA,CAAyBJ,WAAAzE,EAAA0E,QAAAzE,GAA8C,SAAA6E,GAClFn6G,EAAAm6G,OAKA/7G,EAAA+wC,OAAApvC,QAAAgC,IAAAnC,GAAAk5G,KAAAC,IACA3D,WAAAp2G,eAAA,YACAo2G,WAAAgF,OAAA,IAGAhF,WAAAgF,OAAA/E,EAAA,IAAAC,GAAA,GACAF,WAAAgF,OAAA/E,EAAA,IAAAC,GAAA4E,OAAAnB,EAAA,GA1cA,SAAAsB,EAAAtjE,EAAAujE,GACA,IAAAC,EAAA,GACA,GAAA5kG,MAAA2K,QAAAy2B,GAyBA,OAxBAA,EAAA34B,QAAA,SAAAo8F,GAEA,IAAAC,EAAAD,EAAAvQ,KAGA,IAAAqQ,EAAA71C,OAAAzlE,eAAAw7G,EAAAvQ,MACA,QAAA/mG,KAAAo3G,EAAA71C,OACA61C,EAAA71C,OAAAvhE,GAAAlE,eAAA,cAAAs7G,EAAA71C,OAAAvhE,GAAAw3G,WAAAF,EAAAvQ,OACAwQ,EAAAH,EAAA71C,OAAAvhE,GAAAf,MAKA,KAAAq4G,EAAAx7G,eAAA,oBAAAw7G,EAAAtQ,MAAApiF,eAAA,YAAA0yF,EAAAtQ,MAAApiF,kBAIA0yF,EAAAx7G,eAAA,UAAAs7G,EAAA71C,OAAAzlE,eAAAy7G,IACA,SAAAH,EAAA71C,OAAAg2C,GAAAE,iBAAA,QAAAL,EAAA71C,OAAAg2C,GAAAvsB,cADA,CAIA,IAAAzpB,EAAA41C,EAAAG,EAAAF,GACAC,IAAArM,OAAAzpC,MAEA81C,EAIA,IAAAK,EAAA7jE,EAAAkzD,KAGA,IAAAqQ,EAAA71C,OAAAzlE,eAAA+3C,EAAAkzD,MACA,QAAA/mG,KAAAo3G,EAAA71C,OACA61C,EAAA71C,OAAAvhE,GAAAlE,eAAA,cAAAs7G,EAAA71C,OAAAvhE,GAAAw3G,WAAA3jE,EAAAkzD,OACA2Q,EAAAN,EAAA71C,OAAAvhE,GAAAf,MAMA,IAAA04G,EAAA,CAAiB9gB,MAAAugB,EAAA71C,OAAAm2C,GAAA7gB,MAAA53F,KAAAy4G,EAAA5C,MAAAsC,EAAA71C,OAAAm2C,GAAA5C,OA6BjB,OA3BAjhE,EAAA/3C,eAAA,WACA67G,EAAA5pG,MAAA8lC,EAAAu2D,OAEAv2D,EAAA/3C,eAAA,8BACA67G,EAAA3rE,KAAA6H,EAAAg1D,0BAEAh1D,EAAA/3C,eAAA,6BAAA4C,IAAAm1C,EAAAy2D,sBACAqN,EAAAC,SAAA/jE,EAAAy2D,qBAEAz2D,EAAA/3C,eAAA,6BAAA4C,IAAAm1C,EAAA02D,sBACAoN,EAAAE,SAAAhkE,EAAA02D,qBAEA6M,EAAAU,gBAAAh8G,eAAA47G,IACA,QAAAN,EAAAU,gBAAAJ,GAAAK,WACA,QAAAX,EAAAU,gBAAAJ,GAAAM,QACAL,EAAArF,mBAAA,GAEA8E,EAAA71C,OAAAzlE,eAAA47G,IACA,IAAAN,EAAA71C,OAAAm2C,GAAA1tG,WACA2tG,EAAAM,QAAAb,EAAA71C,OAAAm2C,GAAA1tG,UAEAqtG,EAAA17G,KAAAg8G,GAEA9jE,EAAA/3C,eAAA,mBAAAs7G,EAAA71C,OAAAm2C,GAAAQ,eACAP,EAAAlB,QAAA,EACAkB,EAAAvsE,SAAA+rE,EAAAtjE,EAAAle,MAAAyhF,IAEAC,EAoYAF,CAAAtB,EAAA,GAAAA,EAAA,OAGAsC,cAAA,SAAAr6G,EAAA5C,GACA,IAAA6lB,EAAA7lB,EAAA6lB,KACAq3F,EAAgBpH,IAACjwF,EAAAs3F,IAAA/6F,KAAA,OAGjB,GAAAyD,EAAA7lB,KAAAY,eAAA,UACA,IAAAw8G,EAAA,GACAv3F,EAAA7lB,KAAA6S,MAAAmN,QAAA,SAAAnN,GACAuqG,GAAA,WAAAvqG,EAAAg5F,KAAA,cAEAqR,EAAAG,GAAA,GAAAhd,KAAA,8DAAA+c,EAAA,aAGAv3F,EAAAy3F,WAAA,SAAAz3F,EAAAqqB,UACAgtE,EAAAG,GAAA,GAAAhd,KAAA,mGAMEyV,IAAC,eAAA19D,GAAA,mCAAA72C,GACH,IAAAskB,EAAeiwF,EAAAn+F,EAACo+F,GAAAC,UAAAuH,QAAAh8G,GAEhBi8G,EAAA33F,EAAA43F,gBAEAxG,EAAAuG,EAAA,GAAAx9G,KAAA07G,WACAxE,EAAAsG,EAAA,GAAAx9G,KAAA27G,QAEAhC,EAAA,IAAuBpZ,EAAU,CACjC5E,MAAA91E,EAAA81E,MACAsb,eACAC,YACApmE,KAAAjrB,EAAA7lB,KAAA8wC,KACA8oE,MAAA/zF,EAAA7lB,KAAA45G,MACAxC,kBAAAvxF,EAAA7lB,KAAAo3G,kBACAv4F,OAAA,IAAkBq0F,GAAQ,CAC1BjtE,IAAAwvE,QAAAoE,IAAA,eAAA5C,EAAA,YAAAC,EACAnS,OAAA,CACA7+B,OAAArgD,EAAA7lB,KAAA+D,KACAozG,OAAoBrB,IAACjwF,EAAAs3F,IAAA/6F,KAAA,8BAAA9Q,QAErBwoG,WAAA,WAKAj0F,EAAA7lB,KAAAY,eAAA,aACA+4G,EAAA3gE,iBAAAnzB,EAAA7lB,KAAA08G,SAAA7G,IAAA,IAAAtwG,OAAAokB,mBAEA9D,EAAA7lB,KAAAY,eAAA,aACA+4G,EAAA5gE,iBAAAlzB,EAAA7lB,KAAA28G,SAAA9G,IAAA,IAAAtwG,OAAAokB,mBAGA,IAAA+zF,GAAA,EAEA1G,WAAAhsF,IAAA27C,YAAA3mD,QAAA,SAAA24B,GACA,IAAA7c,EAAA6c,EAAA9c,iBACAr4B,IAAAs4B,KAAA4hF,IACAA,EAAA5hF,KAIA4hF,GAAA,EACA/D,EAAAxgE,UAAAukE,EAAA,GAEA/D,EAAAxgE,UAAA,GAIAwgE,EAAAr+E,YAAA8c,GAAA,0BAAAx1C,GACMkzG,IAAC,mBAAA6H,QAAA,6DACPlG,QAAA,iFACAA,QAAA,0DAKAkC,EAAAr+E,YAAA8c,GAAA,wBAAAx1C,GACMkzG,IAAC,yCAAA3zF,WAGP60F,WAAAhsF,IAAAkgD,SAAAyuC,GACA7C,IACAv1G,EAAAgsB,oBAIEuoF,IAAC,kBAAAE,UAAA,CACHgF,WAAA,iBACAC,MAAA,CACAC,YAAA,GACAC,cAAA,GAEAyC,KAAA,CACAC,UAAA,SAAAh4F,EAAA7lB,GACA,UAEA89G,SAAA,SAAAj4F,EAAA7lB,GACAA,EAAA+9G,WACA/9G,EAAA+9G,UAAA/vE,OAAAnoB,EAAA7lB,EAAAg+G,SAKA,IAFA,IAAAC,EAAAp4F,EAAAJ,OAAAyqB,SAEA7vC,EAAA,EAA2BA,EAAA49G,EAAA19G,OAAqBF,IAEhD,IADA,IAAAgmE,EAAA2wC,WAAAhsF,IAAA27C,YAAAh0C,WACAvb,EAAA,EAA6BA,EAAAivD,EAAA9lE,OAAmB6W,IAChD6mG,EAAA59G,GAAAL,KAAAmP,QAAAk3D,EAAAjvD,GAAAjI,QACAk3D,EAAAjvD,GAAA+hC,UAAA8kE,EAAA19G,OAAAF,GAKAk3G,KAEA2G,UAAA,SAAAr4F,EAAA7lB,GAGA,2BAGAi9G,cAAA,SAAAr6G,EAAA5C,GACA,IAAA6lB,EAAA7lB,EAAA6lB,KACAs4F,EAAsBrI,IAACjwF,EAAAs3F,IACvBgB,EAAA/7F,KAAA,wBAAA9Q,KAAAuU,EAAA7lB,KAAAs3F,QAMA,IAJA,IAAA5jF,EAAA,EACAyoB,GAAA,EAEAkqC,EAAA2wC,WAAAhsF,IAAA27C,YAAAh0C,WACAtyB,EAAA,EAAuBA,EAAAgmE,EAAA9lE,OAAmBF,IAC1CgmE,EAAAhmE,GAAA8O,QAAA0W,EAAA7lB,KAAAmP,SACAuE,EAAA2yD,EAAAhmE,GAAAu4C,aACAzc,EAAAkqC,EAAAhmE,GAAAy4C,cAeA,GAXAqlE,EAAA/7F,KAAA,sBAAAi+E,KAAA,oEAEAlkE,EACAgiF,EAAA/7F,KAAA,2BAAAi+E,KAAA,kEAEA8d,EAAA/7F,KAAA,2BAAAi+E,KAAA,wEAGA8d,EAAA/7F,KAAA,uBAAAi+E,KAAA,0EAGA,GAAA8d,EAAA/7F,KAAA,sBAAA7hB,QAAAslB,EAAA7lB,KAAAY,eAAA,2BAAA4C,IAAAqiB,EAAA7lB,KAAAo3G,kBAAA,CACA,IAAAgH,EAAA,GAEc,GAADtI,IAAC,gDAAAjwF,EAAA7lB,KAAAmP,OAAA,MAAA5O,SACd69G,EAAA,YAGAD,EAAA/7F,KAAA,sBAAAi+E,KAAA,yBAAA+d,EAAA,oFAGAD,EAAA/7F,KAAA,gBAAAi+E,KAAA,kIACA8d,EAAA/7F,KAAA,gBAAAi+E,KAAA,mEAEA,IAAAnkC,EAAA,GACA,IAAA77D,EAAA,EAAuBA,EAAA,EAAOA,IAAA,CAE9B67D,GAAA,qCADAxoD,GAAA,GAAArT,EAAA,iBACA,QAAAA,EAAA,YAGA89G,EAAA/7F,KAAA,wBAAAi+E,KAAA,yEAAAnkC,EAAA,UAEW45C,IAAC,gCAAAv1G,OAAA,EACFu1G,IAAC,0BAAAuI,OAEDvI,IAAC,0BAAAN,UAKTM,IAAC,kBAAA19D,GAAA,6CAAA72C,GAIH,IAHA,IAAAskB,EAAeiwF,EAAAn+F,EAACo+F,GAAAC,UAAAuH,QAAAh8G,GAEhB8kE,EAAA2wC,WAAAhsF,IAAA27C,YAAAh0C,WACAtyB,EAAA,EAAmBA,EAAAgmE,EAAA9lE,OAAmBF,IACtCgmE,EAAAhmE,GAAA8O,QAAA0W,EAAA7lB,KAAAmP,QACA6nG,WAAAhsF,IAAA6iD,YAAAxH,EAAAhmE,IAGAy2G,IACAv1G,EAAAgsB,oBAIEuoF,IAAC,kBAAA19D,GAAA,kDAAA72C,GAIH,IAHA,IAAAskB,EAAeiwF,EAAAn+F,EAACo+F,GAAAC,UAAAuH,QAAAh8G,GAEhB8kE,EAAA2wC,WAAAhsF,IAAA27C,YAAAh0C,WACAtyB,EAAA,EAAmBA,EAAAgmE,EAAA9lE,OAAmBF,IACtCgmE,EAAAhmE,GAAA8O,QAAA0W,EAAA7lB,KAAAmP,SACAk3D,EAAAhmE,GAAAy4C,cACAutB,EAAAhmE,GAAA64C,YAAA,GACU48D,IAAC37F,MAAAiI,KAAA,KAAAkzF,YAAA,UAAAC,SAAA,kBAEXlvC,EAAAhmE,GAAA64C,YAAA,GACU48D,IAAC37F,MAAAiI,KAAA,KAAAkzF,YAAA,gBAAAC,SAAA,YAIXh0G,EAAAgsB,oBAGEuoF,IAAC,kBAAA19D,GAAA,8CAAA72C,GAIH,IAHA,IAAAskB,EAAeiwF,EAAAn+F,EAACo+F,GAAAC,UAAAuH,QAAAh8G,GAEhB8kE,EAAA2wC,WAAAhsF,IAAA27C,YAAAh0C,WACAtyB,EAAA,EAAmBA,EAAAgmE,EAAA9lE,OAAmBF,IACtCgmE,EAAAhmE,GAAA8O,QAAA0W,EAAA7lB,KAAAmP,QACA6nG,WAAAhsF,IAAA0qB,UAAAwV,IAAqCxqD,OAAAi1B,EAAA,EAAAj1B,CAAe2lE,EAAAhmE,GAAAioB,gBAAAwoB,KAAA,YAAAkmE,WAAAhsF,IAAA0qB,UAAA6G,kBAGpDh7C,EAAAgsB,oBAGEuoF,IAAC,kBAAA19D,GAAA,yCAAA72C,GACCu0G,IAAC,kBAAAP,SAAA,UAGDO,IAAC37F,MAAAmkG,KAAA,eAEL,IAzuBAC,EACAC,EAWAC,EACAC,EA4tBA74F,EAAeiwF,EAAAn+F,EAACo+F,GAAAC,UAAAuH,QAAAh8G,GAEhBi7G,GA3uBA+B,EA2uBA14F,EAAA7lB,KAAA+D,KA1uBAy6G,EAAA,CACAG,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,KAQAxD,EAPA,SAAAyD,GAEA,IADA,IAAA5yD,EAAA,GACAjvD,EAAA,EAAwBA,EAAA6hH,EAAA3hH,OAAiBF,IACzCivD,GAAAkvD,EAAA0D,EAAA1+B,OAAAnjF,KAAA6hH,EAAA1+B,OAAAnjF,GAEA,OAAAivD,EAEApxB,CAAAqgF,GACAG,EAAA,IAAAyD,OAAA,WACA1D,EAAA54E,QAAA64E,EAAA,MA8tBAzH,EAAApxF,EAAA7lB,KAAAi3G,aACAC,EAAArxF,EAAA7lB,KAAAk3G,UAEA,MAAA11G,EAAA,CACA,IAAAG,QAAAC,GAEQk0G,EAAAn+F,EAACkkG,QAAApG,QAAAoE,IAAA,CACT6B,WAAAzE,EACA0E,QAAAzE,EACAnD,QAAA,MACAC,QAAA,aACAhlG,QAAA,QACAozG,SAAA5F,EACA6F,aAAA,UACAC,aAAA,UACS,SAAA12C,GACThqE,EAAAgqE,MAGA,IAAAjqE,QAAAC,GAEQk0G,EAAAn+F,EAACkkG,QAAApG,QAAAoE,IAAA,CACT6B,WAAAzE,EACA0E,QAAAzE,EACAnD,QAAA,MACA/kG,QAAA,QACAglG,QAAA,sBACAoO,SAAA5F,EACA6F,aAAA,QACS,SAAAE,GACT3gH,EAAA2gH,OAKA5gH,QAAAgC,IAAAnC,GAAAk5G,KAAAC,IAEA,IAAA/uC,EAAA+uC,EAAA,GAAA/uC,SACA42C,EAAA7H,EAAA,GAAA6H,QAGAC,EAAA72C,EAAA,GAAApzB,WACAkqE,EAAA,GAEA,GAAA1L,WAAAgF,OAAA/E,EAAA,IAAAC,GAAA4E,OAAAc,gBAAA/2F,EAAA7lB,KAAA+D,MAAAnD,eAAA,wBACA,IAAA+hH,EAAA3L,WAAAgF,OAAA/E,EAAA,IAAAC,GAAA4E,OAAAc,gBAAA/2F,EAAA7lB,KAAA+D,MAAA6+G,qBAAAD,QAAAE,OAGA,QAAAr/G,IAAAm/G,EACA,QAAAtiH,EAAA,EAAuBA,EAAAsiH,EAAApiH,OAAoBF,IAC3CoiH,EAAA7hH,eAAA+hH,EAAAtiH,GAAAyiH,WAAA/+G,OAAA,KAAA4+G,EAAAtiH,GAAAyiH,WAAAC,QACAL,EAAAjiH,KAAAkiH,EAAAtiH,GAAAyiH,WAAA/+G,WAIA,QAAAmB,KAAAu9G,EACAC,EAAAjiH,KAAAyE,GAIA,IAAA89G,EAAA,wBAGAA,GAAA,gBACA,IAAA3iH,EAAA,EAAqBA,EAAAqiH,EAAAniH,OAA8BF,IAAA,CAEnD2iH,GAAA,QADA,IAAAR,EAAAE,EAAAriH,IAAAmiH,EAAAE,EAAAriH,IAAAqiH,EAAAriH,IACA,QAEA2iH,GAAA,QAGA,IAAA3iH,EAAA,EAAqBA,EAAAurE,EAAArrE,OAAqBF,IAAA,CAC1C,IAAAwrE,EAAAD,EAAAvrE,GAEA2iH,GAAA,wCAAAvL,QAAA,wEAAAwL,KAAAC,UAAAr3C,EAAA/6B,MAAA,qDACA,QAAA15B,EAAA,EAAuBA,EAAAsrG,EAAAniH,OAA8B6W,IAAA,CACrD,IAAA+rG,EAAAt3C,EAAArzB,WAAAkqE,EAAAtrG,IAGA,oBAAA+rG,EACA,aAAAA,EAAArO,OAAA,iBAAAqO,EAAArO,OAAA,MACA,IAAAsO,EAAAD,EACA,WAAAA,EAAArO,OAAA,OACAsO,EAAAD,EAAA19G,MAAA,IACA09G,EAAA,YAAA1N,QAAA4N,MAAA,eAAApM,EAAA,YAAAC,EAAA,UAAAkM,EAAA,qBAAAZ,EAAAE,EAAAtrG,IAAA,YAEA,WAAA+rG,EAAArO,OAAA,aAAAqO,EAAArO,OAAA,MACAsO,EAAAD,EACA,OAAAA,EAAArO,OAAA,OACAsO,EAAA,UAAAD,GACAA,EAAA,YAAAC,EAAA,qBAAAD,EAAA,OAGAH,GAAA,OAAAG,EAAA,QAEAH,GAAA,QAGAA,GAAA,WAGMlN,IAAC,kCAAAR,YAAA,UACDQ,IAAC,qCAAAR,YAAA,eAEDQ,IAAC,wBAAAc,OAAA,+FAEPK,EAAA,IAAAC,EAAA,IAAAsF,EAAA,gBAAA32F,EAAA81E,MAAA,yBAA0I91E,EAAA7lB,KAAAmP,OAAA,kDAIpI2mG,IAAC,2BAAAc,OAAA,uEACPK,EAAA,IAAAC,EAAA,IAAAsF,EAAA,gEAEAwG,EAAA,sCAKMlN,IAAC,0BAAA19D,GAAA,iBAAA72C,GACPA,EAAAksB,iBACQqoF,IAAC37F,MAAA0gG,IAAA,UAIH/E,IAAC,kCAAA19D,GAAA,mBACP,IAAAkrE,EAA0BxN,IAAC37F,MAAAqkB,QAAA,KAAAm5E,SAAA,UAC3B4L,EAA0BzN,IAAC37F,MAAAqkB,QAAA,MAAAxL,OAC3BwwF,EAAsB1N,IAAC37F,MAAAqkB,QAAA,MAAAilF,OAGvBC,EAAuB5N,IAAC37F,MAAAqkB,QAAA,KAAAmlF,KAAA,QAChB7N,IAAC4N,GAAAvhG,SACD2zF,IAAC37F,MAAAqkB,QAAA,MAAArc,SAGT,IAAAhT,EAAqB2mG,IAAC37F,MAAAna,KAAA,UACd81G,EAAAn+F,EAACo+F,GAAAC,UAAAqB,QAAA,kBAAAuM,MAAA,SAAA/9F,GACTA,EAAA7lB,KAAAmP,WACY2mG,IAACjwF,EAAAs3F,IAAA/6F,KAAA,yBAAAk8F,KAAA,iBAKD,IAADxI,IAAC,2BAAAzV,OAAAwK,SACFiL,IAAC,gBAAAN,OACDM,IAAC,kBAAAR,YAAA,WAIXgO,IACAE,EAAAjjH,OAAA,EACAijH,EAAAphG,KAAA,aAAAy4F,IAAA,QAEA0I,EAAAnhG,KAAA,aAAAy4F,IAAA,WAMM/E,IAAC,wBAAA19D,GAAA,mBACP,IAAAtH,EAAmBglE,IAAC37F,MAAAna,KAAA,kBACpBg3G,WAAAhsF,IAAA0qB,UAAAwV,IAAqCxqD,OAAAi1B,EAAA,EAAAj1B,CAAeowC,EAAA,YAAAkmE,WAAAhsF,IAAA0qB,UAAA6G,oBAG9Cu5D,IAAC,gBAAAuI,WAILvI,IAAC,kBAAA19D,GAAA,uCAAA72C,GACCu0G,IAAC37F,MAAAsL,SAAAo+F,UAAAtnB,SAEEuZ,IAAC,gCAAAv1G,OAAA,EACFu1G,IAAC,0BAAAuI,OAEDvI,IAAC,0BAAAN,OAGPj0G,EAAAgsB,oBAGEuoF,IAAC,kBAAA19D,GAAA,mDAAA72C,GAKH,IAJA,IAAAskB,EAAeiwF,EAAAn+F,EAACo+F,GAAAC,UAAAuH,QAAAh8G,GAChBmS,EAAAnS,EAAA6B,OAAAwP,YAEAyzD,EAAA2wC,WAAAhsF,IAAA27C,YAAAh0C,WACAtyB,EAAA,EAAmBA,EAAAgmE,EAAA9lE,OAAmBF,IACtCgmE,EAAAhmE,GAAA8O,QAAA0W,EAAA7lB,KAAAmP,QACAk3D,EAAAhmE,GAAA44C,WAAAvlC,EAAA,KAIIoiG,IAAC37F,MAAAw5B,WAAA2hE,YAAA,UACDQ,IAAC37F,MAAAo7F,SAAA,UACLh0G,EAAAgsB,oBAIEuoF,IAAC,kBAAA19D,GAAA,gCAAA72C,GACH,IAAAskB,EAAeiwF,EAAAn+F,EAACo+F,GAAAC,UAAAuH,QAAAh8G,GAChBuiH,EAAsBhO,IAAC37F,MAAAw9F,SAAA,iBAAA9xF,EAAAk+F,iBAAAl+F,EAAAm+F,iBAEvB,GAAAF,EAAA,CAMA,IALA,IAAAG,GAAA,EACAC,GAAA,EAEA79C,EAAA2wC,WAAAhsF,IAAA27C,YAAAh0C,WAEAtyB,EAAA,EAAqBA,EAAAgmE,EAAA9lE,OAAmBF,IACxCgmE,EAAAhmE,GAAA8O,QAAA0W,EAAA7lB,KAAAmP,SACA80G,EAAA59C,EAAAhmE,GAAAw7B,aAEAwqC,EAAAhmE,GAAA8O,QAAA20G,EAAA9jH,KAAAmP,SACA+0G,EAAA79C,EAAAhmE,GAAAw7B,aAKA,IAAAx7B,EAAA,EAAqBA,EAAAgmE,EAAA9lE,OAAmBF,IACxCgmE,EAAAhmE,GAAA8O,QAAA0W,EAAA7lB,KAAAmP,QACAk3D,EAAAhmE,GAAA84C,UAAA+qE,GAEA79C,EAAAhmE,GAAA8O,QAAA20G,EAAA9jH,KAAAmP,QACAk3D,EAAAhmE,GAAA84C,UAAA8qE,GAIAnN,IAEAv1G,EAAAgsB,oBAwBEuoF,IAAC,wBAAA19D,GAAA,iBAAA72C,GACCu0G,IAAC,kBAAAR,YAAA,UACDQ,IAAC,SAAAN,SAGHM,IAAC,sBAAA19D,GAAA,wBAAA72C,GACCu0G,IAAC,SAAAuI,SAGHvI,IAAC,kBAAA19D,GAAA,iBAAA72C,GAECu0G,IAAC37F,MAAAo7F,SAAA,YACLvzG,SAAAkR,KAAAL,MAAAsxG,OAAA,WAEIhjH,EAAAI,EAAA,GAAAm5G,KAAAv5G,EAAAsD,EAAAM,KAAA,aAAgD21G,KAAA,EAAQrrE,QAAA+0E,MAC5D,IASA50E,EAAAxtC,SAAAolC,eAAA,oBAAA5iC,MACAqG,EAAA7I,SAAAolC,eAAA,wBAAA5iC,MACA6/G,EAXA,CACAC,GAAA,WACA3rG,GAAA,UACAM,GAAA,UACAsrG,GAAA,UACAC,GAAA,UACAC,GAAA,WAKAj1E,GACAx9B,EAAAhI,KAAAo6B,MAAAigF,EAAA,GAAAx5G,EAAAgrG,IACAljG,EAAA3I,KAAAo6B,MAAAigF,EAAA,GAAAx5G,EAAAgrG,IACA9qG,EAAAisG,WAAAhsF,IAAA+e,UACA3hC,EAAA4uG,WAAAhsF,IAAA0qB,UAAAG,gBAAA9qC,GAIA25G,EAAA,IAAAN,EAAA,iBAAA50E,GAEAk1E,EAAAC,YAAA,IACAD,EAAApzG,KAAewkG,IAAC,oBAAAzrG,MAAA,OAEhB,IAAAT,EAAA,GACAg7G,EAAA,EAEM9O,IAAC,eAAA+O,KAAA,SAAAniG,EAAAoiG,GACPJ,EAAAK,SAAAD,EAAA,QAAAl7G,EAAAisG,GAAAhrG,GACAjB,GAAAk7G,EAAAnyG,OAEAmyG,EAAA9yG,MAAA4yG,IACAA,EAAAE,EAAA9yG,SAKAglG,WAAAhsF,IAAAqtB,KAAA,0BAAAz1C,GACA,IACA5C,EADA4C,EAAA6O,QAAA2T,OACA4/F,UAAA,aAEAN,EAAAK,SAAA/kH,EAAA,OAAA4kH,EAAA/O,GAAAhrG,EAAA,GAAAw5G,EAAA,GAAAO,EAAA/O,GAAAhrG,EAAAw5G,EAAA,IACAK,EAAA/2E,KAAA,WAEAqpE,WAAAhsF,IAAAuvB,QAAAxvC,GACAisG,WAAAhsF,IAAA0qB,UAAAwV,IAAA9iD,EAAA,CAA8C2C,SAC9C/I,SAAAkR,KAAAL,MAAAsxG,OAAA,SAIA,IAAAc,EAAA,CAAAjzG,EAAA4yG,EAAAjyG,GACAqkG,WAAAhsF,IAAAuvB,QAAA0qE,GACAjO,WAAAhsF,IAAA0qB,UAAAwV,IAAA9iD,EAAA,CAA4C2C,KAAAk6G,MAExCnP,IAAC37F,MAAAm7F,YAAA,cAMLyD,IAGEjD,IAAC,uBAAA19D,GAAA,mBAGH,GAAQ,IAAD09D,IAAC,oBAAAzrG,MAAR,CAKA,IAAA66G,EAAA,GAGAA,EAAAt6G,OAAAosG,WAAAhsF,IAAA0qB,UAAAxuC,YACAg+G,EAAAl7F,KAAAgtF,WAAAhsF,IAAA0qB,UAAAqS,UAEAm9D,EAAA7+C,OAAA,GAEA2wC,WAAAhsF,IAAA27C,YAAA3mD,QAAA,SAAA24B,GAEA,IAAAA,EAAArwB,gBAAA1nB,eAAA,cAEA,IAAAukH,EAAAxsE,EAAArwB,gBACA88F,EAAAzsE,EAAArd,YAAA+4E,YAEA6Q,EAAA7+C,OAAA5lE,KAAA,CACAk7F,MAAAwpB,EAAAxpB,MACAsb,aAAAkO,EAAAlO,aACAC,UAAAiO,EAAAjO,UACAxjG,QAAAyxG,EAAAzxG,QACAo9B,KAAAq0E,EAAAr0E,KACA8oE,MAAAuL,EAAAvL,MACAz9E,QAAAgpF,EAAAhpF,QACAL,OAAAqpF,EAAArpF,OACAM,cAAA+oF,EAAA/oF,cACAC,cAAA8oF,EAAA9oF,cACAt4B,KAAAqhH,EAAAl/C,OACArzD,MAAAuyG,EAAAjO,YAKIrB,EAAAn+F,EAACuhG,KAAA,CACLjzE,IAAAwvE,QAAA4P,eACAniH,KAAA,OACAlD,KAAA,CACA+D,KAAc+xG,IAAC,oBAAAzrG,MACfi7G,UAAmBxP,IAAC,qBAAAyP,GAAA,YACpB9L,WAAAwJ,KAAAC,UAAAgC,IAEA9L,SAAA,OACAC,QAAA,SAAAr5G,GACAs5G,EAAAt5G,GACAk2G,EAAAuB,QAAA,+CA/CAvB,EAAAuB,QAAA,gDA6IE3B,IAAC,kBAAA19D,GAAA,iBAAA72C,GACK,IAADu0G,IAAC,2BAAAzV,OAAAwK,SACFiL,IAAC,gBAAAuI,OACDvI,IAAC37F,MAAAo7F,SAAA,aAKLO,IAAC,2BAAAiH,QAAA,CACHyI,QAAA","file":"mapbuilder.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"2\":\"vendors~jspdf\"}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 114);\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","module.exports = jQuery;","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n        renderEvent.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {import(\"../render/Box.js\").default}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {import(\"../pixel.js\").Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {import(\"../events/condition.js\").Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {import(\"../geom/Polygon.js\").default} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n    /**\n     * The layer type.\n     * @type {import(\"../LayerType.js\").default}\n     * @protected;\n     */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * Get the layer type (used when creating a layer renderer).\n   * @return {import(\"../LayerType.js\").default} The layer type.\n   */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(this.getOpacity(), 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Object<string, import(\"./layer/Layer.js\").State>} layerStates\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {Object<string, Object<string, import(\"./TileRange.js\").default>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=))} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {import(\"./VectorContext.js\").default|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Context.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").default|import(\"./Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/render/ReplayGroup\n */\nimport {abstract} from '../util.js';\n\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {boolean} group Group with previous replay\n * @return {Array<*>} The resulting instruction group\n */\nReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n  return abstract();\n};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from './ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = /*@__PURE__*/(function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p1;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p2;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p3;\n    /** @type {import(\"../../coordinate.js\").Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastCoord[0];\n          this.coordinates[myEnd++] = lastCoord[1];\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplay.prototype.finish = function finish () {};\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            /** @type {import(\"./TextReplay.js\").default} */\n            var textReplay = /** @type {?} */ (this);\n            var textAlign = textReplay.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = textReplay.getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasReplay, import(\"../canvas.js\").FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasImageReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\nvar CanvasLineStringReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasReplay from './Replay.js';\n\n\nvar CanvasPolygonReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasReplay from './Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = /*@__PURE__*/(function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {import(\"../canvas.js\").StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {import(\"../canvas.js\").TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {import(\"../canvas.js\").FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from './Replay.js';\nimport CanvasImageReplay from './ImageReplay.js';\nimport CanvasLineStringReplay from './LineStringReplay.js';\nimport CanvasPolygonReplay from './PolygonReplay.js';\nimport CanvasTextReplay from './TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<ReplayType, typeof CanvasReplay>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = /*@__PURE__*/(function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<ReplayType, CanvasReplay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    for (var zIndex in this.replaysByZIndex_) {\n      var candidates = this.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    for (var zKey in this.replaysByZIndex_) {\n      var replays = this.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((import(\"../../Feature.js\").default|import(\"../Feature.js\").default)): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {import(\"../../Feature.js\").default|import(\"../Feature.js\").default} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<ReplayType, CanvasReplay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {import(\"../LayerType.js\").default}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar ImageLayer = /*@__PURE__*/(function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {import(\"../LayerType.js\").default}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {import(\"../source/Image.js\").default} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /*@__PURE__*/(function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /*@__PURE__*/(function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var scale = this.hidpi_ ? 2 : 1;\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth / scale :\n      [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var viewState = frameState.viewState;\n        var tileGrid = this.getTileGrid();\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n        var zoom = tileCoord[0];\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      }.bind(this));\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /*@__PURE__*/(function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /*@__PURE__*/(function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': -tileCoord[2] - 1\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Element, Array<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Element, *, Array<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\n  if (!source) {\n    return null;\n  } else if (typeof source === 'string') {\n    var doc = parse(source);\n    return this.readFromDocument(doc);\n  } else if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else {\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n};\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\n\n/**\n * @abstract\n * @param {Element} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function readFromNode (node) {};\n\nexport default XML;\n\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from './xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = /*@__PURE__*/(function (XML) {\n  function WMSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  if ( XML ) WMSCapabilities.__proto__ = XML;\n  WMSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMSCapabilities.prototype.constructor = WMSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    this.version = node.getAttribute('version').trim();\n    var wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  };\n\n  return WMSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  var extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  var geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  var authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  var metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n\n//# sourceMappingURL=WMSCapabilities.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = /*@__PURE__*/(function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /*@__PURE__*/(function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {abstract} from '../util.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /*@__PURE__*/(function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @api\n */\nvar ImageSource = /*@__PURE__*/(function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = /*@__PURE__*/(function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","// Hide/show bottom dock on hover out/in (with small delay)\nexport default $(function() {\n    var lizBottomDockTimer;\n    var lizBottomDockTimeHoverOut = 100;\n    var lizBottomDockTimeHoverIn = 50;\n    // if( 'bottomDockTimeHoverOut' in lizMap.config.options )\n    //   lizBottomDockTimeHoverOut = lizMap.config.options.bottomDockTimeHoverOut;\n    // if( 'bottomDockTimeHoverIn' in lizMap.config.options )\n    //   lizBottomDockTimeHoverIn = lizMap.config.options.bottomDockTimeHoverIn;\n\n    $('#bottom-dock').hover(\n      // hover in\n      function() {\n        if(lizBottomDockTimer) {\n            clearTimeout(lizBottomDockTimer);\n            lizBottomDockTimer = null;\n        }\n        $(this).removeClass('half-transparent');\n        lizBottomDockTimer = setTimeout(function() {\n          showBottomDockContent();\n          return false;\n        }, lizBottomDockTimeHoverIn);\n      },\n      // mouse out\n      function(){\n        if(lizBottomDockTimer) {\n            clearTimeout(lizBottomDockTimer);\n            lizBottomDockTimer = null;\n        }\n        $(this).addClass('half-transparent');\n        lizBottomDockTimer = setTimeout(function() {\n          // if ( !bottomDockGlued &&!lizMap.checkMobile()){\n            hideBottomDockContent();\n          // }\n          return false;\n        }, lizBottomDockTimeHoverOut);\n      }\n    );\n\n    function showBottomDockContent(){\n      $('#bottom-dock').addClass('visible');\n      return false;\n    }\n    function hideBottomDockContent(){\n      $('#bottom-dock').removeClass('visible').focus();\n      return false;\n    }\n\n    $('#hideBottomDock').on(\"click\", function(){\n      $('#bottom-dock').hide();\n      $('.bottom-dock').removeClass('active');\n    });\n});\n","// it is important to set global var before any imports\n__webpack_public_path__ = lizUrls.basepath+'mapBuilder/js/';\n\nimport $ from 'jquery';\n\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport {defaults as defaultControls, Control, ScaleLine} from 'ol/control.js';\nimport {Image as ImageLayer, Tile as TileLayer} from 'ol/layer.js';\n\nimport OSM from 'ol/source/OSM.js';\nimport Stamen from 'ol/source/Stamen.js';\nimport XYZ from 'ol/source/XYZ.js';\nimport BingMaps from 'ol/source/BingMaps.js';\nimport WMTS from 'ol/source/WMTS.js';\nimport WMTSTileGrid from 'ol/tilegrid/WMTS.js';\nimport {getWidth} from 'ol/extent.js';\n\nimport WMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport ImageWMS from 'ol/source/ImageWMS.js';\nimport {transformExtent, Projection, fromLonLat, get as getProjection} from 'ol/proj.js';\n\nimport {defaults as defaultInteractions, DragZoom} from 'ol/interaction.js';\nimport {always as alwaysCondition, shiftKeyOnly as shiftKeyOnlyCondition} from 'ol/events/condition.js';\n\nimport * as bottomDock from './modules/bottom-dock.js';\n\n// Extent on metropolitan France if not defined in mapBuilder.ini.php\nvar originalCenter = [217806.92414447578, 5853470.637803803];\nvar originalZoom = 6;\n\n// 1 inch = 2,54 cm = 25,4 mm\nconst INCHTOMM = 25.4;\n\n// Disable fancytree logs in production mode\nif (PRODUCTION) {\n  $.ui.fancytree.debugLevel = 0;\n}\n\n$(function() {\n\n  function performCleanName(aName) {\n    var accentMap = {\n        \"à\": \"a\",    \"á\": \"a\",    \"â\": \"a\",    \"ã\": \"a\",    \"ä\": \"a\",    \"ç\": \"c\",    \"è\": \"e\",    \"é\": \"e\",    \"ê\": \"e\",    \"ë\": \"e\",    \"ì\": \"i\",    \"í\": \"i\",    \"î\": \"i\",    \"ï\": \"i\",    \"ñ\": \"n\",    \"ò\": \"o\",    \"ó\": \"o\",    \"ô\": \"o\",    \"õ\": \"o\",    \"ö\": \"o\",    \"ù\": \"u\",    \"ú\": \"u\",    \"û\": \"u\",    \"ü\": \"u\",    \"ý\": \"y\",    \"ÿ\": \"y\",\n        \"À\": \"A\",    \"Á\": \"A\",    \"Â\": \"A\",    \"Ã\": \"A\",    \"Ä\": \"A\",    \"Ç\": \"C\",    \"È\": \"E\",    \"É\": \"E\",    \"Ê\": \"E\",    \"Ë\": \"E\",    \"Ì\": \"I\",    \"Í\": \"I\",    \"Î\": \"I\",    \"Ï\": \"I\",    \"Ñ\": \"N\",    \"Ò\": \"O\",    \"Ó\": \"O\",    \"Ô\": \"O\",    \"Õ\": \"O\",    \"Ö\": \"O\",    \"Ù\": \"U\",    \"Ú\": \"U\",    \"Û\": \"U\",    \"Ü\": \"U\",    \"Ý\": \"Y\",\n        \"-\":\" \", \"'\": \" \", \"(\": \" \", \")\": \" \"};\n    var normalize = function( term ) {\n        var ret = \"\";\n        for ( var i = 0; i < term.length; i++ ) {\n            ret += accentMap[ term.charAt(i) ] || term.charAt(i);\n        }\n        return ret;\n    };\n    var theCleanName = normalize(aName);\n    var reg = new RegExp('\\\\W', 'g');\n    return theCleanName.replace(reg, '_');\n  }\n\n  function mAddMessage( aMessage, aType, aClose, aTimer ) {\n    var mType = 'info';\n    var mTypeList = ['info', 'danger', 'success'];\n    var mClose = false;\n    var mDismissible = '';\n\n    if ( $.inArray(aType, mTypeList) != -1 )\n      mType = aType;\n\n    if ( aClose ){\n      mClose = true;\n      mDismissible = 'alert-dismissible';\n    }\n\n    var html = '<div class=\"alert alert-'+mType+' '+mDismissible+' fade show\" role=\"alert\">';\n\n    html += aMessage;\n\n    if ( mClose ){\n      html += '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\\\n                <span aria-hidden=\"true\">&times;</span>\\\n              </button>';\n    }\n    \n    html += '</div>';\n\n    var elt = $(html);\n    $('#message').append(elt);\n\n    if(aTimer !== undefined){\n      setTimeout(function() {\n        $(\".alert\").alert('close');\n      }, aTimer);\n    }\n\n    return elt;\n  }\n\n  function buildLayerTree(layer, cfg) {\n    var myArray = [];\n    if (Array.isArray(layer)) {\n        layer.forEach(function(sublayer) {\n          // Layer name is used as a key in lizmap config\n          var sublayerName = sublayer.Name;\n\n          // If key is not present, it might because a shortname has been defined in QGIS\n          if(!cfg.layers.hasOwnProperty(sublayer.Name)){\n            for (var key in cfg.layers) {\n              if(cfg.layers[key].hasOwnProperty('shortname') && (cfg.layers[key].shortname == sublayer.Name)){\n                 sublayerName = cfg.layers[key].name;\n               }\n            }\n          }\n          // Filter layers in Hidden and Overview directory\n          if(sublayer.hasOwnProperty('Title') && (sublayer.Title.toLowerCase() == 'hidden' || sublayer.Title.toLowerCase() == 'overview')){\n            return;\n          }\n          // Filter layers not visible in legend or without geometry\n          if(sublayer.hasOwnProperty('Name') && cfg.layers.hasOwnProperty(sublayerName)\n            && (cfg.layers[sublayerName].displayInLegend == 'False' || cfg.layers[sublayerName].geometryType == 'none')){\n              return;\n          }\n          var layers = buildLayerTree(sublayer, cfg);\n          myArray = myArray.concat(layers);\n        });\n        return myArray;\n    }\n\n    // Layer name is used as a key in lizmap config\n    var layerName = layer.Name;\n\n    // If key is not present, it might because a shortname has been defined in QGIS\n    if(!cfg.layers.hasOwnProperty(layer.Name)){\n      for (var key in cfg.layers) {\n        if(cfg.layers[key].hasOwnProperty('shortname') && (cfg.layers[key].shortname == layer.Name)){\n           layerName = cfg.layers[key].name;\n         }\n      }\n    }\n\n    // Create node\n    var myObj = { title: cfg.layers[layerName].title, name : layerName, popup : cfg.layers[layerName].popup};\n\n    if(layer.hasOwnProperty('Style')){\n      myObj.style = layer.Style;\n    }\n    if(layer.hasOwnProperty('EX_GeographicBoundingBox')){\n      myObj.bbox = layer.EX_GeographicBoundingBox;\n    }\n    if(layer.hasOwnProperty('MinScaleDenominator') && layer.MinScaleDenominator !== undefined){\n      myObj.minScale = layer.MinScaleDenominator;\n    }\n    if(layer.hasOwnProperty('MaxScaleDenominator') && layer.MaxScaleDenominator !== undefined){\n      myObj.maxScale = layer.MaxScaleDenominator;\n    }\n    if(cfg.attributeLayers.hasOwnProperty(layerName) \n      && cfg.attributeLayers[layerName].hideLayer != \"True\"\n      && cfg.attributeLayers[layerName].pivot != \"True\"){\n      myObj.hasAttributeTable = true;\n    }\n    if(cfg.layers.hasOwnProperty(layerName) \n      && cfg.layers[layerName].abstract != \"\"){\n      myObj.tooltip = cfg.layers[layerName].abstract;\n    }\n    myArray.push(myObj);\n    // Layer has children and is not a group as layer => folder\n    if (layer.hasOwnProperty('Layer') && cfg.layers[layerName].groupAsLayer == 'False') {\n        myObj.folder = true;\n        myObj.children = buildLayerTree(layer.Layer, cfg);\n    }\n    return myArray;\n  }\n\n  // refresh #layerSelected tree to reflect OL layer's state\n  function refreshLayerSelected() {\n      var layerTree = [];\n      mapBuilder.map.getLayers().forEach(function(layer) {\n        // Don't add base layer\n        if( ! layer.getProperties().hasOwnProperty('baseLayer')){\n          var layerObject = {\n            repositoryId: layer.getProperties().repositoryId,\n            projectId: layer.getProperties().projectId,\n            title: layer.getProperties().title,\n            styles: layer.getSource().getParams().STYLES,\n            hasAttributeTable: layer.getProperties().hasAttributeTable,\n            name: layer.getSource().getParams().LAYERS,\n            ol_uid: layer.ol_uid\n          };\n\n          if(layer.getZIndex() !== undefined){\n            layerTree[layer.getZIndex()] = layerObject;\n          }\n        }\n      });\n\n      // Reverse to show top layers at top of the tree\n      layerTree.reverse();\n      // Remove empty values (TODO: à améliorer)\n      layerTree = layerTree.filter(n => n);\n\n      if ($.ui.fancytree.getTree(\"#layerSelected\") !== null) {\n        $.ui.fancytree.getTree(\"#layerSelected\").reload(layerTree);\n      }\n\n      // Refresh legends\n      loadLegend();\n  }\n\n  var dragZoomControl = (function (Control) {\n    function dragZoomControl(opt_options) {\n      var options = opt_options || {};\n\n      var button = document.createElement('button');\n      button.className = 'fas fa-square';\n      button.title = lizDict['zoomrectangle'];\n\n      var element = document.createElement('div');\n      element.className = 'ol-drag-zoom ol-unselectable ol-control';\n      element.appendChild(button);\n\n      Control.call(this, {\n        element: element,\n        target: options.target\n      });\n\n      button.addEventListener('click', this.handleDragZoom.bind(this), false);\n    }\n\n    if ( Control ) dragZoomControl.__proto__ = Control;\n    dragZoomControl.prototype = Object.create( Control && Control.prototype );\n    dragZoomControl.prototype.constructor = dragZoomControl;\n\n    dragZoomControl.prototype.handleDragZoom = function handleDragZoom () {\n      if($(this.element).hasClass('active')){\n        $(this.element).removeClass('active');\n\n        this.getMap().getInteractions().forEach(function(interaction) {\n          if(interaction instanceof DragZoom){\n            interaction.condition_ = shiftKeyOnlyCondition;\n          }\n        });\n      }else{\n        $(this.element).addClass('active');\n\n        this.getMap().getInteractions().forEach(function(interaction) {\n          if(interaction instanceof DragZoom){\n            interaction.condition_ = alwaysCondition;\n          }\n        });\n      }\n    };\n\n    return dragZoomControl;\n  }(Control));\n\n  var zoomToOriginControl = (function (Control) {\n    function zoomToOriginControl(opt_options) {\n      var options = opt_options || {};\n\n      var button = document.createElement('button');\n      button.className = 'fas fa-expand-arrows-alt';\n      button.title = lizDict['zoominitial'];\n\n      var element = document.createElement('div');\n      element.className = 'ol-zoom-origin ol-unselectable ol-control';\n      element.appendChild(button);\n\n      Control.call(this, {\n        element: element,\n        target: options.target\n      });\n\n      button.addEventListener('click', this.handleZoomToOrigin.bind(this), false);\n    }\n\n    if ( Control ) zoomToOriginControl.__proto__ = Control;\n    zoomToOriginControl.prototype = Object.create( Control && Control.prototype );\n    zoomToOriginControl.prototype.constructor = zoomToOriginControl;\n\n    zoomToOriginControl.prototype.handleZoomToOrigin = function handleZoomToOrigin () {\n      this.getMap().getView().setCenter(originalCenter);\n      this.getMap().getView().setZoom(originalZoom);\n    };\n\n    return zoomToOriginControl;\n  }(Control));\n\n  mapBuilder.map = new Map({\n    target: 'map',\n    controls: defaultControls({\n      zoomOptions: {\n        zoomInTipLabel: lizDict['zoomin'],\n        zoomOutTipLabel: lizDict['zoomout']\n      }\n    }).extend([\n      new ScaleLine(),\n      new dragZoomControl(),\n      new zoomToOriginControl()\n    ]),\n    view: new View({\n        center: originalCenter,\n        zoom: originalZoom\n    })\n  });\n\n  // Refresh legend when resolution changes\n  mapBuilder.map.getView().on('change:resolution', loadLegend);\n\n  // baseLayer is set in mapBuilder.ini.php\n  if(mapBuilder.hasOwnProperty('baseLayer')){\n    mapBuilder.baseLayer = mapBuilder.baseLayer.split(',');\n\n    for (var i = 0; i < mapBuilder.baseLayer.length; i++) {\n      var baseLayer = null;\n      if(mapBuilder.baseLayer[i] === 'osmMapnik'){\n        baseLayer = new TileLayer({\n          source: new OSM()\n        });\n      }\n      else if(mapBuilder.baseLayer[i] === 'osmStamenToner'){\n        baseLayer = new TileLayer({\n          source: new Stamen({\n            layer: 'toner'\n          })\n        });\n      }\n      else if(mapBuilder.baseLayer[i] === 'osmCyclemap'\n        && mapBuilder.hasOwnProperty('baseLayerKeyOSMCycleMap')){\n        baseLayer = new TileLayer({\n          source: new XYZ({\n            url: 'https://{a-c}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png?apikey=' + mapBuilder.baseLayerKeyOSMCycleMap\n          })\n        });\n      }\n      else if((mapBuilder.baseLayer[i] === 'bingStreets'\n        || mapBuilder.baseLayer[i] === 'bingSatellite'\n        || mapBuilder.baseLayer[i] === 'bingHybrid')\n        && mapBuilder.hasOwnProperty('baseLayerKeyBing')){\n        var bingMapsCorrespondance = {\n          'bingStreets' : 'Road',\n          'bingSatellite' : 'Aerial',\n          'bingHybrid' : 'AerialWithLabels'\n        };\n        baseLayer = new TileLayer({\n          visible: false,\n          preload: Infinity,\n          source: new BingMaps({\n            key: mapBuilder.baseLayerKeyBing,\n            imagerySet: bingMapsCorrespondance[mapBuilder.baseLayer[i]]\n          })\n        });\n      }\n      else if((mapBuilder.baseLayer[i] === 'ignTerrain'\n        || mapBuilder.baseLayer[i] === 'ignStreets'\n        || mapBuilder.baseLayer[i] === 'ignSatellite'\n        || mapBuilder.baseLayer[i] === 'ignCadastral')\n        && mapBuilder.hasOwnProperty('baseLayerKeyIGN')){\n        var ignCorrespondance = {\n          'ignTerrain' : 'GEOGRAPHICALGRIDSYSTEMS.MAPS',\n          'ignStreets' : 'GEOGRAPHICALGRIDSYSTEMS.PLANIGN',\n          'ignSatellite' : 'ORTHOIMAGERY.ORTHOPHOTOS',\n          'ignCadastral' : 'CADASTRALPARCELS.PARCELS'\n        };\n        var resolutions = [];\n        var matrixIds = [];\n        var proj3857 = getProjection('EPSG:3857');\n        var maxResolution = getWidth(proj3857.getExtent()) / 256;\n\n        for (var i = 0; i < 18; i++) {\n          matrixIds[i] = i.toString();\n          resolutions[i] = maxResolution / Math.pow(2, i);\n        }\n\n        var tileGrid = new WMTSTileGrid({\n          origin: [-20037508, 20037508],\n          resolutions: resolutions,\n          matrixIds: matrixIds\n        });\n\n        var ign_source = new WMTS({\n          url: \"https://gpp3-wxs.ign.fr/\"+mapBuilder.baseLayerKeyIGN+\"/wmts\",\n          layer: ignCorrespondance[mapBuilder.baseLayer[i]],\n          matrixSet: 'PM',\n          format: 'image/jpeg',\n          projection: 'EPSG:3857',\n          tileGrid: tileGrid,\n          style: 'normal',\n          attributions: '<a href=\"http://www.geoportail.fr/\" target=\"_blank\">' +\n                '<img src=\"https://api.ign.fr/geoportail/api/js/latest/' +\n                'theme/geoportal/img/logo_gp.gif\"></a>'\n        });\n\n        baseLayer = new TileLayer({\n          source: ign_source\n        });\n      }\n      else if(mapBuilder.baseLayer[i] === 'emptyBaselayer'){\n        baseLayer = new TileLayer({\n        });\n      }\n\n      if(baseLayer){\n        var visibility = $(\"#baseLayerSelect\").find(\":selected\").val() == mapBuilder.baseLayer[i] ? true : false;\n\n        baseLayer.setProperties({\n          title: mapBuilder.baseLayer[i],\n          visible: visibility,\n          baseLayer: true // Add baseLayer property to treat those layers differently\n        });\n\n        mapBuilder.map.addLayer(baseLayer);\n      }\n    }\n  }\n\n  $(\"#baseLayerSelect\").change(function() {\n    var baseLayerSelected = $(this).find(\":selected\").val();\n    mapBuilder.map.getLayers().forEach(function(layer) {\n      if(layer.getProperties().baseLayer){\n        layer.setVisible(layer.getProperties().title == baseLayerSelected);\n      }\n    });\n  });\n\n  // Extent is set in mapBuilder.ini.php => fit view on it and override originalCenter and originalZoom\n  if(mapBuilder.hasOwnProperty('extent')){\n    mapBuilder.map.getView().fit(transformExtent(mapBuilder.extent, 'EPSG:4326', mapBuilder.map.getView().projection_));\n\n    originalCenter = mapBuilder.map.getView().getCenter();\n    originalZoom = mapBuilder.map.getView().getZoom();\n  }\n\n  function onMoveEnd(evt) {\n    if($(\".ol-drag-zoom\").hasClass(\"active\")){\n      $(\".ol-drag-zoom.active\").removeClass(\"active\");\n\n      evt.map.getInteractions().forEach(function(interaction) {\n        if(interaction instanceof DragZoom){\n          interaction.condition_ = shiftKeyOnlyCondition;\n        }\n      });\n    }\n  }\n\n  mapBuilder.map.on('moveend', onMoveEnd);\n\n  // Handle getFeatureInfo when map is clicked\n  mapBuilder.map.on('singleclick', function(evt) {\n    var viewResolution = mapBuilder.map.getView().getResolution();\n    var projection = mapBuilder.map.getView().getProjection();\n    var getFeatureInfos = [];\n\n    mapBuilder.map.getLayers().forEach(function(layer) {\n      if( !layer.getProperties().hasOwnProperty('baseLayer') && layer.values_.popup == \"True\"){\n        var url = layer.getSource().getGetFeatureInfoUrl(\n          evt.coordinate, viewResolution, projection,\n          {\n            'INFO_FORMAT': 'text/html',\n            'FI_POINT_TOLERANCE': 25,\n            'FI_LINE_TOLERANCE': 10,\n            'FI_POLYGON_TOLERANCE': 5\n          }\n        );\n\n        // Display getFeatureInfos by zIndex order\n        if (url) {\n          getFeatureInfos[layer.getZIndex()] = url;\n        }\n      }\n    });\n\n    // Fetch getFeatureInfos\n    var promises = [];\n    for (var i = getFeatureInfos.length - 1; i >= 0; i--) {\n      if(getFeatureInfos[i] !== undefined){\n        promises.push(new Promise(resolve => \n          $.get(getFeatureInfos[i], function(gfi) {\n            resolve(gfi);\n          })\n        ));\n      }\n    }\n\n    Promise.all(promises).then(results => {\n      var popupHTML = '';\n      for (var i = 0; i < results.length; i++) {\n        popupHTML += results[i];\n      }\n\n      document.getElementById('popup-content').innerHTML = popupHTML;\n      // Display if not empty\n      if(popupHTML != ''){\n        // Show popup tab\n        $('#popup-display-tab').removeClass('d-none');\n        $('#popup-display-tab').tab('show');\n        $('#popup-display-tab').focus();\n      }else{\n        if($('#popup-display').hasClass('active')){\n          $('#popup-display-tab').addClass('d-none');\n          $(\"#dock\").hide();\n        }\n      }\n    });\n  });\n\n  $('#layerStore').fancytree({\n    selectMode: 3,\n    source: mapBuilder.layerStoreTree,\n    extensions: [\"table\", \"glyph\"],\n    table: {\n      indentation: 20,      // indent 20px per node level\n      nodeColumnIdx: 0     // render the node title into the first column\n    },\n    glyph: {\n        // The preset defines defaults for all supported icon types.\n        // It also defines a common class name that is prepended (in this case 'fa ')\n        preset: \"awesome5\",\n        map: {\n          doc: \"fas fa-globe-africa\",\n          docOpen: \"fas fa-globe-africa\",\n          folder: \"fas fa-folder\",\n          folderOpen: \"fas fa-folder-open\"\n        }\n      },\n    lazyLoad: function(event, data) {\n      //https://github.com/mar10/fancytree/wiki/TutorialLoadData\n      var repositoryId = data.node.data.repository;\n      var projectId = data.node.data.project;\n      var url = lizUrls.wms+\"?repository=\" + repositoryId + \"&project=\" + projectId + \"&SERVICE=WMS&REQUEST=GetCapabilities&VERSION=1.3.0\";\n      var parser = new WMSCapabilities();\n\n      const promises = [\n        new Promise(resolve => \n          $.get(url, function(capabilities) {\n              var result = parser.read(capabilities);\n              var node = result.Capability;\n\n              // First layer is in fact project\n              if (node.hasOwnProperty('Layer')) {\n                  resolve(node.Layer.Layer);\n              }\n          })\n        ),\n        new Promise(resolve => \n          $.getJSON(lizUrls.config,{\"repository\":repositoryId,\"project\":projectId},function(cfgData) {\n            resolve(cfgData);\n          })\n        )\n      ];\n\n      data.result = Promise.all(promises).then(results => {\n        if(! mapBuilder.hasOwnProperty('lizMap')){\n          mapBuilder.lizMap = {};\n        }\n        // Cache project config for later use\n        mapBuilder.lizMap[repositoryId + '|' + projectId] = {};\n        mapBuilder.lizMap[repositoryId + '|' + projectId].config = results[1];\n\n        return buildLayerTree(results[0], results[1]);\n      });\n    },\n    renderColumns: function(event, data) {\n      var node = data.node,\n      $tdList = $(node.tr).find(\">td\");\n\n      // Style list\n      if(node.data.hasOwnProperty('style')){\n        var styleOption = \"\";\n        node.data.style.forEach(function(style) {\n          styleOption += \"<option>\"+style.Name+\"</option>\";\n        });\n        $tdList.eq(1).html(\"<select class='layerStyles custom-select custom-select-sm'>\"+styleOption+\"</select>\");\n      }\n      // Add button for layers (level 1 => repositories, 2 => projects)\n      if(node.getLevel() > 2 && node.children == null){\n        $tdList.eq(2).html(\"<button type='button' class='addLayerButton btn btn-sm'><i class='fas fa-plus'></i></button>\");\n      }\n    }\n  });\n\n  /* Handle custom addLayerButton clicks */\n  $('#layerStore').on(\"click\", \".addLayerButton\", function(e){\n    var node = $.ui.fancytree.getNode(e);\n\n    var parentList = node.getParentList();\n    // We get repositoryId and projectId from parents node in the tree\n    var repositoryId = parentList[1].data.repository;\n    var projectId = parentList[1].data.project;\n\n    var newLayer = new ImageLayer({\n      title: node.title,\n      repositoryId: repositoryId,\n      projectId: projectId,\n      bbox: node.data.bbox,\n      popup: node.data.popup,\n      hasAttributeTable: node.data.hasAttributeTable,\n      source: new ImageWMS({\n        url: lizUrls.wms+'?repository=' + repositoryId + '&project=' + projectId,\n        params: {\n          'LAYERS': node.data.name,\n          'STYLES': $(node.tr).find(\">td .layerStyles :selected\").text()\n        },\n        serverType: 'qgis'\n      })\n    });\n\n    // Set min/max resolution if min/max scale are defined in getCapabilities\n    if(node.data.hasOwnProperty('minScale')){\n      newLayer.setMinResolution(node.data.minScale * INCHTOMM / (1000 * 90 * window.devicePixelRatio));\n    }\n    if(node.data.hasOwnProperty('maxScale')){\n      newLayer.setMaxResolution(node.data.maxScale * INCHTOMM / (1000 * 90 * window.devicePixelRatio));\n    }\n\n    var maxZindex = -1;\n    // Get maximum Z-index to put new layer at top of the stack\n    mapBuilder.map.getLayers().forEach(function(layer) {\n      var zIndex = layer.getZIndex();\n      if(zIndex !== undefined && zIndex > maxZindex){\n        maxZindex = zIndex;\n      }\n    });\n\n    if(maxZindex > -1){\n      newLayer.setZIndex(maxZindex + 1);\n    }else{\n      newLayer.setZIndex(0);\n    }\n\n    // Show layer is loading\n    newLayer.getSource().on('imageloadstart', function(event) {\n      $('#layers-loading').prepend('\\\n        <span class=\"spinner-grow spinner-grow-sm\" title=\"'+lizDict['selector.layers.loading']+'...\" role=\"status\">\\\n          <span class=\"sr-only\">'+lizDict['selector.layers.loading']+'...</span>\\\n        </span>');\n    });\n\n    // Show layer had loaded\n    newLayer.getSource().on('imageloadend', function(event) {\n      $('#layers-loading > .spinner-grow:first').remove();\n    });\n\n    mapBuilder.map.addLayer(newLayer);\n    refreshLayerSelected();\n    e.stopPropagation();  // prevent fancytree activate for this row\n  });\n\n\n  $('#layerSelected').fancytree({\n      extensions: [\"dnd5\", \"table\"],\n      table: {\n        indentation: 20,      // indent 20px per node level\n        nodeColumnIdx: 0     // render the node title into the first column\n      },\n      dnd5: {\n          dragStart: function(node, data) {\n            return true;\n          },\n          dragDrop: function(node, data) {\n            if (data.otherNode) {\n              data.otherNode.moveTo(node, data.hitMode);\n            }\n            // Parcourt de la liste des nodes pour mettre à jour le Z-index des couches\n            var allNodes = node.parent.children;\n\n            for (var i = 0; i < allNodes.length; i++) {\n              var layers = mapBuilder.map.getLayers().getArray();\n              for (var j = 0; j < layers.length; j++) {\n                if (allNodes[i].data.ol_uid == layers[j].ol_uid) {\n                  layers[j].setZIndex(allNodes.length - i);\n                }\n              }\n            }\n            // Refresh legends\n            loadLegend();\n          },\n          dragEnter: function(node, data) {\n            // Don't allow dropping *over* a node (would create a child). Just\n            // allow changing the order:\n            return [\"before\", \"after\"];\n          }\n      },\n      renderColumns: function(event, data) {\n        var node = data.node;\n        var nodeRow = $(node.tr);\n        nodeRow.find(\".layerSelectedStyles\").text(node.data.styles);\n\n        var opacity = 0;\n        var visible = true;\n\n        var layers = mapBuilder.map.getLayers().getArray();\n        for (var i = 0; i < layers.length; i++) {\n          if(layers[i].ol_uid == node.data.ol_uid){\n            opacity = layers[i].getOpacity();\n            visible = layers[i].getVisible();\n          }\n        }\n\n        nodeRow.find(\".deleteLayerButton\").html(\"<button class='btn btn-sm'><i class='fas fa-trash'></i></button>\");\n\n        if(visible){\n          nodeRow.find(\".toggleVisibilityButton\").html(\"<button class='btn btn-sm'><i class='fas fa-eye'></i></button>\");\n        }else{\n          nodeRow.find(\".toggleVisibilityButton\").html(\"<button class='btn btn-sm'><i class='fas fa-eye-slash'></i></button>\");\n        }\n        \n        nodeRow.find(\".zoomToExtentButton\").html(\"<button class='btn btn-sm'><i class='fas fa-search-plus'></i></button>\");\n\n        // Add button to display layer's attribute table if eligible\n        if(nodeRow.find(\".displayDataButton\").length == 1 && node.data.hasOwnProperty('hasAttributeTable') && node.data.hasAttributeTable !== undefined){\n          var disabled = '';\n\n          if($(\"#attributeLayersTabs .nav-link [data-ol_uid='\"+node.data.ol_uid+\"']\").length != 0){\n            disabled = 'disabled';\n          }\n\n          nodeRow.find(\".displayDataButton\").html(\"<button type='button' \"+disabled+\" class='attributeLayerButton btn btn-sm'><i class='fas fa-list-ul'></i></button>\");\n        }\n\n        nodeRow.find(\".changeOrder\").html(\"<div class='fas fa-caret-up changeOrder changeOrderUp'></div><div class='fas fa-caret-down changeOrder changeOrderDown'></div>\");\n        nodeRow.find(\".toggleInfos\").html(\"<button class='btn btn-sm'><i class='fas fa-info'></i></button>\");\n\n        var buttons = \"\";\n        for (var i = 1; i < 6; i++) {\n          var active = opacity == (i*20)/100 ? \"active\" : \"\";\n          buttons += \"<button type='button' class='btn \"+active+\"'>\"+(i*20)+\"</button>\";\n        }\n\n        nodeRow.find(\".changeOpacityButton\").html('<div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Opacity\">'+buttons+'</div>');\n\n        if($(\".layerSelectedStyles:visible\").length > 0){\n          $(\"#layerSelected td.hide\").show();\n        }else{\n          $(\"#layerSelected td.hide\").hide();\n        }\n      }\n  });\n\n  $('#layerSelected').on(\"click\", \".deleteLayerButton button\", function(e){\n    var node = $.ui.fancytree.getNode(e);\n\n    var layers = mapBuilder.map.getLayers().getArray();\n    for (var i = 0; i < layers.length; i++) {\n      if(layers[i].ol_uid == node.data.ol_uid){\n        mapBuilder.map.removeLayer(layers[i]);\n      }\n    }\n    refreshLayerSelected();\n    e.stopPropagation();  // prevent fancytree activate for this row\n  });\n\n  // Toggle layer visibility\n  $('#layerSelected').on(\"click\", \".toggleVisibilityButton button\", function(e){\n    var node = $.ui.fancytree.getNode(e);\n\n    var layers = mapBuilder.map.getLayers().getArray();\n    for (var i = 0; i < layers.length; i++) {\n      if(layers[i].ol_uid == node.data.ol_uid){\n        if(layers[i].getVisible()){\n          layers[i].setVisible(false);\n          $(this).find('i').removeClass('fa-eye').addClass('fa-eye-slash');\n        }else{\n          layers[i].setVisible(true);\n          $(this).find('i').removeClass('fa-eye-slash').addClass('fa-eye');\n        }\n      }\n    }\n    e.stopPropagation();  // prevent fancytree activate for this row\n  });\n\n  $('#layerSelected').on(\"click\", \".zoomToExtentButton button\", function(e){\n    var node = $.ui.fancytree.getNode(e);\n\n    var layers = mapBuilder.map.getLayers().getArray();\n    for (var i = 0; i < layers.length; i++) {\n      if(layers[i].ol_uid == node.data.ol_uid){\n        mapBuilder.map.getView().fit(transformExtent(layers[i].getProperties().bbox, 'EPSG:4326', mapBuilder.map.getView().getProjection()));\n      }\n    }\n    e.stopPropagation();  // prevent fancytree activate for this row\n  });\n\n  $('#layerSelected').on(\"click\", \".attributeLayerButton\", function(e){\n    $('#attribute-btn').addClass(\"active\");\n\n    // Disable button to avoid multiple calls\n    $(this).prop(\"disabled\",true);\n\n    var node = $.ui.fancytree.getNode(e);\n\n    var layerName = performCleanName(node.data.name);\n    var repositoryId = node.data.repositoryId;\n    var projectId = node.data.projectId;\n\n    const promises = [\n      new Promise(resolve => \n        // GetFeature request\n        $.getJSON(lizUrls.wms, {\n           'repository':repositoryId\n          ,'project':projectId\n          ,'SERVICE':'WFS'\n          ,'REQUEST':'GetFeature'\n          ,'VERSION':'1.0.0'\n          ,'TYPENAME':layerName\n          ,'OUTPUTFORMAT': 'GeoJSON'\n          ,'GEOMETRYNAME': 'extent'\n        }, function(features) {\n          resolve(features);\n        })\n      ),\n      new Promise(resolve => \n        // DescribeFeatureType request to get aliases\n        $.getJSON(lizUrls.wms, {\n           'repository':repositoryId\n          ,'project':projectId\n          ,'SERVICE':'WFS'\n          ,'VERSION':'1.0.0'\n          ,'REQUEST':'DescribeFeatureType'\n          ,'TYPENAME':layerName\n          ,'OUTPUTFORMAT':'JSON'\n        }, function(describe) {\n          resolve(describe);\n        })\n      )\n    ];\n\n    Promise.all(promises).then(results => {\n      // TODO : cache results\n      var features = results[0].features;\n      var aliases = results[1].aliases;\n\n      // Show only WFS-published and non hidden properties\n      var propertiesFromWFS = features[0].properties;\n      var visibleProperties = [];\n\n      if(mapBuilder.lizMap[repositoryId + '|' + projectId].config.attributeLayers[node.data.name].hasOwnProperty('attributetableconfig')){\n        var columns = mapBuilder.lizMap[repositoryId + '|' + projectId].config.attributeLayers[node.data.name].attributetableconfig.columns.column;\n      }\n\n      if(columns !== undefined){\n        for (var i = 0; i < columns.length; i++) {\n          if(propertiesFromWFS.hasOwnProperty(columns[i].attributes.name) && columns[i].attributes.hidden == \"0\"){\n            visibleProperties.push(columns[i].attributes.name);\n          }\n        }\n      }else{\n        for (var property in propertiesFromWFS) {\n          visibleProperties.push(property);\n        }\n      }\n\n      var attributeHTMLTable = '<table class=\"table\">';\n\n      // Add table header\n      attributeHTMLTable += '<tr><th></th>';\n      for (var i = 0; i < visibleProperties.length; i++) {\n        var columnName = aliases[visibleProperties[i]] != \"\" ? aliases[visibleProperties[i]] : visibleProperties[i];\n        attributeHTMLTable += '<th>'+ columnName +'</th>';\n      }\n      attributeHTMLTable += '</tr>';\n\n      // Add data\n      for (var i = 0; i < features.length; i++) {\n        var feature = features[i];\n\n        attributeHTMLTable += '<tr><td><button type=\"button\" title=\"'+lizDict['zoomin']+'\" class=\"btn btn-sm zoomToFeatureExtent\" data-feature-extent=\"'+JSON.stringify(feature.bbox)+'\"><i class=\"fas fa-search-plus\"></i></button></td>';\n        for (var j = 0; j < visibleProperties.length; j++) {\n          var propertieValue = feature.properties[visibleProperties[j]];\n\n          // Replace url or media by link\n          if(typeof propertieValue === 'string'){\n            if( propertieValue.substr(0,6) == 'media/' || propertieValue.substr(0,6) == '/media/' ){\n                var rdata = propertieValue;\n                if( propertieValue.substr(0,6) == '/media/' )\n                    rdata = propertieValue.slice(1);\n                propertieValue = '<a href=\"' + lizUrls.media + '?repository='+repositoryId+'&project='+projectId+'&path=/' + rdata + '\" target=\"_blank\">'+aliases[visibleProperties[j]]+'</a>';\n            }\n            else if( propertieValue.substr(0,4) == 'http' || propertieValue.substr(0,3) == 'www' ){\n                var rdata = propertieValue;\n                if(propertieValue.substr(0,3) == 'www')\n                    rdata = 'http://' + propertieValue;\n                propertieValue = '<a href=\"' + rdata + '\" target=\"_blank\">' + propertieValue + '</a>';\n            }\n          }\n          attributeHTMLTable += '<td>'+ propertieValue +'</td>';\n        }\n        attributeHTMLTable += '</tr>';\n      }\n\n      attributeHTMLTable += '</table>';\n\n      // Hide other tabs before appending\n      $('#attributeLayersTabs .nav-link').removeClass('active');\n      $('#attributeLayersContent .tab-pane').removeClass('show active');\n\n      $('#attributeLayersTabs').append('\\\n          <li class=\"nav-item\">\\\n            <a class=\"nav-link active\" href=\"#attributeLayer-'+repositoryId+'-'+projectId+'-'+layerName+'\" role=\"tab\">'+node.title+'&nbsp;<i data-ol_uid=\"' + node.data.ol_uid + '\" class=\"fas fa-times\"></i></a>\\\n          </li>'\n        );\n\n      $('#attributeLayersContent').append('\\\n          <div class=\"tab-pane fade show active\" id=\"attributeLayer-'+repositoryId+'-'+projectId+'-'+layerName+'\" role=\"tabpanel\">\\\n            <div class=\"table\">\\\n            '+attributeHTMLTable+'\\\n            </div>\\\n          </div>'\n        );\n\n      $('#attributeLayersTabs a').on('click', function (e) {\n        e.preventDefault();\n        $(this).tab('show');\n      });\n\n      // Handle close tabs\n      $('#attributeLayersTabs .fa-times').on('click', function () {\n        var isActiveTab = $(this).closest('a').hasClass('active');\n        var previousTab = $(this).closest('li').prev();\n        var nextTab = $(this).closest('li').next();\n\n        // Remove tab and its content\n        var parentId = $(this).closest('a').attr('href');\n        $(parentId).remove();\n        $(this).closest('li').remove();\n\n        // Enable attribute table button\n        var ol_uid = $(this).data('ol_uid');\n        $.ui.fancytree.getTree(\"#layerSelected\").visit(function(node){\n          if(node.data.ol_uid == ol_uid){\n            $(node.tr).find(\".attributeLayerButton\").prop(\"disabled\",false);\n          }\n        });\n\n        // Hide bottom dock\n        if($('#attributeLayersContent').html().trim() == \"\"){\n          $('#bottom-dock').hide();\n          $('#attribute-btn').removeClass(\"active\");\n        }\n\n        // Active another sibling tab if current was active\n        if(isActiveTab){\n          if(nextTab.length > 0){\n            nextTab.find('.nav-link').tab('show');\n          }else{\n            previousTab.find('.nav-link').tab('show');\n          }\n        }\n      });\n\n      // Handle zoom to feature extent\n      $('.zoomToFeatureExtent').on('click', function () {\n        var bbox = $(this).data('feature-extent');\n        mapBuilder.map.getView().fit(transformExtent(bbox, 'EPSG:4326', mapBuilder.map.getView().getProjection()));\n      });\n\n      $('#bottom-dock').show();\n    });\n  });\n\n  $('#layerSelected').on(\"click\", \".toggleInfos button\", function(e){\n    $(this).parent().nextAll().toggle();\n\n    if($(\".layerSelectedStyles:visible\").length > 0){\n      $(\"#layerSelected th.hide\").show();\n    }else{\n      $(\"#layerSelected th.hide\").hide();\n    }\n\n    e.stopPropagation();  // prevent fancytree activate for this row\n  });\n\n  $('#layerSelected').on(\"click\", \".changeOpacityButton div button\", function(e){\n    var node = $.ui.fancytree.getNode(e);\n    var opacity = e.target.textContent;\n\n    var layers = mapBuilder.map.getLayers().getArray();\n    for (var i = 0; i < layers.length; i++) {\n      if(layers[i].ol_uid == node.data.ol_uid){\n        layers[i].setOpacity(opacity/100);\n      }\n    }\n    // UI\n    $(this).siblings().removeClass(\"active\");\n    $(this).addClass(\"active\");\n    e.stopPropagation();  // prevent fancytree activate for this row\n  });\n\n  // Handle zIndex up and down events\n  $('#layerSelected').on(\"click\", \".changeOrder\", function(e){\n    var node = $.ui.fancytree.getNode(e);\n    var siblingNode = $(this).hasClass(\"changeOrderUp\") ? node.getPrevSibling() : node.getNextSibling();\n\n    if(siblingNode){\n      var nodeLayerZIndex = -1;\n      var siblingNodeLayerZIndex = -1;\n\n      var layers = mapBuilder.map.getLayers().getArray();\n\n      for (var i = 0; i < layers.length; i++) {\n        if(layers[i].ol_uid == node.data.ol_uid){\n          nodeLayerZIndex = layers[i].getZIndex();\n        }\n        if(layers[i].ol_uid == siblingNode.data.ol_uid){\n          siblingNodeLayerZIndex = layers[i].getZIndex();\n        }\n      }\n\n      // Swap zIndex\n      for (var i = 0; i < layers.length; i++) {\n        if(layers[i].ol_uid == node.data.ol_uid){\n          layers[i].setZIndex(siblingNodeLayerZIndex);\n        }\n        if(layers[i].ol_uid == siblingNode.data.ol_uid){\n          layers[i].setZIndex(nodeLayerZIndex);\n        }\n      }\n\n      refreshLayerSelected();\n    }\n    e.stopPropagation();  // prevent fancytree activate for this row\n  });\n\n  function loadLegend(){\n    var legends = [];\n    var legendsDiv = \"\";\n    var scale = (mapBuilder.map.getView().getResolution() * 1000 * 90 * window.devicePixelRatio) / INCHTOMM;\n\n    mapBuilder.map.getLayers().forEach(function(layer) {\n      if(layer.type == \"IMAGE\"){\n        var layerSource = layer.getSource();\n        legends[layer.getZIndex()] = layerSource.getUrl()+'&SERVICE=WMS&VERSION=1.3.0&REQUEST=GetLegendGraphic&LAYER='+layerSource.getParams().LAYERS+'&STYLE='+layerSource.getParams().STYLES+'&FORMAT=image/png&TRANSPARENT=TRUE&WIDTH=150&ITEMFONTSIZE=9&SYMBOLSPACE=1&ICONLABELSPACE=2&DPI=96&LAYERSPACE=0&LAYERFONTBOLD=FALSE&SCALE='+scale;\n      }\n    });\n\n    for (var i = legends.length - 1; i >= 0; i--) {\n      if(legends[i] !== undefined){\n        legendsDiv += '<div><img src=\"' + legends[i] + '\"></div>';\n      }\n    }\n    document.getElementById('legend-content').innerHTML = legendsDiv;\n  }\n\n  // Open/Close dock behaviour\n  $('#dock-close > button').on(\"click\", function(e){\n    $('#mapmenu .dock').removeClass('active');\n    $(\"#dock\").hide();\n  });\n\n  $('#mapmenu .nav-link').on('shown.bs.tab', function (e) {\n    $(\"#dock\").show();\n  });\n\n  $('#pdf-print-btn').on(\"click\", function(e){\n\n    $(this).addClass(\"disabled\");\n    document.body.style.cursor = 'progress';\n\n    import(/* webpackChunkName: \"jspdf\" */ 'jspdf' ).then(({ default: jsPDF }) => {\n      var dims = {\n         a0: [1189, 841],\n         a1: [841, 594],\n         a2: [594, 420],\n         a3: [420, 297],\n         a4: [297, 210],\n         a5: [210, 148]\n       };\n\n      var format = document.getElementById('format-pdf-print').value;\n      var resolution = document.getElementById('resolution-pdf-print').value;\n      var dim = dims[format];\n      var width = Math.round(dim[0] * resolution / INCHTOMM);\n      var height = Math.round(dim[1] * resolution / INCHTOMM);\n      var size = mapBuilder.map.getSize();\n      var extent = mapBuilder.map.getView().calculateExtent(size);\n\n      // Note that when using import() on ES6 modules you must reference the .default property as it's the actual module object that will be returned when the promise is resolved.\n      // => https://webpack.js.org/guides/lazy-loading/\n      var pdf = new jsPDF('landscape', 'mm', format);\n      // Add title\n      pdf.setFontSize(18);\n      pdf.text($('#pdf-print-title').val(), 50, 10);\n\n      var offset = 25;\n      var maxWidthLegend = 0;\n\n      $( \"#legend img\" ).each(function( index, legend ) {\n        pdf.addImage(legend, 'PNG', 0, offset * INCHTOMM/resolution);\n        offset += legend.height;\n\n        if( legend.width > maxWidthLegend){\n          maxWidthLegend = legend.width;\n        }\n      });\n\n      // Add map and save pdf\n      mapBuilder.map.once('rendercomplete', function(event) {\n        var canvas = event.context.canvas;\n        var data = canvas.toDataURL('image/png');\n      \n        pdf.addImage(data, 'JPEG', maxWidthLegend * INCHTOMM/resolution, 20, dim[0] - (maxWidthLegend * INCHTOMM/resolution), dim[1]);\n        pdf.save('map.pdf');\n        // Reset original map size\n        mapBuilder.map.setSize(size);\n        mapBuilder.map.getView().fit(extent, {size: size});\n        document.body.style.cursor = 'auto';\n      });\n\n      // Set print size\n      var printSize = [width - maxWidthLegend, height];\n      mapBuilder.map.setSize(printSize);\n      mapBuilder.map.getView().fit(extent, {size: printSize});\n    });\n    $(this).removeClass(\"disabled\");\n  });\n\n\n  //#### MAP CONTEXT\n\n  bindMapContextEvents();\n\n  // Add user's map context\n  $('#mapcontext-add-btn').on(\"click\", function(){\n\n    // mapcontext needs a name\n    if($(\"#mapcontext-name\").val() == \"\"){\n      mAddMessage(lizDict['geobookmark.name.required'], 'danger', true, 5000);\n      return;\n    }\n\n    var mapContext = {};\n\n    // First save map center and zoom\n    mapContext.center = mapBuilder.map.getView().getCenter();\n    mapContext.zoom = mapBuilder.map.getView().getZoom();\n    // Then save layers\n    mapContext.layers = [];\n\n    mapBuilder.map.getLayers().forEach(function(layer) {\n      // Don't add base layer\n      if( ! layer.getProperties().hasOwnProperty('baseLayer')){\n\n        var layerProperties = layer.getProperties();\n        var layerSourceParams = layer.getSource().getParams();\n\n        mapContext.layers.push({\n          title: layerProperties.title,\n          repositoryId: layerProperties.repositoryId,\n          projectId: layerProperties.projectId,\n          opacity: layerProperties.opacity,\n          bbox: layerProperties.bbox,\n          popup: layerProperties.popup,\n          visible: layerProperties.visible,\n          zIndex: layerProperties.zIndex,\n          minResolution: layerProperties.minResolution,\n          maxResolution: layerProperties.maxResolution, //maxResolution peut valoir Infinity et devient null en json\n          name: layerSourceParams.LAYERS,\n          style: layerSourceParams.STYLES\n        });\n      }\n    });\n\n    $.ajax({\n      url: lizUrls.mapcontext_add,\n      type:\"POST\",\n      data: { \n        name: $(\"#mapcontext-name\").val(),\n        is_public: $(\"#publicmapcontext\").is(':checked'),\n        mapcontext: JSON.stringify(mapContext)\n       },\n      dataType:\"html\",\n      success: function( data ){\n        setMapContextContent(data);\n        mAddMessage(lizDict['geobookmark.added'], 'success', true, 5000);\n      }\n    });\n  });\n\n  function bindMapContextEvents(){\n\n    // delete map context\n    $('.btn-mapcontext-del').on(\"click\", function(){\n      if (confirm( lizDict['geobookmark.delete.confirm'] )){\n        var mcId = $(this).val();\n\n        $.ajax({\n          url: lizUrls.mapcontext_delete,\n          type:\"POST\",\n          data: { id: mcId },\n          dataType:\"html\",\n          success: function( data ){\n            setMapContextContent(data);\n          }\n        });\n      }\n      return false;\n    });\n    // show map context\n    $('.btn-mapcontext-run').click(function(){\n      var mcId = $(this).val();\n\n      $.ajax({\n        url: lizUrls.mapcontext_get,\n        type:\"GET\",\n        data: { id: mcId },\n        dataType:\"json\",\n        success: function( mapcontext ){\n          // Remove all existing layers (begins index at end because index changes after remove !)\n          var layers = mapBuilder.map.getLayers().array_;\n          for (var i = layers.length - 1; i >= 0; i--) {\n            if( ! layers[i].getProperties().hasOwnProperty('baseLayer')){\n              mapBuilder.map.removeLayer(layers[i]);\n            }\n          }\n\n          // Set zoom and center\n          mapBuilder.map.getView().setCenter(mapcontext.center);\n          mapBuilder.map.getView().setZoom(mapcontext.zoom);\n\n          // Load layers if present \n          if(mapcontext.layers.length > 0){\n            for (var i = 0; i < mapcontext.layers.length; i++) {\n              var layerContext = mapcontext.layers[i];\n\n              var newLayer = new ImageLayer({\n                title: layerContext.title,\n                repositoryId: layerContext.repositoryId,\n                projectId: layerContext.projectId,\n                opacity: layerContext.opacity,\n                bbox: layerContext.bbox,\n                popup: layerContext.popup,\n                visible: layerContext.visible,\n                zIndex: layerContext.zIndex,\n                minResolution: layerContext.minResolution,\n                maxResolution: layerContext.maxResolution != null ? layerContext.maxResolution : Infinity,\n                source: new ImageWMS({\n                  url: lizUrls.wms+'?repository=' + layerContext.repositoryId + '&project=' + layerContext.projectId,\n                  params: {\n                    'LAYERS': layerContext.name,\n                    'STYLES': layerContext.style\n                  },\n                  serverType: 'qgis'\n                })\n              });\n\n              mapBuilder.map.addLayer(newLayer);\n            }\n            refreshLayerSelected();\n          }\n        }\n      });\n\n      return false;\n    });\n  }\n\n  function setMapContextContent( mcData ){\n    // set content\n    $('#mapcontext-container').html(mcData);\n    // unbind previous click events\n    $('#mapcontext-container button').unbind('click');\n    // Bind events\n    bindMapContextEvents();\n    // Remove bname val\n    $('#mapcontext-name').val('').blur();\n  }\n\n  $('#attribute-btn').on(\"click\", function(e){\n    if($('#attributeLayersContent').html().trim() != \"\"){\n      $('#bottom-dock').show();\n      $(this).addClass('active');\n    }\n  });\n\n  // Disable tooltip on focus\n  $('[data-toggle=\"tooltip\"]').tooltip({\n     'trigger': 'hover'\n  });\n});"],"sourceRoot":""}